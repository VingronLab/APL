[{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://vingronlab.github.io/APL/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Analyzing data with APL","text":"“APL” package developed computation Association Plots, method visualization analysis single cell transcriptomics data. main focus “APL” identification genes characteristic individual clusters cells input data. working APL package please cite: citation can also obtained R running citation(\"APL\"). mathematical description method, please refer manuscript.","code":"Gralinska, E., Kohl, C., Fadakar, B. S., & Vingron, M. (2022).  Visualizing Cluster-specific Genes from Single-cell Transcriptomics Data Using Association Plots.  Journal of Molecular Biology, 434(11), 167525."},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Analyzing data with APL","text":"install APL Bioconductor, run: Alternatively package can also installed GitHub: additionally build package vignette, run instead Building vignette however take considerable time.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"APL\") library(devtools) install_github(\"VingronLab/APL\") install_github(\"VingronLab/APL\", build_vignettes = TRUE, dependencies = TRUE)"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"pytorch-installation","dir":"Articles","previous_headings":"Installation","what":"pytorch installation","title":"Analyzing data with APL","text":"order decrease computation time singular value decomposition (SVD), highly recommend installation pytorch. information pytorch installation given . Instead installing pytorch, users can also opt use R native SVD. , please use argument python = FALSE wherever applicable vignette.","code":""},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"install-pytorch-with-reticulate","dir":"Articles","previous_headings":"Installation > pytorch installation","what":"Install pytorch with reticulate","title":"Analyzing data with APL","text":"","code":"library(reticulate) install_miniconda() use_condaenv(condaenv = file.path(miniconda_path(),\"envs/r-reticulate\"),              required=TRUE)        conda_install(envname = \"r-reticulate\", packages = \"numpy\") conda_install(envname = \"r-reticulate\", packages = \"pytorch\")"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"manually-install-pytorch-with-conda","dir":"Articles","previous_headings":"Installation > pytorch installation","what":"Manually install pytorch with conda","title":"Analyzing data with APL","text":"install pytorch please download appropriate Miniconda installer system conda website. Follow installation instructions website make sure R package reticulate also installed proceeding. installed, list available conda environments via conda info --envs  One environments r-reticulate name. Depending installed system, exact path might different. Activate environment install pytorch .","code":"conda activate ~/.local/share/r-miniconda/envs/r-reticulate # change path accordingly. conda install numpy conda install pytorch"},{"path":[]},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"setup","dir":"Articles","previous_headings":"Preprocessing","what":"Setup","title":"Analyzing data with APL","text":"vignette use small data set published Darmanis et al. (2015) consisting 466 human adult cortical single cells sequenced Fluidigm platform example. obtain data necessary follow vignette use Bioconductor package scRNAseq. Besides package APL use Bioconductor packages preprocess data. Namely use SingleCellExperiment, scater scran. However, preprocessing equally performed single-cell RNA-seq analysis suite Seurat. preprocessing steps performed according recommendations published Orchestrating Single-Cell Analysis Bioconductor Amezquita et al. (2022). information rational behind please refer book.","code":"library(APL) library(scRNAseq) library(SingleCellExperiment) library(scran) library(scater) set.seed(1234)"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"loading-the-data","dir":"Articles","previous_headings":"Preprocessing","what":"Loading the data","title":"Analyzing data with APL","text":"start loading preprocessing Darmanis data.","code":"darmanis <- DarmanisBrainData() #> see ?scRNAseq and browseVignettes('scRNAseq') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache #> see ?scRNAseq and browseVignettes('scRNAseq') for documentation #> downloading 1 resources #> retrieving 1 resource #> loading from cache darmanis #> class: SingleCellExperiment  #> dim: 22085 466  #> metadata(0): #> assays(1): counts #> rownames(22085): 1/2-SBSRNA4 A1BG ... ZZZ3 tAKR #> rowData names(0): #> colnames(466): GSM1657871 GSM1657872 ... GSM1658365 GSM1658366 #> colData names(5): age c1.chip.id cell.type experiment_sample_name #>   tissue #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0):"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"normalization-pca-clustering","dir":"Articles","previous_headings":"Preprocessing","what":"Normalization, PCA & Clustering","title":"Analyzing data with APL","text":"Association Plots APL computed based normalized expression data. Therefore, first normalize counts Darmanis data calculate PCA UMAP visualizations later. now, APL requires data clustered beforehand. darmanis data comes already annotated, use cell types stored cell.type metadata column instead performing clustering.","code":"set.seed(100) clust <- quickCluster(darmanis)  darmanis <- computeSumFactors(darmanis, cluster=clust, min.mean=0.1) darmanis <- logNormCounts(darmanis)  dec <- modelGeneVar(darmanis) top_darmanis <- getTopHVGs(dec, n=5000) darmanis <- fixedPCA(darmanis, subset.row=top_darmanis)  darmanis <- runUMAP(darmanis, dimred=\"PCA\") #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by 'spam' #> Found more than one class \"dist\" in cache; using the first, from namespace 'BiocGenerics' #> Also defined by 'spam'  plotReducedDim(darmanis, dimred=\"UMAP\", colour_by=\"cell.type\")"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"Analyzing data with APL","text":"fastest way compute Association Plot selected cluster cells input data using wrapper function runAPL(). runAPL() automates analysis steps ease use. example, generate Association Plot oligodendrocytes can use following command:  generated Association Plot computed based log-normalized count matrix. default runAPL uses top 5,000 variable genes data, data can subset number genes changing value argument top. dimensionality CA determined automatically elbow rule described (see ). default behavior can overriden setting dimensions manually (parameter dims). cluster-specificity score (\\(S_\\alpha\\)) gene also calculated (score = TRUE). order better explore data, type can set \"plotly\" obtain interactive plot. runAPL many arguments customize output fine tune calculations. Please refer documentation (?runAPL) information. following sections vignette discuss choice dimensionality \\(S_\\alpha\\)-score.","code":"runAPL(darmanis,        assay = \"logcounts\",        top = 5000,        group = which(darmanis$cell.type == \"oligodendrocytes\"),        type = \"ggplot\",        python = TRUE) #> Warning in rm_zeros(obj): Matrix contains rows with only 0s. These rows were #> removed. If undesired set rm_zeros = FALSE. #>  #>  Using 74 dimensions. Subsetting. #>    |                                                                               |                                                                      |   0%   |                                                                               |======================================================================| 100% #>    |                                                                               |                                                                      |   0%   |                                                                               |=======================                                               |  33%   |                                                                               |===============================================                       |  67%   |                                                                               |======================================================================| 100%"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"step-by-step-way-of-computing-association-plots","dir":"Articles","previous_headings":"","what":"Step-by-step way of computing Association Plots","title":"Analyzing data with APL","text":"Alternatively, Association Plots can computed step--step. allows adjust Association Plots user’s needs. explain step process generating Association Plots.","code":""},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"correspondence-analysis","dir":"Articles","previous_headings":"Step-by-step way of computing Association Plots","what":"Correspondence Analysis","title":"Analyzing data with APL","text":"first step Association Plot computations correspondence analysis (CA). CA data dimensionality reduction method similar PCA, however allows simultaneous embedding cells genes input data space. example perform CA log-normalized count matrix darmanis brain data. function cacomp accepts input matrix non-negative entries, single-cell RNA-seq, bulk RNA-seq data. ease use, cacomp accepts also SingleCellExperiment Seurat objects, however additionally specify via assay /slot (Seurat) parameter extract data. Importantly, order ensure interpretability results cacomp (related functions runAPL) requires input matrix contains row column names. performing feature selection CA, can set argument top desired number genes highest variance across cells input data retain analysis. default, top 5,000 variable genes kept good compromise computational time keeping relevant genes. want ensure however even marker genes smaller clusters kept, can increase number genes. output cacomp object class cacomp: can seen summarized output, default types coordinates CA space (principal standardized) calculated. coordinates Association Plot calculated, also shown output cacomp. Slots accessed accessor function: case SingleCellExperiment Seurat objects, can alternatively set return_input = TRUE get input object back, CA results computed “APL” stored appropriate slot dimension reduction. also allows using plotting functions come packages:   However, functions apl_coords() require information stored single-cell container objects. therefore often easier work cacomp object instead. can convert Seurat SingleCellExperiment objects CA results stored cacomp object using function .cacomp():","code":"# Computing CA on logcounts logcounts <- logcounts(darmanis) ca <- cacomp(obj = logcounts,              top = 5000,              python = TRUE) #> Warning in rm_zeros(obj): Matrix contains rows with only 0s. These rows were #> removed. If undesired set rm_zeros = FALSE.  # The above is equivalent to: # ca <- cacomp(obj = darmanis, #              assay = \"logcounts\", #              top = 5000, #              python = TRUE) ca #> cacomp object with 466 columns, 5000 rows and 465 dimensions. #> Calc. standard coord.:  std_coords_rows, std_coords_cols #> Calc. principal coord.: prin_coords_rows, prin_coords_cols #> Calc. APL coord.:        #> Explained inertia:      1.1% Dim1, 0.7% Dim2 cacomp_slot(ca, \"std_coords_cols\")[1:5, 1:5] #>                  Dim1       Dim2       Dim3        Dim4       Dim5 #> GSM1657871 -0.1067086 -0.1253297  0.5046485 -0.32461780  2.4262520 #> GSM1657872  1.5101357 -0.4299418 -0.1219273  0.07942823  0.2362747 #> GSM1657873 -0.2237619 -0.2610148  0.1955599  0.16963578  2.1477040 #> GSM1657874 -0.5680872 -0.1138251  0.4725071  0.04409559 -0.6708562 #> GSM1657875 -0.4739344 -0.2505648  0.4384626  0.10316896  2.8910899 darmanis <- cacomp(obj = darmanis,                assay = \"logcounts\",                top = 5000,                return_input = TRUE,                python = TRUE) #> Warning in rm_zeros(obj): Matrix contains rows with only 0s. These rows were #> removed. If undesired set rm_zeros = FALSE.  plotReducedDim(darmanis, dimred=\"CA\",                ncomponents = c(1,2),                colour_by=\"cell.type\") plotReducedDim(darmanis, dimred=\"CA\",                ncomponents = c(3,4),                colour_by=\"cell.type\") # Converting the object pbmc to cacomp ca <- as.cacomp(darmanis)"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"dim_reduc","dir":"Articles","previous_headings":"Step-by-step way of computing Association Plots","what":"Reducing the number of CA dimensions","title":"Analyzing data with APL","text":"working high-dimensional data, singular value decomposition often many dimensions representing noise data. order minimize noise, generally recommended reduce dimensionsionality data generating Association Plots. number dimensions retain can computed using function pick_dims. function offers three standard methods implemented: elbow rule (method = \"elbow_rule\") - number dimensions retain calculated based scree plots generated randomized data, corresponds point plot band randomized singular values enters band original singular values, 80% rule (method = \"maj_inertia\") - first dimensions retained total account >= 80% total inertia, average rule (method = \"avg_inertia\") - dimensions retained account inertia single dimension average. Additionally, user can compute scree plot choose number dimensions :  scree plot can see first dimension explains ~1% total inertia observe “jump” scree plot roughly 5 dimensions. first dimensions however explain small amount total inertia. compute number dimensions using elbow rule. demonstration, three data permutations computed: case elbow rule leads much higher number dimensions. example elbow rule suggests keep 74 dimensions explain 28% total inertia data. Finally, can reduce dimensionality data desired number dimensions:","code":"pick_dims(ca, method = \"scree_plot\") +   xlim(c(0,20)) #> Warning: Removed 445 rows containing missing values #> (`position_stack()`). #> Warning: Removed 1 rows containing missing values (`geom_col()`). #> Warning: Removed 445 rows containing missing values (`geom_line()`). pd <- pick_dims(ca,                 mat = logcounts(darmanis),                 method = \"elbow_rule\",                 reps = 3,                  python = TRUE) pd #> [1] 74 # Compute the amount of inertia explained by each of the dimensions D <- cacomp_slot(ca, \"D\") expl_inertia <- (D^2/sum(D^2))*100  # Compute the amount of intertia explained  # by the number of dimensions defined by elbow rule sum(expl_inertia[seq_len(pd)]) #> [1] 28.00469 ca <- subset_dims(ca, dims = pd)"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"association-plots","dir":"Articles","previous_headings":"Step-by-step way of computing Association Plots","what":"Association Plots","title":"Analyzing data with APL","text":"working single-cell transcriptomics data often interested genes associated cluster cells. reveal genes can compute Association Plot selected cluster cells. following example want generate Association Plot cluster endothelial cells: computing coordinates genes cells Association Plot able plot results using apl function.  Association Plot genes represented blue circles. right gene located associated chosen cluster cells lower y-axis value, specific selected cluster. Additionally, possible highlight Association Plot set genes. example highlighted five genes (APOLD1, TM4SF1, SULT1B1, ESM1, SELE) known marker genes endothelial cells. can see plot, located right part plot, confirms specificity endothelial cells. default plot genes Association Plot. also display cells Association Plot, use argument show_cols = TRUE. way can identify cells show similar expression profiles cells interest. Cells belong cluster interest colored red, remaining cells colored violet. Furthermore, interactive plot can hover genes see name can created setting type = \"plotly\".","code":"# Specifying a cell cluster of interest endo <- which(darmanis$cell.type == \"endothelial\")  # Calculate Association Plot coordinates for endothelial cells ca <- apl_coords(ca, group = endo) # endothelial marker genes marker_genes <- c(\"APOLD1\", \"TM4SF1\", \"SULT1B1\", \"ESM1\", \"SELE\")  # Plot APL apl(ca,     row_labs = TRUE,     rows_idx = marker_genes,      type = \"ggplot\") # type = \"plotly\" for an interactive plot"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"association-plots-with-the-s_alpha-scores","dir":"Articles","previous_headings":"Step-by-step way of computing Association Plots","what":"Association Plots with the \\(S_\\alpha\\)-scores","title":"Analyzing data with APL","text":"\\(S_\\alpha\\)-score allows us rank genes specificity selected cell cluster, computed gene Association Plot separately. higher \\(S_\\alpha\\)-score gene, characteristic expression investigated cell cluster. \\(S_\\alpha\\)-scores can computed using apl_score function. display \\(S_\\alpha\\)-scores Association Plot, can use argument show_score = TRUE apl function:  default, genes \\(S_\\alpha\\)-score larger 0 colored tend genes interest consider cluster-specific genes. cutoff can easily changed score_cutoff argument apl(). \\(S_\\alpha\\)-scores stored \"APL_score\" slot can accessed follows: see expression genes highest \\(S_\\alpha\\)-scores (selected genes) across cell types data can use plotting functions provided scater:   expected, 3 highly scored genes -expressed endothelial cells. Due small size data set number cells cluster (20 466 cells endothelial cells) cluster specific genes expressed cells. data sets nowadays significantly larger major concern can mitigated performing stringent feature selection CA.","code":"# Compute S-alpha score # For the calculation the input matrix is also required. ca <- apl_score(ca,                 mat = logcounts(darmanis),                 reps = 5,                 python = TRUE) apl(ca,     show_score = TRUE,     type = \"ggplot\") head(cacomp_slot(ca, \"APL_score\")) #>             Rowname    Score Row_num Rank #> PRKCDBP     PRKCDBP 2.816535    2390    1 #> IFITM1       IFITM1 2.725801    2081    2 #> OR2A20P     OR2A20P 2.633763    4888    3 #> OR4C46       OR4C46 2.633763    4889    4 #> LOC646268 LOC646268 2.633763      81    5 #> FOXC1         FOXC1 2.493272    2937    6 scores <- cacomp_slot(ca, \"APL_score\")  plotExpression(darmanis,                 features = head(scores$Rowname,3),                x = \"cell.type\",                 colour_by = \"cell.type\") plotReducedDim(darmanis,                 dimred=\"UMAP\",                colour_by= scores$Rowname[2])"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"visualization-of-ca","dir":"Articles","previous_headings":"Step-by-step way of computing Association Plots","what":"Visualization of CA","title":"Analyzing data with APL","text":"addition Association Plots “APL” produces also forms output. instance, can use “APL” generate two- three-dimensional correspondence analysis projection data. -called biplot visualizes cells genes input data can created using function ca_biplot. Alternatively, three-dimensional data projection plot can generated using function ca_3Dplot. generate biplots cacomp object required.  described plots give us quick overview first 2 dimensions data (dimensions can plotted). shown commented-code, interactively explore projection data type = \"plotly\" can set.","code":"# Specifying a cell cluster of interest endo <- which(darmanis$cell.type == \"endothelial\")  # Creating a static plot ca_biplot(ca, col_labels = endo, type = \"ggplot\") # Creating an interactive plot # ca_biplot(ca, type = \"plotly\", col_labels = platelets)  # 3D plot # ca_3Dplot(ca, col_labels = platelets)"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"apl-and-go-enrichment-analysis","dir":"Articles","previous_headings":"","what":"APL and GO enrichment analysis","title":"Analyzing data with APL","text":"computing Association Plot identifying set genes specific selected cluster cells might interested conducting Gene Ontology (GO) enrichment analysis identified gene set. conduct GO enrichment analysis microglia specific genes idenitfied using Association Plot, first need compute coordinates genes Association Plot microglia cells, well \\(S_\\alpha\\)-score gene: Now can conduct GO enrichment analysis implemented package topGO using cluster-specific genes Association Plot. default use genes \\(S_\\alpha\\)-score higher 0, cutoff may adjusted depending dataset. example restrict genes \\(S_\\alpha\\)-score higher 1 restrict truly significant genes. case \\(S_\\alpha\\)-scores calculated, one can also choose use ngenes (default 1000) genes highest x-coordinates setting use_coords = TRUE. function plot_enrichment() implemented visualize topGO results form dotplot. Microglia cells innate immune cells brain highly scored genes enriched gene sets related immune response microglia specific gene sets one expect.","code":"# Get indices of microglia cells microglia <- which(darmanis$cell.type == \"microglia\")  # Calculate Association Plot coordinates of the genes and the $S_\\alpha$-scores ca <- apl_coords(ca, group = microglia)  ca <- apl_score(ca,                 mat = logcounts(darmanis),                 reps = 5,                 python = TRUE) enr <- apl_topGO(ca,                  ontology = \"BP\",                  organism = \"hs\",                  score_cutoff = 1) head(enr) #>        GO.ID #> 1 GO:0045087 #> 2 GO:0019886 #> 3 GO:0032755 #> 4 GO:0032760 #> 5 GO:0002250 #> 6 GO:0002503 #>                                                                                Term #> 1                                                            innate immune response #> 2 antigen processing and presentation of exogenous peptide antigen via MHC class II #> 3                                   positive regulation of interleukin-6 production #> 4                           positive regulation of tumor necrosis factor production #> 5                                                          adaptive immune response #> 6                        peptide antigen assembly with MHC class II protein complex #>   Annotated Significant Expected raw.p.value #> 1       278          57    17.67     6.5e-12 #> 2        15          11     0.95     5.8e-11 #> 3        39          15     2.48     4.4e-09 #> 4        45          16     2.86     5.0e-09 #> 5       166          41    10.55     2.5e-08 #> 6        11           8     0.70     3.3e-08 plot_enrichment(enr)"},{"path":"https://vingronlab.github.io/APL/articles/APL.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Analyzing data with APL","text":"","code":"#> R version 4.3.2 (2023-10-31) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] SparseM_1.81                org.Hs.eg.db_3.18.0         #>  [3] AnnotationDbi_1.64.1        scater_1.30.1               #>  [5] ggplot2_3.4.4               scran_1.30.2                #>  [7] scuttle_1.12.0              scRNAseq_2.16.0             #>  [9] SingleCellExperiment_1.24.0 SummarizedExperiment_1.32.0 #> [11] Biobase_2.62.0              GenomicRanges_1.54.1        #> [13] GenomeInfoDb_1.38.5         IRanges_2.36.0              #> [15] S4Vectors_0.40.2            BiocGenerics_0.48.1         #> [17] MatrixGenerics_1.14.0       matrixStats_1.2.0           #> [19] APL_1.7.1                   BiocStyle_2.30.0            #>  #> loaded via a namespace (and not attached): #>   [1] fs_1.6.3                      ProtGenerics_1.34.0           #>   [3] spatstat.sparse_3.0-3         bitops_1.0-7                  #>   [5] httr_1.4.7                    RColorBrewer_1.1-3            #>   [7] tools_4.3.2                   sctransform_0.4.1             #>   [9] utf8_1.2.4                    R6_2.5.1                      #>  [11] lazyeval_0.2.2                uwot_0.1.16                   #>  [13] withr_3.0.0                   sp_2.1-3                      #>  [15] prettyunits_1.2.0             gridExtra_2.3                 #>  [17] progressr_0.14.0              cli_3.6.2                     #>  [19] textshaping_0.3.7             spatstat.explore_3.2-5        #>  [21] fastDummies_1.7.3             labeling_0.4.3                #>  [23] sass_0.4.8                    topGO_2.54.0                  #>  [25] Seurat_5.0.1                  spatstat.data_3.0-4           #>  [27] ggridges_0.5.6                pbapply_1.7-2                 #>  [29] pkgdown_2.0.7                 Rsamtools_2.18.0              #>  [31] systemfonts_1.0.5             parallelly_1.36.0             #>  [33] limma_3.58.1                  RSQLite_2.3.5                 #>  [35] FNN_1.1.4                     generics_0.1.3                #>  [37] BiocIO_1.12.0                 ica_1.0-3                     #>  [39] spatstat.random_3.2-2         dplyr_1.1.4                   #>  [41] GO.db_3.18.0                  Matrix_1.6-5                  #>  [43] ggbeeswarm_0.7.2              fansi_1.0.6                   #>  [45] abind_1.4-5                   lifecycle_1.0.4               #>  [47] edgeR_4.0.14                  yaml_2.3.8                    #>  [49] SparseArray_1.2.3             BiocFileCache_2.10.1          #>  [51] Rtsne_0.17                    grid_4.3.2                    #>  [53] blob_1.2.4                    dqrng_0.3.2                   #>  [55] promises_1.2.1                ExperimentHub_2.10.0          #>  [57] crayon_1.5.2                  miniUI_0.1.1.1                #>  [59] lattice_0.21-9                beachmat_2.18.0               #>  [61] cowplot_1.1.3                 GenomicFeatures_1.54.3        #>  [63] KEGGREST_1.42.0               metapod_1.10.1                #>  [65] pillar_1.9.0                  knitr_1.45                    #>  [67] rjson_0.2.21                  future.apply_1.11.1           #>  [69] codetools_0.2-19              leiden_0.4.3.1                #>  [71] glue_1.7.0                    data.table_1.15.0             #>  [73] vctrs_0.6.5                   png_0.1-8                     #>  [75] spam_2.10-0                   org.Mm.eg.db_3.18.0           #>  [77] gtable_0.3.4                  cachem_1.0.8                  #>  [79] xfun_0.41                     S4Arrays_1.2.0                #>  [81] mime_0.12                     survival_3.5-7                #>  [83] statmod_1.5.0                 bluster_1.12.0                #>  [85] interactiveDisplayBase_1.40.0 ellipsis_0.3.2                #>  [87] fitdistrplus_1.1-11           ROCR_1.0-11                   #>  [89] nlme_3.1-163                  bit64_4.0.5                   #>  [91] progress_1.2.3                filelock_1.0.3                #>  [93] RcppAnnoy_0.0.22              rprojroot_2.0.4               #>  [95] bslib_0.6.1                   irlba_2.3.5.1                 #>  [97] vipor_0.4.7                   KernSmooth_2.23-22            #>  [99] colorspace_2.1-0              DBI_1.2.1                     #> [101] tidyselect_1.2.0              bit_4.0.5                     #> [103] compiler_4.3.2                curl_5.2.0                    #> [105] graph_1.80.0                  BiocNeighbors_1.20.2          #> [107] xml2_1.3.6                    desc_1.4.3                    #> [109] DelayedArray_0.28.0           plotly_4.10.4                 #> [111] bookdown_0.37                 rtracklayer_1.62.0            #> [113] scales_1.3.0                  lmtest_0.9-40                 #> [115] rappdirs_0.3.3                stringr_1.5.1                 #> [117] digest_0.6.34                 goftest_1.2-3                 #> [119] spatstat.utils_3.0-4          rmarkdown_2.25                #> [121] XVector_0.42.0                htmltools_0.5.7               #> [123] pkgconfig_2.0.3               sparseMatrixStats_1.14.0      #> [125] highr_0.10                    dbplyr_2.4.0                  #> [127] fastmap_1.1.1                 ensembldb_2.26.0              #> [129] rlang_1.1.3                   htmlwidgets_1.6.4             #> [131] shiny_1.8.0                   DelayedMatrixStats_1.24.0     #> [133] farver_2.1.1                  jquerylib_0.1.4               #> [135] zoo_1.8-12                    jsonlite_1.8.8                #> [137] BiocParallel_1.36.0           BiocSingular_1.18.0           #> [139] RCurl_1.98-1.14               magrittr_2.0.3                #> [141] GenomeInfoDbData_1.2.11       dotCall64_1.1-1               #> [143] patchwork_1.2.0               munsell_0.5.0                 #> [145] Rcpp_1.0.12                   viridis_0.6.5                 #> [147] reticulate_1.35.0.9000        stringi_1.8.3                 #> [149] zlibbioc_1.48.0               MASS_7.3-60                   #> [151] AnnotationHub_3.10.0          plyr_1.8.9                    #> [153] parallel_4.3.2                listenv_0.9.1                 #> [155] ggrepel_0.9.5                 deldir_2.0-2                  #> [157] Biostrings_2.70.2             splines_4.3.2                 #> [159] tensor_1.5                    hms_1.1.3                     #> [161] locfit_1.5-9.8                igraph_2.0.1.1                #> [163] spatstat.geom_3.2-8           RcppHNSW_0.5.0                #> [165] ScaledMatrix_1.10.0           reshape2_1.4.4                #> [167] biomaRt_2.58.2                BiocVersion_3.18.1            #> [169] XML_3.99-0.16.1               evaluate_0.23                 #> [171] SeuratObject_5.0.1            BiocManager_1.30.22           #> [173] httpuv_1.6.14                 RANN_2.6.1                    #> [175] tidyr_1.3.1                   purrr_1.0.2                   #> [177] polyclip_1.10-6               future_1.33.1                 #> [179] scattermore_1.2               rsvd_1.0.5                    #> [181] xtable_1.8-4                  restfulr_0.0.15               #> [183] AnnotationFilter_1.26.0       RSpectra_0.16-1               #> [185] later_1.3.2                   viridisLite_0.4.2             #> [187] ragg_1.2.7                    tibble_3.2.1                  #> [189] beeswarm_0.4.0                memoise_2.0.1                 #> [191] GenomicAlignments_1.38.2      cluster_2.1.4                 #> [193] globals_0.16.2                here_1.0.1"},{"path":"https://vingronlab.github.io/APL/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clemens Kohl. Maintainer, author. Elzbieta Gralinska. Author. Martin Vingron. Author.","code":""},{"path":"https://vingronlab.github.io/APL/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gralinska Elzbieta, Kohl Clemens, Sokhandan Fadakar Bita, Vingron Martin (2022) Visualizing Cluster-specific Genes Single-cell Transcriptomics Data Using Association Plots Journal Molecular Biology, 434(11), 167525","code":"@Article{,   title = {Visualizing Cluster-specific Genes from Single-cell Transcriptomics Data Using Association Plots},   author = {Gralinska Elzbieta and Kohl Clemens and Sokhandan Fadakar Bita and Vingron Martin},   year = {2022},   journal = {Journal of Molecular Biology}, }"},{"path":"https://vingronlab.github.io/APL/index.html","id":"apl","dir":"","previous_headings":"","what":"Association Plots","title":"Association Plots","text":"APL package developed computation Association Plots, method visualization analysis single cell transcriptomics data. main focus APL identification genes characteristic individual clusters cells input data. working APL package please cite:","code":"Gralinska, E., Kohl, C., Fadakar, B. S., & Vingron, M. (2022).  Visualizing Cluster-specific Genes from Single-cell Transcriptomics Data Using Association Plots.  Journal of Molecular Biology, 434(11), 167525."},{"path":"https://vingronlab.github.io/APL/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Association Plots","text":"APL can installed GitHub: additionally build package vignette, run instead: Building vignette however take considerable time. vignette can also found link: https://vingronlab.github.io/APL/ (hyperlink GitHub repository description). install APL Bioconductor, run:","code":"library(devtools) install_github(\"VingronLab/APL\") install_github(\"VingronLab/APL\", build_vignettes = TRUE, dependencies = TRUE) if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"APL\")"},{"path":"https://vingronlab.github.io/APL/index.html","id":"pytorch-installation","dir":"","previous_headings":"","what":"Pytorch installation","title":"Association Plots","text":"order speed singular value decomposition, highly recommend installation pytorch. Users can instead also opt use slower R native SVD. , please set argument python = FALSE wherever applicable package vignette.","code":""},{"path":"https://vingronlab.github.io/APL/index.html","id":"install-pytorch-with-reticulate","dir":"","previous_headings":"Pytorch installation","what":"Install pytorch with reticulate","title":"Association Plots","text":"","code":"library(reticulate) install_miniconda()  conda_install(envname = \"r-reticulate\", packages = \"numpy\") conda_install(envname = \"r-reticulate\", packages = \"pytorch\")"},{"path":"https://vingronlab.github.io/APL/index.html","id":"manually-install-pytorch-with-conda","dir":"","previous_headings":"Pytorch installation","what":"Manually install pytorch with conda","title":"Association Plots","text":"Download appropriate Miniconda installer system conda website. Follow installation instructions website make sure R package reticulate also installed proceeding. installed, list available conda environments via conda info --envs  One environments r-reticulate name. Depending installed system, exact path might different. Activate environment install pytorch .","code":"conda activate ~/.local/share/r-miniconda/envs/r-reticulate # change path accordingly. conda install numpy conda install pytorch"},{"path":"https://vingronlab.github.io/APL/index.html","id":"feature-overview","dir":"","previous_headings":"","what":"Feature overview","title":"Association Plots","text":"Please run installation build_vignettes = TRUE introduction package.","code":"vignette(\"APL\")"},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":null,"dir":"Reference","previous_headings":"","what":"Association Plot — apl","title":"Association Plot — apl","text":"Plot Association Plot chosen columns.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Association Plot — apl","text":"","code":"apl(   caobj,   type = \"ggplot\",   rows_idx = NULL,   cols_idx = caobj@group,   row_labs = FALSE,   col_labs = FALSE,   show_score = FALSE,   show_cols = FALSE,   show_rows = TRUE,   score_cutoff = 0,   score_color = \"rainbow\" )"},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Association Plot — apl","text":"caobj object class \"cacomp\" \"APL\" apl  coordinates calculated. type \"ggplot\"/\"plotly\". static plot string \"ggplot\",  interactive plot \"plotly\". Default \"ggplot\". rows_idx numeric/character vector.  Indices names rows labelled. Default NULL. cols_idx numeric/character vector.  Indices names columns labelled.  Default label columns making centroid: caobj@group. row_labs Logical. Whether labels rows indicated rows_idx  labeled text. Default TRUE. col_labs Logical. Whether labels columns indicated cols_idx  shouls labeled text. Default FALSE. show_score Logical. Whether S-alpha score shown  plot. show_cols Logical. Whether column points plotted. show_rows Logical. Whether row points plotted. score_cutoff Numeric. Rows (genes) score >= score_cutoff  colored according score show_score = TRUE. score_color Either \"rainbow\" \"viridis\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Association Plot — apl","text":"Either ggplot plotly object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Association Plot — apl","text":"interactive plot type=\"plotly\" can chosen, otherwise static plot  returned. row column coordinates already calculated  `apl_coords()`.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Association Plot — apl","text":"Association Plots: Visualizing associations high-dimensional  correspondence analysis biplots  Elzbieta Gralinska, Martin Vingron  bioRxiv 2020.10.23.352096; doi: https://doi.org/10.1101/2020.10.23.352096","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Association Plot — apl","text":"","code":"set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  # Calculate APL coordinates for arbitrary group ca <- apl_coords(ca, group = 1:10)  # plot results # Note: # Due to random gene expression & group, no highly # associated genes are visible. apl(ca, type = \"ggplot\")"},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Association Plot coordinates — apl_coords","title":"Calculate Association Plot coordinates — apl_coords","text":"Calculates Association Plot coordinates either rows,  columns (default).","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Association Plot coordinates — apl_coords","text":"","code":"apl_coords(caobj, group, calc_rows = TRUE, calc_cols = TRUE)"},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Association Plot coordinates — apl_coords","text":"caobj \"cacomp\" object principal row coordinates  standardized column coordinates calculated. group Numeric/Character. Vector indices column names  columns calculate centroid/x-axis direction. calc_rows TRUE/FALSE. Whether apl row coordinates  calculated. Default TRUE. calc_cols TRUE/FALSE. Whether apl column coordinates  calculated. Default TRUE.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Association Plot coordinates — apl_coords","text":"Returns input \"cacomp\" object adds components \"apl_rows\" / \"apl_cols\" row column coordinates. \"group\" indices columns used calculate  centroid saved.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Association Plot coordinates — apl_coords","text":"Coordinates (x,y) row vector \\(\\vec{r}\\) defined $$x(\\vec{r}) := \\left|\\vec{r}\\right|\\cos(\\phi(\\vec{r}))$$ $$y(\\vec{r}) := \\left|\\vec{r}\\right|\\sin(\\phi(\\vec{r}))$$ x-direction determined calculating centroid columns  selected indices \"group\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Association Plot coordinates — apl_coords","text":"Association Plots: Visualizing associations high-dimensional  correspondence analysis biplots Elzbieta Gralinska, Martin Vingron bioRxiv 2020.10.23.352096; doi: https://doi.org/10.1101/2020.10.23.352096","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Association Plot coordinates — apl_coords","text":"","code":"set.seed(1234) # Simulate scRNAseq data cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20),                    cell_4 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored. # Calculate APL coordinates ca <- apl_coords(ca, group = 3:4)"},{"path":"https://vingronlab.github.io/APL/reference/apl_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Association Plot with ggplot — apl_ggplot","title":"Plot Association Plot with ggplot — apl_ggplot","text":"Uses ggplot plot Association Plot","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Association Plot with ggplot — apl_ggplot","text":"","code":"apl_ggplot(   rows,   rows_group = NULL,   cols,   cols_group = NULL,   rows_scored = NULL,   rows_color = \"#0066FF\",   rows_high_color = \"#FF0000\",   cols_color = \"#601A4A\",   cols_high_color = \"#EE442F\",   score_color = \"rainbow\",   row_labs = FALSE,   col_labs = FALSE,   show_score = FALSE,   show_cols = FALSE,   show_rows = TRUE )"},{"path":"https://vingronlab.github.io/APL/reference/apl_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Association Plot with ggplot — apl_ggplot","text":"rows Row APL-coordinates rows_group Row AP-coordinates highlight cols Column AP-coordinates cols_group Column AP-coordinates group highlighted. rows_scored Row AP-coordinates rows score cutoff. rows_color Color rows rows_high_color Color rows highlighted. cols_color Column points color. cols_high_color Color column points highlighted.. score_color Color scheme row points score. row_labs Logical. Whether labels rows indicated rows_idx  labeled text. Default TRUE. col_labs Logical. Whether labels columns indicated cols_idx  shouls labeled text. Default FALSE. show_score Logical. Whether S-alpha score shown  plot. show_cols Logical. Whether column points plotted. show_rows Logical. Whether row points plotted.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Association Plot with ggplot — apl_ggplot","text":"ggplot Association Plot","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Association Plot with plotly — apl_plotly","title":"Plot Association Plot with plotly — apl_plotly","text":"Uses plotly generate interactive Association Plot","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Association Plot with plotly — apl_plotly","text":"","code":"apl_plotly(   rows,   rows_group = NULL,   cols,   cols_group,   rows_scored = NULL,   rows_color = \"#0066FF\",   rows_high_color = \"#FF0000\",   cols_color = \"#601A4A\",   cols_high_color = \"#EE442F\",   score_color = \"rainbow\",   row_labs = FALSE,   col_labs = FALSE,   show_score = FALSE,   show_cols = FALSE,   show_rows = TRUE )"},{"path":"https://vingronlab.github.io/APL/reference/apl_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Association Plot with plotly — apl_plotly","text":"rows Row APL-coordinates rows_group Row AP-coordinates highlight cols Column AP-coordinates cols_group Column AP-coordinates group highlighted. rows_scored Row AP-coordinates rows score cutoff. rows_color Color rows rows_high_color Color rows highlighted. cols_color Column points color. cols_high_color Color column points highlighted. score_color Color scheme row points score. row_labs Logical. Whether labels rows indicated rows_idx  labeled text. Default TRUE. col_labs Logical. Whether labels columns indicated cols_idx  shouls labeled text. Default FALSE. show_score Logical. Whether S-alpha score shown  plot. show_cols Logical. Whether column points plotted. show_rows Logical. Whether row points plotted.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_plotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Association Plot with plotly — apl_plotly","text":"Interactive plotly Association Plot","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Find rows most highly associated with a condition — apl_score","title":"Find rows most highly associated with a condition — apl_score","text":"Ranks rows calculated score balances association row  condition associated conditions.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find rows most highly associated with a condition — apl_score","text":"","code":"apl_score(   caobj,   mat,   dims = caobj@dims,   group = caobj@group,   reps = 10,   quant = 0.99,   python = FALSE,   store_perm = TRUE )"},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find rows most highly associated with a condition — apl_score","text":"caobj \"cacomp\" object principal row coordinates  standardized column coordinates calculated. mat numeric matrix. sequencing count matrix, gene expression  values genes rows samples/cells columns. contain row column names. dims Integer. Number CA dimensions retain. Needs  caobj! group Vector indices columns calculate centroid/x-axis  direction. reps Integer. Number permutations perform. Default = 10. quant Numeric. Single number 0 1 indicating quantile  used calculate cutoff. Default 0.99. python logical value indicating whether use singular-value  decomposition python package torch. store_perm Logical. Whether permuted data stored CA  object. implementation dramatically speeds computation compared `svd()`  R.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find rows most highly associated with a condition — apl_score","text":"Returns input \"cacomp\" object \"APL_score\" component added. APL_score contains data frame ranked rows, score  original row number.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find rows most highly associated with a condition — apl_score","text":"score calculated permuting values row determine  cutoff angle 99 $$S_{alpha}(x,y)=x-\\frac{y}{\\tan\\alpha}$$ default permutation repeated 10 times, large matrices  can reduced. store_perm TRUE permuted data stored cacomp object  can used future scoring.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find rows most highly associated with a condition — apl_score","text":"Association Plots: Visualizing associations high-dimensional  correspondence analysis biplots  Elzbieta Gralinska, Martin Vingron  bioRxiv 2020.10.23.352096; doi: https://doi.org/10.1101/2020.10.23.352096","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find rows most highly associated with a condition — apl_score","text":"","code":"set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  # Calculate APL coordinates: ca <- apl_coords(ca, group = 1:10)  # Rank genes by S-alpha score ca <- apl_score(ca, mat = cnts) #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100%"},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Gene overrepresentation analysis with topGO — apl_topGO","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"function uses Kolmogorov-Smirnov test implemented package  topGO test overrepresentation Gene Ontology gene sets.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"","code":"apl_topGO(   caobj,   ontology,   organism = \"hs\",   ngenes = 1000,   score_cutoff = 0,   use_coords = FALSE,   return_plot = FALSE,   top_res = 15 )"},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"caobj \"cacomp\" object principal row coordinates  standardized column coordinates calculated. ontology Character string. Chooses GO sets 'BP'  (biological processes), 'CC' (cell compartment) 'MF' (molecular function). organism Character string. Either 'hs' (homo sapiens), 'mm'  (mus musculus) name organism package 'org.*.eg.db'. ngenes Numeric. Number top ranked genes test  overrepresentation. score_cutoff numeric. S-alpha score cutoff. genes score  larger tested. use_coords Logical. Whether x-coordinates row APL  coordinates used ranking. recommended S-alpha score (see apl_score()) can calculated. return_plot Logical. Whether plot significant gene sets  additionally returned. top_res Numeric. Number top scoring genes plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"data.frame containing gene sets highest overrepresentation.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"chosen group cells/samples, top 'ngenes' group specific genes used gene overrepresentation  analysis. genes ranked either precomputed APL score, , available APL x-coordinates.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"Adrian Alexa Jorg Rahnenfuhrer  topGO: Enrichment Analysis Gene Ontology.  R package version 2.42.0.","code":""},{"path":"https://vingronlab.github.io/APL/reference/apl_topGO.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Gene overrepresentation analysis with topGO — apl_topGO","text":"","code":"library(Seurat) #> Loading required package: SeuratObject #> Loading required package: sp #> ‘SeuratObject’ was built under R 4.3.0 but the current version is #> 4.3.2; it is recomended that you reinstall ‘SeuratObject’ as the ABI #> for R may have changed #> ‘SeuratObject’ was built with package ‘Matrix’ 1.6.4 but the current #> version is 1.6.5; it is recomended that you reinstall ‘SeuratObject’ as #> the ABI for ‘Matrix’ may have changed #>  #> Attaching package: ‘SeuratObject’ #> The following object is masked from ‘package:base’: #>  #>     intersect set.seed(1234) cnts <- GetAssayData(pbmc_small, assay = \"RNA\", slot = \"counts\") #> Warning: The `slot` argument of `GetAssayData()` is deprecated as of SeuratObject 5.0.0. #> ℹ Please use the `layer` argument instead. cnts <- as.matrix(cnts)  # Run CA on example from Seurat  ca <- cacomp(pbmc_small,              princ_coords = 3,              return_input = FALSE,              assay = \"RNA\",              slot = \"counts\") #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  grp <- which(Idents(pbmc_small) == 2) ca <- apl_coords(ca, group = grp) ca <- apl_score(ca,                 mat = cnts) #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100%  enr <- apl_topGO(ca,                  ontology = \"BP\",                  organism = \"hs\") #>  #> groupGOTerms: \tGOBPTerm, GOMFTerm, GOCCTerm environments built. #> Loading required package: org.Hs.eg.db #> Loading required package: AnnotationDbi #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following object is masked from ‘package:SeuratObject’: #>  #>     intersect #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #> Loading required package: IRanges #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #>  #> Attaching package: ‘IRanges’ #> The following object is masked from ‘package:sp’: #>  #>     %over% #>  #> Building most specific GOs ..... #> \t( 1326 GO terms found. ) #>  #> Build GO DAG topology .......... #> \t( 3590 GO terms and 7903 relations. ) #>  #> Attaching package: ‘SparseM’ #> The following object is masked from ‘package:base’: #>  #>     backsolve #>  #> Annotating nodes ............... #> \t( 207 genes annotated to the GO terms. ) #>  #> \t\t\t -- Elim Algorithm --  #>  #> \t\t the algorithm is scoring 612 nontrivial nodes #> \t\t parameters:  #> \t\t\t test statistic: fisher #> \t\t\t cutOff: 0.01 #>  #> \t Level 12:\t5 nodes to be scored\t(0 eliminated genes) #>  #> \t Level 11:\t13 nodes to be scored\t(0 eliminated genes) #>  #> \t Level 10:\t22 nodes to be scored\t(8 eliminated genes) #>  #> \t Level 9:\t37 nodes to be scored\t(11 eliminated genes) #>  #> \t Level 8:\t64 nodes to be scored\t(17 eliminated genes) #>  #> \t Level 7:\t88 nodes to be scored\t(17 eliminated genes) #>  #> \t Level 6:\t119 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 5:\t119 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 4:\t83 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 3:\t47 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 2:\t14 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 1:\t1 nodes to be scored\t(24 eliminated genes)  plot_enrichment(enr)"},{"path":"https://vingronlab.github.io/APL/reference/as.cacomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","title":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","text":"Converts values stored Seurat/SingleCellExperiment dimensional  reduction slot \"CA\" cacomp object. recompute = TRUE additional parameters recomputed saved  values without rerunning SVD (need specify assay work). .cacomp.cacomp returns input without calculations. Recomputes missing values returns cacomp object list. *complete* cacomp object list form, use .call(new_cacomp, obj). .cacomp.Seurat: Converts values stored Seurat DimReduc slot  \"CA\" cacomp object. .cacomp.SingleCellExperiment: Converts values stored  SingleCellExperiment reducedDim slot \"CA\" cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.cacomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","text":"","code":"as.cacomp(obj, ...)  # S4 method for cacomp as.cacomp(obj, ...)  # S4 method for list as.cacomp(obj, ..., mat = NULL)  # S4 method for Seurat as.cacomp(obj, ..., assay = \"RNA\", slot = \"counts\")  # S4 method for SingleCellExperiment as.cacomp(obj, ..., assay = \"counts\")"},{"path":"https://vingronlab.github.io/APL/reference/as.cacomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","text":"obj object class \"Seurat\" \"SingleCellExperiment\" dim. reduction named \"CA\" saved. obj \"cacomp\" input returned. ... arguments. mat Original input matrix. assay Character. assay extract count matrix, e.g. \"RNA\" Seurat objects \"counts\"/\"logcounts\"  SingleCellExperiments. slot character. Slot Seurat assay use. Default \"counts\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.cacomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","text":"cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.cacomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","text":"default extracts std_coords_cols, D, prin_coords_rows, top_rows dims  obj outputs cacomp object. recompute = TRUE following additionally recalculated  (run SVD): U, V, std_coords_rows, row_masses, col_masses.","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.cacomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create cacomp object from Seurat/SingleCellExperiment container — as.cacomp","text":"","code":"######### # lists # #########  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored. ca_list <- as.list(ca)  # Only keep subset of elements for demonstration ca_list <- ca_list[c(\"U\", \"std_coords_rows\", \"std_coords_cols\")]  # convert (incomplete) list to cacomp object. ca <- as.cacomp(ca_list, mat = cnts) #> Calling cacomp to recompute from matrix.  ########## # Seurat # ########## library(Seurat) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  seu <- CreateSeuratObject(counts = cnts) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') #> Warning: Data is of class matrix. Coercing to dgCMatrix. seu <- cacomp(seu, return_input = TRUE) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  ca <- as.cacomp(seu, assay = \"RNA\", slot = \"counts\")  ######################## # SingleCellExperiment # ######################## library(SingleCellExperiment) #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘matrixStats’ #> The following objects are masked from ‘package:Biobase’: #>  #>     anyMissing, rowMedians #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> The following object is masked from ‘package:Biobase’: #>  #>     rowMedians #> Loading required package: GenomicRanges #> Loading required package: GenomeInfoDb #>  #> Attaching package: ‘SummarizedExperiment’ #> The following object is masked from ‘package:Seurat’: #>  #>     Assays #> The following object is masked from ‘package:SeuratObject’: #>  #>     Assays set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  sce <- SingleCellExperiment(assays=list(counts=cnts)) sce <- cacomp(sce, return_input = TRUE)  ca <- as.cacomp(sce, assay = \"counts\")"},{"path":"https://vingronlab.github.io/APL/reference/as.list-cacomp-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert cacomp object to list. — as.list,cacomp-method","title":"Convert cacomp object to list. — as.list,cacomp-method","text":"Convert cacomp object list.","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.list-cacomp-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert cacomp object to list. — as.list,cacomp-method","text":"","code":"# S4 method for cacomp as.list(x)"},{"path":"https://vingronlab.github.io/APL/reference/as.list-cacomp-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert cacomp object to list. — as.list,cacomp-method","text":"x cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.list-cacomp-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert cacomp object to list. — as.list,cacomp-method","text":"cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/as.list-cacomp-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert cacomp object to list. — as.list,cacomp-method","text":"","code":"# Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored. ca_list <- as.list(ca)"},{"path":"https://vingronlab.github.io/APL/reference/ca_3Dplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of the first 3D CA projection of the data. — ca_3Dplot","title":"Plot of the first 3D CA projection of the data. — ca_3Dplot","text":"Plots first 3 dimensions rows columns plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_3Dplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of the first 3D CA projection of the data. — ca_3Dplot","text":"","code":"ca_3Dplot(   obj,   xdim = 1,   ydim = 2,   zdim = 3,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   ... )  # S4 method for cacomp ca_3Dplot(   obj,   xdim = 1,   ydim = 2,   zdim = 3,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   ... )  # S4 method for Seurat ca_3Dplot(   obj,   xdim = 1,   ydim = 2,   zdim = 3,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   ...,   assay = Seurat::DefaultAssay(obj),   slot = \"counts\" )  # S4 method for SingleCellExperiment ca_3Dplot(   obj,   xdim = 1,   ydim = 2,   zdim = 3,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   ...,   assay = \"counts\" )"},{"path":"https://vingronlab.github.io/APL/reference/ca_3Dplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of the first 3D CA projection of the data. — ca_3Dplot","text":"obj object class \"cacomp\", alternatively object  class \"Seurat\" \"SingleCellExperiment\" dim. reduction named \"CA\"  saved. xdim Integer. dimension x-axis. Default 1. ydim Integer. dimension y-axis. Default 2. zdim Integer. dimension z-axis. Default 3. princ_coords Integer. 1 principal coordinates used  rows, 2 columns. Default 1 (rows). row_labels Numeric vector. Indices rows label  added (label stored rownames). Default NULL. col_labels Numeric vector. Indices columns label added (label stored colnames). Default NULL (columns). ... arguments. assay SingleCellExperiment assay obtain counts . slot Seurat slot assay get count matrix .","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_3Dplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of the first 3D CA projection of the data. — ca_3Dplot","text":"Plot class \"plotly\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_3Dplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of the first 3D CA projection of the data. — ca_3Dplot","text":"Depending whether `princ_coords` set 1 2 either principal  coordinates either rows (1) columns (2) chosen. standardized coordinates plotted  (assymetric biplot). Labels rows columns stored row- column  names respectively.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_3Dplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of the first 3D CA projection of the data. — ca_3Dplot","text":"","code":"# Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  ca_3Dplot(ca)  {\"x\":{\"visdat\":{\"1a7f23022bfc\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"1a7f23022bfc\",\"attrs\":{\"1a7f23022bfc\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[-2.1133816829645222,0.43565512853283866,-1.6739240475212409,3.0216904526931478,-0.25604408768322073,0.068030204834949592,0.61217247304957623,-1.0738513605556679,0.45380101329600236,-0.40712945301526826,0.8406871053278171,-0.9253440052821833,0.88012385799114812,-0.29676610914899682,-1.0404154834225885,-0.44005076417455058,1.3957047546469472,-1.3247105289825634,2.4667937674796581,0.3867730623448602,-0.52929555890259394,-3.7946616865401426,0.84883445192934948,0.25289588762634696,-0.26519781350535843,0.42192429844984081,-0.13052725419827599,0.87738000942890337,0.38102397590635034,0.10433981406640669,0.40725278262280112,-2.1076351979925221,-0.08625950428317726,0.50319652676347437,-0.48539423054943059,1.6212533112411724,1.1321839558735469,-1.8586145613974645,-1.1589579979581948,-0.079088243737255079,-2.5732098608631633,-1.2042128591145516,4.6593674708393875,0.10202843962804174,0.70780082243913189,0.79440656563506706,-2.5019781533033449,-0.82079385633966839,-0.88737600274525985,1.6349426274239169],\"y\":[2.8864224531526195,0.1947285905452244,1.5711417853049916,-1.0102293193801237,-0.34146752235601674,-1.7377681373726148,0.067247826201852073,0.15267995783232999,1.083197059986015,-1.3334056633970346,0.12024822703547926,-0.028249023420895056,-0.10402961799961445,-0.62223436541146016,-0.32805272026234639,1.250402080566315,-0.46164846543355365,-0.81243291840911835,0.97523516895683382,0.21735961782609431,-0.46732352126620119,3.3812859521595904,-0.48142687036456894,0.50292440324216436,0.12828530047999784,1.453724678946914,0.55052341706978813,-0.92349442119064684,1.8525893452205968,-0.96884530747753994,0.44828578073127895,1.8189486389271834,2.8667328647194132,-2.3651410047186125,-0.46432501473326493,0.73239684141825856,-3.4404635718203496,0.74950603862454124,-1.9147326519157584,0.22687184278568512,0.27770243896230384,0.025039003486281998,3.4450968917503602,0.77119715103776121,1.494624687187174,-0.38954191263827542,-0.1528244831530523,-1.4987580723673615,-1.1576641664605587,-0.45728997746107403],\"z\":[-0.2685406446844284,-0.27730844136427663,1.2271740833970843,0.77971037148203381,-0.95768271601164046,-0.1092641461149732,-0.051539456456792754,-0.54774106706149284,-4.4848601701398643,-2.5279724746181356,0.19528624559532592,0.82045265513657273,0.7949876183615171,-0.89235717546663862,-0.2563302471251635,-1.0845495096610622,-0.87745288457595638,0.80896187796644459,-0.81175916985175134,0.29128303014236323,-5.0666459800559238,-2.3526450106135757,0.16069910083510586,0.35932599903287288,-0.43008972152723013,1.1058857955352608,0.8897465488749754,1.5292143071253281,0.45661373435316494,-0.081715127722188974,-0.16791205078627972,5.262113952289444,1.4300950666383843,-0.26206224945677942,0.11667187906620857,1.0784508776710848,0.93317656247451097,-0.98079301553941978,0.35050317030003975,1.5514732470040282,-1.9317895647517536,-0.056270867726152203,-4.5414558482100329,-0.84749677926376521,-1.4064428252124836,-0.079384707054623291,-0.469392334852203,-0.26929041800159126,-3.0231668955532549,0.4595688295277538],\"mode\":\"markers\",\"text\":[\"cell_1\",\"cell_2\",\"cell_3\",\"cell_4\",\"cell_5\",\"cell_6\",\"cell_7\",\"cell_8\",\"cell_9\",\"cell_10\",\"cell_11\",\"cell_12\",\"cell_13\",\"cell_14\",\"cell_15\",\"cell_16\",\"cell_17\",\"cell_18\",\"cell_19\",\"cell_20\",\"cell_21\",\"cell_22\",\"cell_23\",\"cell_24\",\"cell_25\",\"cell_26\",\"cell_27\",\"cell_28\",\"cell_29\",\"cell_30\",\"cell_31\",\"cell_32\",\"cell_33\",\"cell_34\",\"cell_35\",\"cell_36\",\"cell_37\",\"cell_38\",\"cell_39\",\"cell_40\",\"cell_41\",\"cell_42\",\"cell_43\",\"cell_44\",\"cell_45\",\"cell_46\",\"cell_47\",\"cell_48\",\"cell_49\",\"cell_50\"],\"textposition\":\"left\",\"opacity\":1,\"marker\":{\"color\":\"#990000\",\"symbol\":\"x\",\"size\":2},\"name\":\"Columns\",\"hoverinfo\":\"text\",\"type\":\"scatter3d\",\"inherit\":true},\"1a7f23022bfc.1\":{\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[0.022910849167580051,-0.013734012328508426,-0.0005237589544897813,-0.0041611532707799869,-0.017377970492799391,-0.012999426593706126,-0.016176208698963728,-0.041142612207267601,0.030094267184330684,-0.0017828913935082999,-0.088531515871980312,-0.013902441557606589,0.025694389197914124,-0.02672298374882142,-0.010373822502445429,-0.032344099381276498,0.029673162476230971,-0.0031764809026886085,-0.0047281066712759629,-0.037128525896849909,0.0087074840755693057,0.0051032944112486397,0.042108648673598412,0.003749517146936783,0.013515220244919786,0.0063061611215661549,0.021354759399102252,-0.012820455360795084,0.026862294973341326,0.019184798159137414,0.043654443087390291,0.017895916229125175,0.042548756308681497,0.0065974376304818215,-0.043059813181733408,-0.015536731866403435,-0.0047922087729927055,-0.028897194509041053,-0.01139720407258446,0.0067392194924906093,-0.013734786004613869,0.046418680546421433,0.0053616334076214082,0.077886794796383885,-0.040758280522867819,-0.024659856180689901,0.022932111336869818,-0.015940164406717337,0.006193556656946049,-0.0024003536723296438,0.023456689458238353,0.049840573874906993,0.024347732676748311,0.047804055057356465,0.0076331400140197186,0.025724661709352861,-0.004303643120764292,-0.017848507478799583,0.011207490303319677,-0.028976269232907366,0.02090795526934917,-0.020838447672108525,0.016452371071344285,-0.029118774086005095,0.034905690260321649,-0.0099067611298988591,0.008990419773460637,0.019461731159765058,-0.014282825465848848,-0.043876732462187845,-0.016088516518973514,0.05088037127401198,0.0099880052220433727,0.015713267305520029,-0.0055933817134973486,-0.0096817936804499752,0.035377892584072278,-0.026667489160868852,-0.0011368734413303009,-0.015617691249545075,-0.030390688446719862,0.011549438238510044,0.02249964412900423,0.024606198349291331,0.021224965710593176,-0.0060790681197148387,-0.035770388400162105,0.0077576700844249518,0.017349366926222347,0.0060868155188063405,-0.0080541220436759261,-0.051053448558217272,-0.037831122131085256,-0.022129806233708041,0.0050848387822066462,0.040538899369270277,0.016357024952343303,0.037107569715871473,-0.0032785463527900982,0.021901089351975035,0.031361377049398731,0.0096490582195075322,0.019903795214129705,-0.0057838534799961863,0.022392928909044527,-0.0027504944548835909,0.012944917186324812,-0.00016080183692450032,-0.051017045857279668,0.006927379259213837,-0.079085203099524257,-0.00055099021359461173,-0.034489631491450637,0.016452198813022102,-0.031096800621308922,-0.013233533599829556,0.058175254287222006,0.0074591211790435985,0.0075232373326897875,0.0061474564811801443,0.039429556935775996,-0.024686023454265842,-0.020849014693246314,0.029029873524594629,0.025349622759772601,0.0036906806051538181,0.023408795595333338,0.017479588985555232,-0.00075105104973083206,0.0069230080010693673,-0.01669267462891743,-0.0092748429880977756,0.020508676121796254,0.017535286272181448,0.02940173789240515,-0.00070430867667870987,0.017973235665925024,0.0005961125264706417,0.0093783499226014044,-0.019086560392123007,-0.044354089558248044,-0.048041663215268378,0.028566552559699539,-0.029253307067823031,-0.011705885779010836,0.016423018503346858,-0.038571457837603733,-0.018122107414483106,0.037878641018361761,0.033141909075529039,-0.013774291053121024,-0.015887019831729854,0.034080038348729046,0.015467842258950974,0.05843311641151254,0.0015203718677417521,-0.043086153098890134,0.0026676661731004393,0.013423367577275698,-0.026600607069033423,-0.028887937602987589,0.029855977997786588,-0.021870609923697878,0.051000913092059418,-0.011118218526272573,0.014243894961193998,0.00091597007709530432,0.018625424812576615,0.01062441874125445,0.049247461674769261,-0.011147847554744886,0.026870390758296388,0.029352033122763431,-0.0221567753324707,-0.020554933464191481,0.010748324422987789,-0.0085591510817789995,-0.028888433667182314,0.0068599632177393666,-0.0050031993055190743,0.0045820884341761774,-0.016822294646997492,-0.025565716903843246,-0.015509448933944197,0.0053812564473390053,-0.013087749391583475,0.013175398375037953,0.01726030883512826,-0.0015460984376634984,-0.017082366152351945,-0.0026849493001135987,0.0056710456296591256,-0.014224297820085821,0.0051090435387234423,0.00072025685993931231,-0.030904213717914533,-0.018670285497243099,-0.003092565346972114,-0.00485215164074221,0.01439547481742953,-0.017547444796679763,-0.051437393981720356,-0.023107744865143203,0.028227372792717937,-0.010633565895178467,0.026852542039512046,0.01014716540458864,-0.054222585130058884,0.025761050440716943,0.029378156542371973,-0.015100548796777403,-0.033224550499509273,-0.001163736563350706,-0.0052029427226484466,-0.028226120205923574,-0.02431046829983808,-0.0093752415095331668,0.052157577876802926,-0.004362903438341276,-0.011377130229844533,0.071834647255374931,0.0080751157907354744,0.0080565138822886982,-0.014944623077140184,-0.011117731630402375,0.0098471299669187565,-0.016536952752628595,-0.017382977130412435,-0.024669475474462039,0.0016981792860295956,-0.011678780457285728,-0.021452145227376221,-0.030777099816614813,-0.0023920091190451553,-0.056062474382802159,-0.0010719006779451111,-0.023807802240658954,0.022992881330438628,-0.010226407002942915,0.045592842012917682,-0.037472227273153184,-0.038383643949518993,-0.0080407467957393577,-0.018900217592832707,0.0020797373241407784,0.040981793912748844,0.030315335857359939,-0.0088991484763382735,0.069419855678732961,-0.00075810579915630181,0.014042244889432285,-0.029249467851176946,-0.0013863553408407561,-0.015095259704734651,0.0013316213521243842,0.012773673326070985,-0.048493631545164881,0.0071468473012924263,-0.016851124111316937,0.03108321653035899,-0.026123637253258801,0.007466114849116484,-0.050668807288231442,-0.0046912522724135717,-0.037084992923662762,-0.0351324467874497,0.0070529248584932352,-0.01676661267705911,0.054782145064244808,0.022163287031890258,0.0028495800420518975,0.0033879536376204295,-0.026168181881260556,-0.0055559015019881188,-0.00084564761146313733,0.017211164793507792,0.0071539551398885617,0.0026724175541879801,-0.030081923059607583,0.022760902646452627,0.03797366630954848,0.029014907656481251,0.017455210713544968,-0.015350092388377357,0.0057263372668995153,-0.049002402977156745,-0.012437651873341749,-0.02131073977520279,0.0096153218343190093,-0.0058133336836455607,-0.0061550994459345365,0.028793151794491694,0.045356137049024386,0.018066170891620287,-0.0068587288711306664,-0.0081214191569817743,0.049333674215552986,0.018035226370834368,-0.0080376205584801654,0.01162747968310879,-0.058702005589213138,0.01512379317234866,0.003465382891781249,0.017514709964401548,-0.059495120337383821,0.006979550260884604,0.013927491638691957,-0.006282760329402658,-0.011647225108672733,-0.019534689530509752,0.040330832057937922,0.0019995729405704859,0.0032966048299250504,-0.062625800214185109,0.0087296715845633314,-0.021199244318097075,0.033280705200444287,-0.021321170784186279,0.01392765213117093,0.0096510258405197932,-0.034538864571038046,0.023362769912063725,-0.024962602998316773,-0.0099484944687029623,0.023535285608379006,0.026437803772330955,-0.050561344553474469,-0.027645679834564185,-0.00095623551348420009,0.011055023554821703,0.023333041682302873,-0.0044194477226709794,0.0004812800610598166,-0.0025276760282928264,-0.0023225649437536833,-0.042654365641213325,0.028908148726049718,-0.016072298797649414,0.036205996602641968,0.041544317799187956,-0.0058136129914257914,-0.009860414798730054,-0.011713925404218535,0.036302491741344305,-0.00028458593786520912,0.022809122969871681,-0.0036382026780113316,0.038206880251009552,-0.042978384028021344,0.008914281128580363,0.023570018455548829,0.019478688120211606,-0.032113461703424696,-0.019320344710068407,0.0035608006621046331,-0.010726338271157126,0.057986729575591374,-0.053239770585546096,-0.053845732270172121,-0.0016917942166416121,0.046564213968238399,0.0087989443813607602,-0.0079417060373368296,0.0075726378317544189,-0.011592471240860054,-0.013462053612502417,0.051824071628322657,0.01870587476214431,0.032947180832459524,0.022031220611741068,-0.043742793128837158,-0.049596628757518621,0.022810138605532285,0.048907303065470073,0.0072605601017550776,0.0081677574925285885,-0.003415842325241301,-0.05649857048564999,0.0029841599600190808,0.0023533606546959802,-0.043392393992799344,-0.030157751483983398,-0.011605498438612891,0.067283580806302645,-0.0092343020486964963,0.033238052469444522,0.024450801134883599,-0.0012207122497880382,0.015397508982560575,0.011695330621422454,-0.013113034210333862,0.039455281372993561,0.033552740484299758,-0.0060646633142100448,0.02899037671755399,-0.0014021168537615017,-0.018087773640353945,0.0032740780468996935,0.015849067429629028,-0.022092958519125825,0.0058432963854167319,0.0012014770802442993,-0.037011419686931453,-0.014359375900998181,-0.041914290723339132,-0.021627402545248118,-0.02032835009270165,0.0072807626803184705,0.012942357021696681,0.022234233311605532,0.0045759008095094672,0.026208767906963162,-0.018803969923026968,-0.038433104491242202,-0.035592465963982522,-0.038797212830391781,0.0073023563319602825,-0.029324578955148756,0.02906135908057985,-0.029001633122331172,0.0049798453366203636,0.036505601401378353,-0.03997309633741912,-0.0095216307374403203,0.00020775526768576234,-0.012300257016640878,0.0048749851148847017,-0.022343610299659464,-0.04844623226836197,0.031528926347957058,0.001213104897480919,-0.007323598627748883,-0.010289678607517219,0.0045520753688748569,0.019158674665814966,-0.0019300040694767097,0.01165001164799846,0.036945849662220483,0.037315879334741432,0.017123129169102986,0.041631588938371371,-0.013054034504754633,-0.023271941796301598,-0.019927052891317541,0.023918300044095755,0.047094671582042939,0.0057222039917993947,0.011463473763479453,-0.0015481431139969736,-0.015179937685081199,-0.024046951551702885,0.012693636300209961,-0.023775204550075112,0.010730067304919729,-0.04610161418456607,0.026465352934709519,-0.0019319822829354692,0.0080974110873587943,-0.011676022549809545,0.0082203943675178796,0.024602162342228388,0.0088297213748765434,-0.055860887286358997,0.016009207121800276,-0.0090400466811565387,-0.024876997707468367,0.017044836284056029,-0.029034282904135161,0.007561843277255148,-0.006472405027348152,0.0075941060208092829,0.049978410138385977,0.0027047790302500538,0.027207599003936888,0.0015408985054792762,0.045750834298098696,-0.024008899534434341,-0.050217505256823856,-0.023648335997699336,0.064274228025725369,0.016203460716213983,-0.042231067986035424,-0.015238093375202327,0.016893536237097741,0.004621470901022111,0.0039970660988377293,-0.042300669521409116,-0.0044585137751893059,0.019166785553999845,0.061934530329947217,0.021105746674869783,0.018047623013314154,-0.0049484668625740707,-0.012244453305962069,-0.055409767242692337,0.033171243206262982,-0.02995007560046016,-0.03549337900375471,-0.044807616138297583,-0.016676743547361979],\"y\":[-0.009503936259369912,0.0092458319237414665,0.027255269819590623,-0.01854861056890007,-0.0069710828373331212,-0.033084580282916387,0.0011628321433592007,0.041478279929049393,-0.0002308775145374865,0.024401693273591128,0.0023659905390422688,-0.036382648070018661,-0.011140076747438679,0.032278805115633614,-0.00030391395424007693,0.014160719737757422,-0.0031776087619378541,-0.025722151255229225,0.0032489866890593206,0.038389188767841996,0.024292135964750824,-0.015028953528016557,0.010889248587723855,-0.012962601882172067,-0.049430730711615606,-0.00089343947501640034,-0.02858631355023912,0.047163665604468989,0.014414492954028644,0.0011363192433837073,-0.016007476897827319,-0.0070290950786318258,-0.020930754276195212,-0.0010459242339077681,-0.01193925793564307,0.016465819950302316,0.033888963315960592,-0.0084223123963023082,-0.058546864768454859,-0.011923734469760569,-0.019354241113346136,-0.030501886769534237,-0.0036769991824234204,-0.056127071846414189,-0.010550416402621018,0.058872059282075923,0.030472908382158763,0.031522883606806419,0.018807696588655196,0.035649639054550798,-0.044665187913266124,-0.048199813116431602,0.01298153807953922,0.025321062333829844,-0.03659562595015535,-0.022104557982986883,-0.0060777404657592861,-0.052845558308948347,0.065393760619101751,-0.017504340690375576,0.033979277245541631,-0.039853437367895504,-0.01015201934048773,0.014009819510511225,0.0043701096785307494,-0.014466866782925856,-0.0068676874671379949,-0.0012559163111992083,-0.049118832968990972,0.0063947404224239703,-0.043547511949353843,-0.006315058368321769,0.033010678435488709,-0.0016018606842697718,0.022072536371472266,-0.018473470964772677,-0.025436078304796272,0.02855388700775199,-0.0043775576903279049,-0.0052791965604348174,0.0044072945854694325,0.016593084804867396,-0.0072684627048761564,0.0061090488187897606,-0.012409538116981311,-0.02030930539326525,0.017865761995122558,-0.037415629944349042,0.020165777051440528,0.016890133486508949,0.0066900343241174222,-0.020741392993743876,0.030580784740327157,-0.0087739037350892286,-0.012778450872889167,-0.050893690084816479,0.0016015212287722428,-0.042101251551553254,-0.0035655231335097524,-0.060756380078320224,0.017447474866795459,-0.01329479142135276,0.021753498392884436,-0.030774798273602064,0.00325459534254212,0.011406770990538818,0.0023979988478102475,0.023675054821662597,-0.019632777395836638,0.0022798325346528731,0.0053374222159511403,-0.020824965568413855,0.018174570347974376,0.034649818636492517,0.0058247578203817936,-0.0033851377816722489,0.0099423045806302894,0.026431699761823559,-0.00035239649629417599,-0.010897724597504127,-0.0080158630153638472,0.0054093482144650581,0.018196792811310571,-0.0057449775265785629,-0.0061204931365760754,0.033291128105767689,0.014156683982653861,-0.028702329212784587,0.0053959723537852803,0.038318290440846142,-0.021110907356200449,0.0067780675658795798,-0.0027602808659567863,-0.044102273647137126,-0.010585542529679148,-0.039234230780921156,-0.041911861378430948,0.039738658100435455,-0.0006751095353076242,-0.029570659064611867,-0.00092439084362845743,-0.018212145160447647,0.018799100376660115,0.019419076983037124,0.012796868122088545,-0.001992284106937988,0.04408143414469181,0.0011645609097163346,0.0075871031904031078,0.0092346730479928064,-0.0093125213314212228,0.033427837774463183,-0.0046172866173902916,0.0036889092308692089,0.060768866507945669,-0.039176190023599414,0.007952963083860615,-0.0057887502019741037,-0.019549767102601825,-0.0012660236048087706,0.013222472565969907,0.023122755512431935,-0.011734316276204847,0.045508380550510874,-0.013898290189855061,-0.0001175895723189569,-0.021915062707320784,0.0093097851334778669,0.046660981618635411,0.0035503759562966562,-0.027161645915471426,0.0049255606706935986,0.010247437191040728,0.037412036469258197,0.021950684393465366,-0.0060011006721458265,-0.027944538070483797,-0.02374840125213791,-0.027964734903919219,0.0047263236301133852,0.032447661268879893,-0.031069551518955286,0.004980837287300627,0.04181960450807385,0.006855462543358554,-0.020951567985399322,-0.0089382924769990345,0.025105345839404991,-0.019100465559177413,0.011065671649779198,0.016721988560584152,-0.0246446659883186,-0.04218444085413061,0.004121813265724486,-0.034760084862528712,0.029372250270732984,-0.0045284538037872876,-0.082253857016129139,-0.055789705790313837,0.015587957149356355,0.022793072714337476,0.028351312954906362,0.041973815449038367,0.014978176075432312,2.9288865219476019e-05,0.0013553016287802255,0.017284667117129508,-0.016167827051688299,0.0042680899435925254,-0.013674685090201918,-0.013744360429880998,-0.028591370893963294,-0.002367360588985303,-0.0045003432405476542,-0.00039352127346993526,-0.014709804010746173,0.020009030878609918,0.0084340917788060608,0.024408157106837226,-0.025088313428183434,-0.046001684775327442,0.0020841593926466282,-0.0013158287671658745,-0.018022254701615937,0.053335730917393097,0.050657282897959045,0.0052070521095463375,0.01111382679104146,0.0084891612783326072,-0.0010015743892787567,0.022800797459083626,0.014749581104609496,-0.021991859219939423,-0.028966139310676511,0.021300581483412823,0.039135001781417739,-0.0079119812857296658,0.024252531084406937,-0.058002034435635369,0.00033910960879185876,0.0061544322819979368,0.0061355906908945783,0.0095575454850621612,-0.055061122650959582,0.0068032653287254724,-0.027426034197248813,-0.049512276013835455,0.047950989737743845,-0.016744278089235946,0.0099235207425544276,-0.020404473413727198,0.062212692101261735,0.033226420246465521,0.037331448326335406,-0.025219640942906563,0.046761137666157679,-0.00601137623253673,0.044732183740160164,-0.014380416401762115,-0.00074192924664972192,0.012931202816386133,0.049792594009555262,0.040680733221274155,0.023011861395336109,-0.019287153854606165,-0.008016150070207239,-0.018843171625186957,-0.018008626383807437,0.012677849689481369,-0.008025326680338344,-0.022109333053532236,-0.017633332254939533,0.024041120890369052,0.023030676031444694,0.0192368478155545,-0.030764493173724854,0.018628447708987837,0.027435390511795069,0.053009947590435126,-0.024275363090741034,0.036006553421222678,0.033170463873796595,0.019438250118194139,0.018056688215262066,-0.029866577636385675,-0.034275845603505752,-0.025270405772168516,-0.0038134846300939725,0.012138732715381016,0.0067828358987279879,0.0084175190208012878,0.031500390852143054,-0.003815651974566449,-0.016017604143727705,0.024795425121315721,0.016571963370683097,-0.034891721985373172,0.015572253976642955,-0.0042752775887754451,0.00071252182886082354,0.010324426484181344,0.0041216769616479448,0.0077111312549405266,-0.055411837407141125,-0.025376733631501291,-0.015025692881042317,0.040282408259583811,0.01430868789652587,-0.04016179195090061,-0.048956715154428079,-0.016384464292124971,-0.027493037215272492,0.017963839925537819,0.016497120270664974,-0.018936811619796462,0.031607534371842931,0.0022958368661701745,-0.045424756035973825,0.0073173365319034239,0.012058169598573977,-0.021661838101031415,0.030555798952890446,-0.00048876478892940134,0.02724274988997916,0.0034488332382783273,0.039154455552983969,-0.010647401993271566,0.0051708081901576195,0.0033345875015963885,0.0030208122472715837,0.006144105852865513,-0.025662697044316226,-0.05241134582395212,-0.047679893624319583,-0.017745337726027221,-0.0060949356175406767,0.020038295730221367,-0.0090047407192126987,-0.029279348998515673,0.048255819714662203,-0.034182135344856326,-0.015119964162669969,0.0062861499321596476,-0.0017000910295362488,0.0066981502349106534,-0.018477763698531956,0.016013195735424538,0.035094134099356106,0.034918801626841772,0.033464827282111885,-0.0022693094165982556,0.022470105240212809,0.00079756906416273733,0.025041071195917586,-0.019553489389407638,0.0014897097500546539,-0.029745187919180613,-0.03457889125480415,0.0080837058116235306,0.026226142247159873,0.02510739532469038,-0.00062061636520085236,-0.038813946525019447,0.012902139636657879,-0.017304939608564867,0.034858006393817823,0.010487808728857373,-0.022843530220608116,0.005848811447103551,-0.002443035141487632,0.0145127094225682,-0.042941517493476668,0.016091920090376619,-0.0014627908715700675,-0.036629461020551875,0.028495334386289442,0.013660554030732215,-0.0080779716908934117,0.027272900398018531,-0.021873293526648591,0.030344924195434036,0.037298575348629938,0.0005632307109792109,0.031600651238622948,-0.0029228877174326804,0.033857619770924434,-0.0038393625285396624,-0.019346012578197947,-0.013161251108104181,0.029808485134749454,0.011725861877078232,-0.017241584494941072,0.015580638747191412,-0.059853324353498008,-0.015793259273935368,-0.0052421802249089699,-0.0041470066252360374,0.027284062170195592,0.0045278436224036496,-0.0012218365651380646,-0.015797530680626146,-0.0089217739055323462,-0.034281247017894964,-0.018524496779593263,-0.0071290057766208422,-0.037506944958241271,0.026429003245498888,0.018524000510462341,0.011102489254661656,0.031131113620090939,-0.016326537236684209,0.025441639343520592,-0.072386015198102727,0.01956043287326098,-0.010800205319328704,0.054261579936364553,0.022684316566057267,-6.7157180031250766e-05,0.030399579820140143,-0.023730646452674913,-0.066903355501812395,0.0297195190325087,1.4088003964518841e-05,0.0005063355490447127,0.024738036131231517,0.0010462902586848904,0.02411225039768717,0.027352062834842861,0.012811656188495633,-0.0086852397143978473,-0.0021292122474531276,0.031649383402289642,-0.026146546975303438,-0.018752302825251733,-0.03477257171634613,-0.0035994609262716155,0.022318851199296889,0.055625875288693803,0.0037642480860152852,0.023858331715668955,0.00020867914662296981,0.036023508575036479,-0.0010862030350880362,0.0016879066722667695,-0.010135310240354073,0.085981169221434589,0.004242977819577054,-0.010566119080694547,-0.0012736098762743005,0.0086257850310888923,-0.052475428603614781,-0.040071125996593397,-0.0022639004155399862,-0.046910744766651018,-0.081722004548269181,-0.010814805296556873,0.014908171187470315,-0.020014308660692374,0.0060537934821694971,-0.019552292131186998,-0.032932020096720277,-0.045456365988278249,0.0020623593241817437,0.04006792827635277,0.017386975120708355,-0.038474469454460904,0.0069312815382709262,-0.022492546927724053,0.022656100108383752,0.018502348034427331,0.0062488598051539694,-0.0097503986884040807,-0.021748159672702053,0.0087952710055315495,0.0018106347702877613,0.012528179630362853,-0.046555550052533666,0.029479063473342036,-0.032653789968268267,-0.049382704127690608,0.021480975804535792,0.021933188354427806,-0.0096568973417992098,-0.020973383461411324,0.0092666629557744129,0.017452878253884918,-0.013467848163406069,0.013938066922454166,-0.022988487631996922,-0.005975450026872893,0.038376705730928627,-0.019555570366728951,0.0080391983124758429,-0.040120516693388314,0.0060896119887392684,0.017244979433277866,0.035148941551670532,-0.017367220791631114,0.0082884914451902079,0.007722449615121401],\"z\":[-0.0006494255497178766,-0.026317862404486792,0.03796322880691972,-0.0025954945181431376,0.022333224478058668,-0.022049005989333736,0.050458390068394914,0.0082549090443060219,-0.028033799757169318,0.043736432451186295,-0.013469715200631369,0.050881070879866395,0.016093024872214895,0.012548566041769186,-0.00040362135542771217,0.034905833775545202,-0.0036642451360344394,-0.067407903524990972,0.037711714856067176,0.014561851614195435,-0.0069054544199701334,0.012289754282708598,-0.039037839618896508,0.02420659418335518,0.0079514270977178135,-1.5772849405340113e-07,0.0095180174715459153,-0.025003407200294828,-0.015395577309364588,0.0027705248084358685,0.032954915558753288,-0.050625073712134518,0.021531509912933917,0.010882578482261601,-0.0161562145498821,0.0038784200211666692,-0.020238607381259235,0.036423908050661147,0.012805257719254018,-0.033246701529051285,-0.02620539480307264,0.024973005238557933,-0.022236622616600688,-0.0028983709918280597,0.0094218497632747519,0.019666251972629143,-0.0062595384716458476,-0.00035605189821168951,0.022601137018771148,0.040284385287702527,0.007103821429948338,0.0078738311019918364,0.062610691183655184,-0.025635706196243033,-0.028980263131849208,-0.011598775168227247,-0.032218115830240007,0.016255018429499134,0.065246889521523715,0.0072329063338766701,-0.014942100257109259,-0.02397646951343841,-0.043889850203442902,0.025100636135993587,-0.0038259972704102344,0.02473527776205434,-0.013492629475805599,-0.015013895190219922,-0.031628834909736024,0.043721278210726272,0.017598752218232983,-0.052072411361353189,0.046820135904634352,0.020599833248149388,0.036383304032696809,0.018834269194831221,0.029686831075960107,-0.055364932606297892,-0.041539774041954781,0.035962429084947782,-0.010798921518949019,0.040072899820517455,-0.001399033158415853,-0.021651702398062318,0.0097990562855518239,0.0010774298109478564,0.0085357484734870735,-0.013587249031274048,0.032674400912834779,0.0088518789708875202,-0.023976274866431949,-0.04964122657141902,0.023088471285236774,0.043635353336460743,0.012852678017621097,0.036902845432798974,-0.041029843397594301,-0.018007129068413941,0.037811212415945095,0.028443764992821467,0.02115499715213957,-0.01172127613258471,0.041500187881153297,-0.0021721607693872117,0.020662518904576623,-0.00054653835788687883,0.014523007505720057,-0.013476042248804949,-0.067178665350767455,0.014936231702995368,0.031805298008045331,0.023157359232845613,0.015711592061290771,0.020571581459559909,0.023074476449708926,-0.013574709696092559,-0.0076182960767555187,-0.019420027344477384,-0.023859355940283749,0.018373307388261029,0.011264754113482423,0.040877934767251704,-0.019107281549279462,-0.020463584937832079,0.0058399361096725571,-0.039686236595310523,0.017324097288318536,-0.018191410123325959,-0.009576782684823603,0.0048196906322098016,0.040424518684396615,0.0048899512735354998,0.013998569440369224,-0.0319177086053428,0.001897740270828552,-0.042633040093794865,0.021800712784143229,-0.014898452640985419,0.0059445573494381091,-0.010447144680906071,0.012498960318235873,-0.013355552559570532,0.022637753760606956,0.033795580928659516,-0.028832811579049957,0.011983768069566005,0.0045706009497344137,0.017944653797986574,-0.0033410960073609465,-0.0059299012744004507,0.0075322051079926254,-0.016447336486814228,0.061817730068890075,0.010612381603014883,-0.014509659218151963,0.0015391472351855002,-0.035380567301726909,-0.010046108616893801,-0.0062211329273982969,0.0032458705017480048,-0.016708729432880903,-0.0085737243847813505,-0.02911448077483203,0.064609464122284951,-0.015383635493920442,-0.0079014049623886869,-0.033425038267654174,-0.030283236383410354,-0.01648353481632869,0.030253309936102035,0.033727991866189036,0.008347644144392494,0.0034874586689849305,-0.032268963486239408,-0.014903002269252943,-0.0012434084049109347,0.015798611010010084,0.026413039025923308,0.024994541719662887,-0.021081329124234983,-0.02496129570587196,0.035072557320056243,0.01541429045621222,-0.01022857725261498,-0.018228970556605134,0.012793548406072171,-0.0013086245921227152,0.013659957283085023,-0.033299008223495505,0.0020158271388439923,-0.00068958980436312038,0.050245702278923166,0.00097161028286464059,0.011023728059890289,0.0025310682025721197,0.028677653693650253,0.00088545629086016144,-0.010029804646558513,-0.0097351103782062753,0.0087358577482295249,-0.012870973373797124,-0.0068421367439849652,-0.018365883193915356,0.029125626996658951,-0.039628334634714553,0.023885398893494236,0.01804445620482421,0.0036225464891265235,0.015584255064828193,-0.0098557374396294629,-0.018353690542902309,-0.015662049932515291,-0.032432670735103517,0.037707908504532213,0.018265309549669401,-0.0046173676665281502,0.013204325052851924,0.023410733973469711,-0.077777845907794033,-0.018429806918040068,-0.019060103449499762,-0.011129853190647255,-0.01158651084243458,0.0072465701040888763,-0.03048872906989776,0.012091873871002868,0.0045009801894694669,-0.0050333383081803745,-0.011541844424332702,0.0052595235774619623,0.0078696753291825575,-0.014544557993016148,0.0012031422444211235,0.059364613587807945,-0.038942382369296716,0.0071773249667681852,-0.029949397481271765,0.0031708258346579143,0.0047071236517813317,0.032888674711162434,-0.021447681044923093,0.017560807545570243,-0.034508193919380169,0.0049320256537134233,-0.0051545209941794845,-0.014166764461906237,0.010903753876849873,-0.022392257604759342,-0.018980088684622642,-0.026977332428341251,-0.018319389099210312,-0.018617025421046849,0.00037580641593608198,0.0041554325021180422,0.030059147216640339,0.01174708083387078,-0.0081394488990834644,-0.012863350164880957,-0.00047606487658183896,-0.040014486825638296,0.005182533489598168,0.056532025160375615,0.022616666720633585,-0.021360247801919349,-0.033938041093164562,0.0018576261153179616,0.016414721786974028,-0.0088781408032033941,-0.0033649288433725303,0.015309594243197682,-0.019188160754386892,-0.030641537774533462,0.023951901408148225,-0.016622837543285758,0.019092462380424717,-0.036359257481007635,-0.013812518136620777,0.018685914939056015,0.019411622331209678,0.026935135965389469,0.015309866814304709,0.010696924359105804,-0.019563581395664085,0.0066915182969828797,0.026081791043484424,-0.0043404244368513362,-0.013476354718486076,-0.022179259795701865,0.021954832554810427,0.010626680131038532,-0.0076437345525173454,0.021431457742455286,-0.01989350617832154,0.017915885840328515,-0.0028970220894204857,0.015950360252983079,-0.010258882136115506,-0.0088446680687316939,0.00098616887171696288,0.019529843320196513,-0.01197538944235524,-0.072088560396376095,-0.0095015926928807767,0.026179643270832664,0.019112034999071048,-0.00068730344604506796,-0.021776830354564122,-0.01853791165497759,-0.019402707135485232,-0.011960243760299607,0.018522255829314369,0.012169543877103488,0.021010165858036691,0.017667535351264578,0.0062975382943902683,-0.0068769713055081274,-0.015976034048790898,-0.023105961126806265,-0.030348024975527157,0.066214983997468974,-0.020496144525835015,0.034068822194323688,0.038409252544393278,0.03391433872203449,-0.023547786089335478,-0.0025158167779293578,0.055327040084777276,-0.0079290687918119902,-0.0037857023164729929,0.014970115361381695,-0.031580351558866855,0.019512241948997498,0.0069849108044116809,0.012072961664970849,0.026841392441837392,-0.014772260573888548,-0.0059301334939132937,0.061883354771197177,0.020086662875250114,0.029090428949832877,-0.0066163557930783174,-0.028610388148088469,-0.025962292929939276,0.0076281152697995,-0.045615256972247414,0.011511985707372966,-0.0060389192435773608,-0.0020824736627939847,0.031989667097141988,-0.028185533021894561,0.015158345407539532,0.0073776784348029388,-0.012401825229058413,-0.042941609687799996,0.0092821589272725248,-0.0022839470102126694,0.016327162426240046,0.014015363871203083,0.028301683392226711,-0.011619289669834415,0.025689145852170348,0.025520075283736048,-4.9664705043272954e-05,0.019361961125096729,0.018190495208542302,0.0012150315663344727,0.020663889321166438,-0.024415393341380483,-0.015922246012119817,-0.0076254883310584868,-0.03158511956657583,-0.047631704352259607,0.036893221239047494,-0.022920294606828075,0.019230252743455398,-0.0072824778850092827,-0.0081549443367061533,-0.0037486986774425335,0.025562059726721809,-0.0064131831484199719,0.014399721092937006,0.033638059929137487,-0.013759380630235683,-0.0027617925484692447,-0.030137636208262777,-0.013624830332294835,0.015765644707980676,0.02272781633744449,1.6573394954605289e-06,-0.0058335929130504819,-0.021479972098907913,-0.039376550299730001,-0.015714965486473748,0.013804775965698986,-0.0074791961520928353,-0.0049698196874785024,0.02462571885125673,-0.012560769299370018,-0.040012118352831479,0.026690600392056809,0.004139707157819578,0.037347596776251005,0.017020034108689259,0.051426588356174863,-0.00070399734903695574,0.07264078047258915,-0.0068846391877275129,0.041039042390123563,0.015429338733477221,-0.0071887246507560407,-0.061322188904122735,-0.020313603088246993,0.022224482733748073,-0.034661414741005044,-0.021837621706474512,-0.0096359687336110434,-0.036946479039643661,0.017852132578057157,-0.054201496022666919,0.015150419625566732,0.017470436919284633,0.004886974937118955,-0.025599269258248129,-0.042869140083677454,-0.0269888780002649,0.0068700592394110539,-0.0065291426649463731,-0.006582711571759871,-0.030422745623054449,0.0243619514853472,-0.012845656937401372,0.0052972636618510358,0.0019200834639687197,0.0024749943883290845,-0.1021629959508096,-0.035092991745206102,-0.028043217059590248,-0.011305464602080794,0.0049318439847402086,0.00097862502376463187,-0.04281904889279315,-0.040978248586332609,-0.030550342031531712,-0.0051368308503065476,-0.021635206212291164,-0.063449279561602734,0.027053843519658716,0.024874246760921558,-0.070353623122256306,0.015605976576751304,-0.028924875200297417,-0.023296667596614341,-0.016283358107649436,-0.012503838516093982,0.040486458891709445,0.00081727801768658663,0.035411079131916684,-0.045307808484521518,0.018965743813115152,-0.00011087491713078532,-0.027199268630157317,-0.045544610688045016,0.004963797646563484,-0.019065437984160983,-0.0032008370266741861,-0.029482760818881838,0.026493608742366462,0.023531322189175953,0.0088093089043850461,0.028900112881835069,-0.019347568586252896,0.042490544689203893,0.025690570659239711,-0.0048746653334150415,0.020616825283788807,-0.030937992616919947,-0.025424641059396097,-0.030470199105080774,0.012052966498852622,0.0057932779904746601,-0.038467748426450739,-0.0051373769937760657,0.0041809392337735368,-0.01088043977499575,-0.022446269452087379,0.011543335437310159,-0.0048211603654191772,-0.00163146237175434,-0.035109325418720701,0.060811154329146903,0.017204939900489748,-0.0087843718942343177,-0.021294065448276014,-0.016535045632850229,0.010172973169314798,0.0007055980402259081,0.057467637537180982,0.022445651319793015,0.0015718469587842818,0.022109841346338029],\"mode\":\"markers\",\"text\":[\"gene_1\",\"gene_2\",\"gene_3\",\"gene_4\",\"gene_5\",\"gene_6\",\"gene_7\",\"gene_8\",\"gene_9\",\"gene_10\",\"gene_11\",\"gene_12\",\"gene_13\",\"gene_14\",\"gene_15\",\"gene_16\",\"gene_17\",\"gene_18\",\"gene_19\",\"gene_20\",\"gene_21\",\"gene_22\",\"gene_23\",\"gene_24\",\"gene_25\",\"gene_26\",\"gene_27\",\"gene_28\",\"gene_29\",\"gene_30\",\"gene_31\",\"gene_32\",\"gene_33\",\"gene_34\",\"gene_35\",\"gene_36\",\"gene_37\",\"gene_38\",\"gene_39\",\"gene_40\",\"gene_41\",\"gene_42\",\"gene_43\",\"gene_44\",\"gene_45\",\"gene_46\",\"gene_47\",\"gene_48\",\"gene_49\",\"gene_50\",\"gene_51\",\"gene_52\",\"gene_53\",\"gene_54\",\"gene_55\",\"gene_56\",\"gene_57\",\"gene_58\",\"gene_59\",\"gene_60\",\"gene_61\",\"gene_62\",\"gene_63\",\"gene_64\",\"gene_65\",\"gene_66\",\"gene_67\",\"gene_68\",\"gene_69\",\"gene_70\",\"gene_71\",\"gene_72\",\"gene_73\",\"gene_74\",\"gene_75\",\"gene_76\",\"gene_77\",\"gene_78\",\"gene_79\",\"gene_80\",\"gene_81\",\"gene_82\",\"gene_83\",\"gene_84\",\"gene_85\",\"gene_86\",\"gene_87\",\"gene_88\",\"gene_89\",\"gene_90\",\"gene_91\",\"gene_92\",\"gene_93\",\"gene_94\",\"gene_95\",\"gene_96\",\"gene_97\",\"gene_98\",\"gene_99\",\"gene_100\",\"gene_101\",\"gene_102\",\"gene_103\",\"gene_104\",\"gene_105\",\"gene_106\",\"gene_107\",\"gene_108\",\"gene_109\",\"gene_110\",\"gene_111\",\"gene_112\",\"gene_113\",\"gene_114\",\"gene_115\",\"gene_116\",\"gene_117\",\"gene_118\",\"gene_119\",\"gene_120\",\"gene_121\",\"gene_122\",\"gene_123\",\"gene_124\",\"gene_125\",\"gene_126\",\"gene_127\",\"gene_128\",\"gene_129\",\"gene_130\",\"gene_131\",\"gene_132\",\"gene_133\",\"gene_134\",\"gene_135\",\"gene_136\",\"gene_137\",\"gene_138\",\"gene_139\",\"gene_140\",\"gene_141\",\"gene_142\",\"gene_143\",\"gene_144\",\"gene_145\",\"gene_146\",\"gene_147\",\"gene_148\",\"gene_149\",\"gene_150\",\"gene_151\",\"gene_152\",\"gene_153\",\"gene_154\",\"gene_155\",\"gene_156\",\"gene_157\",\"gene_158\",\"gene_159\",\"gene_160\",\"gene_161\",\"gene_162\",\"gene_163\",\"gene_164\",\"gene_165\",\"gene_166\",\"gene_167\",\"gene_168\",\"gene_169\",\"gene_170\",\"gene_171\",\"gene_172\",\"gene_173\",\"gene_174\",\"gene_175\",\"gene_176\",\"gene_177\",\"gene_178\",\"gene_179\",\"gene_180\",\"gene_181\",\"gene_182\",\"gene_183\",\"gene_184\",\"gene_185\",\"gene_186\",\"gene_187\",\"gene_188\",\"gene_189\",\"gene_190\",\"gene_191\",\"gene_192\",\"gene_193\",\"gene_194\",\"gene_195\",\"gene_196\",\"gene_197\",\"gene_198\",\"gene_199\",\"gene_200\",\"gene_201\",\"gene_202\",\"gene_203\",\"gene_204\",\"gene_205\",\"gene_206\",\"gene_207\",\"gene_208\",\"gene_209\",\"gene_210\",\"gene_211\",\"gene_212\",\"gene_213\",\"gene_214\",\"gene_215\",\"gene_216\",\"gene_217\",\"gene_218\",\"gene_219\",\"gene_220\",\"gene_221\",\"gene_222\",\"gene_223\",\"gene_224\",\"gene_225\",\"gene_226\",\"gene_227\",\"gene_228\",\"gene_229\",\"gene_230\",\"gene_231\",\"gene_232\",\"gene_233\",\"gene_234\",\"gene_235\",\"gene_236\",\"gene_237\",\"gene_238\",\"gene_239\",\"gene_240\",\"gene_241\",\"gene_242\",\"gene_243\",\"gene_244\",\"gene_245\",\"gene_246\",\"gene_247\",\"gene_248\",\"gene_249\",\"gene_250\",\"gene_251\",\"gene_252\",\"gene_253\",\"gene_254\",\"gene_255\",\"gene_256\",\"gene_257\",\"gene_258\",\"gene_259\",\"gene_260\",\"gene_261\",\"gene_262\",\"gene_263\",\"gene_264\",\"gene_265\",\"gene_266\",\"gene_267\",\"gene_268\",\"gene_269\",\"gene_270\",\"gene_271\",\"gene_272\",\"gene_273\",\"gene_274\",\"gene_275\",\"gene_276\",\"gene_277\",\"gene_278\",\"gene_279\",\"gene_280\",\"gene_281\",\"gene_282\",\"gene_283\",\"gene_284\",\"gene_285\",\"gene_286\",\"gene_287\",\"gene_288\",\"gene_289\",\"gene_290\",\"gene_291\",\"gene_292\",\"gene_293\",\"gene_294\",\"gene_295\",\"gene_296\",\"gene_297\",\"gene_298\",\"gene_299\",\"gene_300\",\"gene_301\",\"gene_302\",\"gene_303\",\"gene_304\",\"gene_305\",\"gene_306\",\"gene_307\",\"gene_308\",\"gene_309\",\"gene_310\",\"gene_311\",\"gene_312\",\"gene_313\",\"gene_314\",\"gene_315\",\"gene_316\",\"gene_317\",\"gene_318\",\"gene_319\",\"gene_320\",\"gene_321\",\"gene_322\",\"gene_323\",\"gene_324\",\"gene_325\",\"gene_326\",\"gene_327\",\"gene_328\",\"gene_329\",\"gene_330\",\"gene_331\",\"gene_332\",\"gene_333\",\"gene_334\",\"gene_335\",\"gene_336\",\"gene_337\",\"gene_338\",\"gene_339\",\"gene_340\",\"gene_341\",\"gene_342\",\"gene_343\",\"gene_344\",\"gene_345\",\"gene_346\",\"gene_347\",\"gene_348\",\"gene_349\",\"gene_350\",\"gene_351\",\"gene_352\",\"gene_353\",\"gene_354\",\"gene_355\",\"gene_356\",\"gene_357\",\"gene_358\",\"gene_359\",\"gene_360\",\"gene_361\",\"gene_362\",\"gene_363\",\"gene_364\",\"gene_365\",\"gene_366\",\"gene_367\",\"gene_368\",\"gene_369\",\"gene_370\",\"gene_371\",\"gene_372\",\"gene_373\",\"gene_374\",\"gene_375\",\"gene_376\",\"gene_377\",\"gene_378\",\"gene_379\",\"gene_380\",\"gene_381\",\"gene_382\",\"gene_383\",\"gene_384\",\"gene_385\",\"gene_386\",\"gene_387\",\"gene_388\",\"gene_389\",\"gene_390\",\"gene_391\",\"gene_392\",\"gene_393\",\"gene_394\",\"gene_395\",\"gene_396\",\"gene_397\",\"gene_398\",\"gene_399\",\"gene_400\",\"gene_401\",\"gene_402\",\"gene_403\",\"gene_404\",\"gene_405\",\"gene_406\",\"gene_407\",\"gene_408\",\"gene_409\",\"gene_410\",\"gene_411\",\"gene_412\",\"gene_413\",\"gene_414\",\"gene_415\",\"gene_416\",\"gene_417\",\"gene_418\",\"gene_419\",\"gene_420\",\"gene_421\",\"gene_422\",\"gene_423\",\"gene_424\",\"gene_425\",\"gene_426\",\"gene_427\",\"gene_428\",\"gene_429\",\"gene_430\",\"gene_431\",\"gene_432\",\"gene_433\",\"gene_434\",\"gene_435\",\"gene_436\",\"gene_437\",\"gene_438\",\"gene_439\",\"gene_440\",\"gene_441\",\"gene_442\",\"gene_443\",\"gene_444\",\"gene_445\",\"gene_446\",\"gene_447\",\"gene_448\",\"gene_449\",\"gene_450\",\"gene_451\",\"gene_452\",\"gene_453\",\"gene_454\",\"gene_455\",\"gene_456\",\"gene_457\",\"gene_458\",\"gene_459\",\"gene_460\",\"gene_461\",\"gene_462\",\"gene_463\",\"gene_464\",\"gene_465\",\"gene_466\",\"gene_467\",\"gene_468\",\"gene_469\",\"gene_470\",\"gene_471\",\"gene_472\",\"gene_473\",\"gene_474\",\"gene_475\",\"gene_476\",\"gene_477\",\"gene_478\",\"gene_479\",\"gene_480\",\"gene_481\",\"gene_482\",\"gene_483\",\"gene_484\",\"gene_485\",\"gene_486\",\"gene_487\",\"gene_488\",\"gene_489\",\"gene_490\",\"gene_491\",\"gene_492\",\"gene_493\",\"gene_494\",\"gene_495\",\"gene_496\",\"gene_497\",\"gene_498\",\"gene_499\",\"gene_500\"],\"opacity\":1,\"marker\":{\"color\":\"#0066FF\",\"symbol\":\"circle-open\",\"size\":1},\"name\":\"genes\",\"hoverinfo\":\"text\",\"type\":\"scatter3d\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"autosize\":true,\"title\":\"3D CA plot\",\"showlegend\":false,\"scene\":{\"xaxis\":{\"title\":\"Dim1\"},\"yaxis\":{\"title\":\"Dim2\"},\"zaxis\":{\"title\":\"Dim3\"}},\"hovermode\":\"closest\"},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[-2.1133816829645222,0.43565512853283866,-1.6739240475212409,3.0216904526931478,-0.25604408768322073,0.068030204834949592,0.61217247304957623,-1.0738513605556679,0.45380101329600236,-0.40712945301526826,0.8406871053278171,-0.9253440052821833,0.88012385799114812,-0.29676610914899682,-1.0404154834225885,-0.44005076417455058,1.3957047546469472,-1.3247105289825634,2.4667937674796581,0.3867730623448602,-0.52929555890259394,-3.7946616865401426,0.84883445192934948,0.25289588762634696,-0.26519781350535843,0.42192429844984081,-0.13052725419827599,0.87738000942890337,0.38102397590635034,0.10433981406640669,0.40725278262280112,-2.1076351979925221,-0.08625950428317726,0.50319652676347437,-0.48539423054943059,1.6212533112411724,1.1321839558735469,-1.8586145613974645,-1.1589579979581948,-0.079088243737255079,-2.5732098608631633,-1.2042128591145516,4.6593674708393875,0.10202843962804174,0.70780082243913189,0.79440656563506706,-2.5019781533033449,-0.82079385633966839,-0.88737600274525985,1.6349426274239169],\"y\":[2.8864224531526195,0.1947285905452244,1.5711417853049916,-1.0102293193801237,-0.34146752235601674,-1.7377681373726148,0.067247826201852073,0.15267995783232999,1.083197059986015,-1.3334056633970346,0.12024822703547926,-0.028249023420895056,-0.10402961799961445,-0.62223436541146016,-0.32805272026234639,1.250402080566315,-0.46164846543355365,-0.81243291840911835,0.97523516895683382,0.21735961782609431,-0.46732352126620119,3.3812859521595904,-0.48142687036456894,0.50292440324216436,0.12828530047999784,1.453724678946914,0.55052341706978813,-0.92349442119064684,1.8525893452205968,-0.96884530747753994,0.44828578073127895,1.8189486389271834,2.8667328647194132,-2.3651410047186125,-0.46432501473326493,0.73239684141825856,-3.4404635718203496,0.74950603862454124,-1.9147326519157584,0.22687184278568512,0.27770243896230384,0.025039003486281998,3.4450968917503602,0.77119715103776121,1.494624687187174,-0.38954191263827542,-0.1528244831530523,-1.4987580723673615,-1.1576641664605587,-0.45728997746107403],\"z\":[-0.2685406446844284,-0.27730844136427663,1.2271740833970843,0.77971037148203381,-0.95768271601164046,-0.1092641461149732,-0.051539456456792754,-0.54774106706149284,-4.4848601701398643,-2.5279724746181356,0.19528624559532592,0.82045265513657273,0.7949876183615171,-0.89235717546663862,-0.2563302471251635,-1.0845495096610622,-0.87745288457595638,0.80896187796644459,-0.81175916985175134,0.29128303014236323,-5.0666459800559238,-2.3526450106135757,0.16069910083510586,0.35932599903287288,-0.43008972152723013,1.1058857955352608,0.8897465488749754,1.5292143071253281,0.45661373435316494,-0.081715127722188974,-0.16791205078627972,5.262113952289444,1.4300950666383843,-0.26206224945677942,0.11667187906620857,1.0784508776710848,0.93317656247451097,-0.98079301553941978,0.35050317030003975,1.5514732470040282,-1.9317895647517536,-0.056270867726152203,-4.5414558482100329,-0.84749677926376521,-1.4064428252124836,-0.079384707054623291,-0.469392334852203,-0.26929041800159126,-3.0231668955532549,0.4595688295277538],\"mode\":\"markers\",\"text\":[\"cell_1\",\"cell_2\",\"cell_3\",\"cell_4\",\"cell_5\",\"cell_6\",\"cell_7\",\"cell_8\",\"cell_9\",\"cell_10\",\"cell_11\",\"cell_12\",\"cell_13\",\"cell_14\",\"cell_15\",\"cell_16\",\"cell_17\",\"cell_18\",\"cell_19\",\"cell_20\",\"cell_21\",\"cell_22\",\"cell_23\",\"cell_24\",\"cell_25\",\"cell_26\",\"cell_27\",\"cell_28\",\"cell_29\",\"cell_30\",\"cell_31\",\"cell_32\",\"cell_33\",\"cell_34\",\"cell_35\",\"cell_36\",\"cell_37\",\"cell_38\",\"cell_39\",\"cell_40\",\"cell_41\",\"cell_42\",\"cell_43\",\"cell_44\",\"cell_45\",\"cell_46\",\"cell_47\",\"cell_48\",\"cell_49\",\"cell_50\"],\"textposition\":[\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\"],\"opacity\":1,\"marker\":{\"color\":\"#990000\",\"symbol\":\"x\",\"size\":2,\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"name\":\"Columns\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"type\":\"scatter3d\",\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"frame\":null},{\"x\":[0.022910849167580051,-0.013734012328508426,-0.0005237589544897813,-0.0041611532707799869,-0.017377970492799391,-0.012999426593706126,-0.016176208698963728,-0.041142612207267601,0.030094267184330684,-0.0017828913935082999,-0.088531515871980312,-0.013902441557606589,0.025694389197914124,-0.02672298374882142,-0.010373822502445429,-0.032344099381276498,0.029673162476230971,-0.0031764809026886085,-0.0047281066712759629,-0.037128525896849909,0.0087074840755693057,0.0051032944112486397,0.042108648673598412,0.003749517146936783,0.013515220244919786,0.0063061611215661549,0.021354759399102252,-0.012820455360795084,0.026862294973341326,0.019184798159137414,0.043654443087390291,0.017895916229125175,0.042548756308681497,0.0065974376304818215,-0.043059813181733408,-0.015536731866403435,-0.0047922087729927055,-0.028897194509041053,-0.01139720407258446,0.0067392194924906093,-0.013734786004613869,0.046418680546421433,0.0053616334076214082,0.077886794796383885,-0.040758280522867819,-0.024659856180689901,0.022932111336869818,-0.015940164406717337,0.006193556656946049,-0.0024003536723296438,0.023456689458238353,0.049840573874906993,0.024347732676748311,0.047804055057356465,0.0076331400140197186,0.025724661709352861,-0.004303643120764292,-0.017848507478799583,0.011207490303319677,-0.028976269232907366,0.02090795526934917,-0.020838447672108525,0.016452371071344285,-0.029118774086005095,0.034905690260321649,-0.0099067611298988591,0.008990419773460637,0.019461731159765058,-0.014282825465848848,-0.043876732462187845,-0.016088516518973514,0.05088037127401198,0.0099880052220433727,0.015713267305520029,-0.0055933817134973486,-0.0096817936804499752,0.035377892584072278,-0.026667489160868852,-0.0011368734413303009,-0.015617691249545075,-0.030390688446719862,0.011549438238510044,0.02249964412900423,0.024606198349291331,0.021224965710593176,-0.0060790681197148387,-0.035770388400162105,0.0077576700844249518,0.017349366926222347,0.0060868155188063405,-0.0080541220436759261,-0.051053448558217272,-0.037831122131085256,-0.022129806233708041,0.0050848387822066462,0.040538899369270277,0.016357024952343303,0.037107569715871473,-0.0032785463527900982,0.021901089351975035,0.031361377049398731,0.0096490582195075322,0.019903795214129705,-0.0057838534799961863,0.022392928909044527,-0.0027504944548835909,0.012944917186324812,-0.00016080183692450032,-0.051017045857279668,0.006927379259213837,-0.079085203099524257,-0.00055099021359461173,-0.034489631491450637,0.016452198813022102,-0.031096800621308922,-0.013233533599829556,0.058175254287222006,0.0074591211790435985,0.0075232373326897875,0.0061474564811801443,0.039429556935775996,-0.024686023454265842,-0.020849014693246314,0.029029873524594629,0.025349622759772601,0.0036906806051538181,0.023408795595333338,0.017479588985555232,-0.00075105104973083206,0.0069230080010693673,-0.01669267462891743,-0.0092748429880977756,0.020508676121796254,0.017535286272181448,0.02940173789240515,-0.00070430867667870987,0.017973235665925024,0.0005961125264706417,0.0093783499226014044,-0.019086560392123007,-0.044354089558248044,-0.048041663215268378,0.028566552559699539,-0.029253307067823031,-0.011705885779010836,0.016423018503346858,-0.038571457837603733,-0.018122107414483106,0.037878641018361761,0.033141909075529039,-0.013774291053121024,-0.015887019831729854,0.034080038348729046,0.015467842258950974,0.05843311641151254,0.0015203718677417521,-0.043086153098890134,0.0026676661731004393,0.013423367577275698,-0.026600607069033423,-0.028887937602987589,0.029855977997786588,-0.021870609923697878,0.051000913092059418,-0.011118218526272573,0.014243894961193998,0.00091597007709530432,0.018625424812576615,0.01062441874125445,0.049247461674769261,-0.011147847554744886,0.026870390758296388,0.029352033122763431,-0.0221567753324707,-0.020554933464191481,0.010748324422987789,-0.0085591510817789995,-0.028888433667182314,0.0068599632177393666,-0.0050031993055190743,0.0045820884341761774,-0.016822294646997492,-0.025565716903843246,-0.015509448933944197,0.0053812564473390053,-0.013087749391583475,0.013175398375037953,0.01726030883512826,-0.0015460984376634984,-0.017082366152351945,-0.0026849493001135987,0.0056710456296591256,-0.014224297820085821,0.0051090435387234423,0.00072025685993931231,-0.030904213717914533,-0.018670285497243099,-0.003092565346972114,-0.00485215164074221,0.01439547481742953,-0.017547444796679763,-0.051437393981720356,-0.023107744865143203,0.028227372792717937,-0.010633565895178467,0.026852542039512046,0.01014716540458864,-0.054222585130058884,0.025761050440716943,0.029378156542371973,-0.015100548796777403,-0.033224550499509273,-0.001163736563350706,-0.0052029427226484466,-0.028226120205923574,-0.02431046829983808,-0.0093752415095331668,0.052157577876802926,-0.004362903438341276,-0.011377130229844533,0.071834647255374931,0.0080751157907354744,0.0080565138822886982,-0.014944623077140184,-0.011117731630402375,0.0098471299669187565,-0.016536952752628595,-0.017382977130412435,-0.024669475474462039,0.0016981792860295956,-0.011678780457285728,-0.021452145227376221,-0.030777099816614813,-0.0023920091190451553,-0.056062474382802159,-0.0010719006779451111,-0.023807802240658954,0.022992881330438628,-0.010226407002942915,0.045592842012917682,-0.037472227273153184,-0.038383643949518993,-0.0080407467957393577,-0.018900217592832707,0.0020797373241407784,0.040981793912748844,0.030315335857359939,-0.0088991484763382735,0.069419855678732961,-0.00075810579915630181,0.014042244889432285,-0.029249467851176946,-0.0013863553408407561,-0.015095259704734651,0.0013316213521243842,0.012773673326070985,-0.048493631545164881,0.0071468473012924263,-0.016851124111316937,0.03108321653035899,-0.026123637253258801,0.007466114849116484,-0.050668807288231442,-0.0046912522724135717,-0.037084992923662762,-0.0351324467874497,0.0070529248584932352,-0.01676661267705911,0.054782145064244808,0.022163287031890258,0.0028495800420518975,0.0033879536376204295,-0.026168181881260556,-0.0055559015019881188,-0.00084564761146313733,0.017211164793507792,0.0071539551398885617,0.0026724175541879801,-0.030081923059607583,0.022760902646452627,0.03797366630954848,0.029014907656481251,0.017455210713544968,-0.015350092388377357,0.0057263372668995153,-0.049002402977156745,-0.012437651873341749,-0.02131073977520279,0.0096153218343190093,-0.0058133336836455607,-0.0061550994459345365,0.028793151794491694,0.045356137049024386,0.018066170891620287,-0.0068587288711306664,-0.0081214191569817743,0.049333674215552986,0.018035226370834368,-0.0080376205584801654,0.01162747968310879,-0.058702005589213138,0.01512379317234866,0.003465382891781249,0.017514709964401548,-0.059495120337383821,0.006979550260884604,0.013927491638691957,-0.006282760329402658,-0.011647225108672733,-0.019534689530509752,0.040330832057937922,0.0019995729405704859,0.0032966048299250504,-0.062625800214185109,0.0087296715845633314,-0.021199244318097075,0.033280705200444287,-0.021321170784186279,0.01392765213117093,0.0096510258405197932,-0.034538864571038046,0.023362769912063725,-0.024962602998316773,-0.0099484944687029623,0.023535285608379006,0.026437803772330955,-0.050561344553474469,-0.027645679834564185,-0.00095623551348420009,0.011055023554821703,0.023333041682302873,-0.0044194477226709794,0.0004812800610598166,-0.0025276760282928264,-0.0023225649437536833,-0.042654365641213325,0.028908148726049718,-0.016072298797649414,0.036205996602641968,0.041544317799187956,-0.0058136129914257914,-0.009860414798730054,-0.011713925404218535,0.036302491741344305,-0.00028458593786520912,0.022809122969871681,-0.0036382026780113316,0.038206880251009552,-0.042978384028021344,0.008914281128580363,0.023570018455548829,0.019478688120211606,-0.032113461703424696,-0.019320344710068407,0.0035608006621046331,-0.010726338271157126,0.057986729575591374,-0.053239770585546096,-0.053845732270172121,-0.0016917942166416121,0.046564213968238399,0.0087989443813607602,-0.0079417060373368296,0.0075726378317544189,-0.011592471240860054,-0.013462053612502417,0.051824071628322657,0.01870587476214431,0.032947180832459524,0.022031220611741068,-0.043742793128837158,-0.049596628757518621,0.022810138605532285,0.048907303065470073,0.0072605601017550776,0.0081677574925285885,-0.003415842325241301,-0.05649857048564999,0.0029841599600190808,0.0023533606546959802,-0.043392393992799344,-0.030157751483983398,-0.011605498438612891,0.067283580806302645,-0.0092343020486964963,0.033238052469444522,0.024450801134883599,-0.0012207122497880382,0.015397508982560575,0.011695330621422454,-0.013113034210333862,0.039455281372993561,0.033552740484299758,-0.0060646633142100448,0.02899037671755399,-0.0014021168537615017,-0.018087773640353945,0.0032740780468996935,0.015849067429629028,-0.022092958519125825,0.0058432963854167319,0.0012014770802442993,-0.037011419686931453,-0.014359375900998181,-0.041914290723339132,-0.021627402545248118,-0.02032835009270165,0.0072807626803184705,0.012942357021696681,0.022234233311605532,0.0045759008095094672,0.026208767906963162,-0.018803969923026968,-0.038433104491242202,-0.035592465963982522,-0.038797212830391781,0.0073023563319602825,-0.029324578955148756,0.02906135908057985,-0.029001633122331172,0.0049798453366203636,0.036505601401378353,-0.03997309633741912,-0.0095216307374403203,0.00020775526768576234,-0.012300257016640878,0.0048749851148847017,-0.022343610299659464,-0.04844623226836197,0.031528926347957058,0.001213104897480919,-0.007323598627748883,-0.010289678607517219,0.0045520753688748569,0.019158674665814966,-0.0019300040694767097,0.01165001164799846,0.036945849662220483,0.037315879334741432,0.017123129169102986,0.041631588938371371,-0.013054034504754633,-0.023271941796301598,-0.019927052891317541,0.023918300044095755,0.047094671582042939,0.0057222039917993947,0.011463473763479453,-0.0015481431139969736,-0.015179937685081199,-0.024046951551702885,0.012693636300209961,-0.023775204550075112,0.010730067304919729,-0.04610161418456607,0.026465352934709519,-0.0019319822829354692,0.0080974110873587943,-0.011676022549809545,0.0082203943675178796,0.024602162342228388,0.0088297213748765434,-0.055860887286358997,0.016009207121800276,-0.0090400466811565387,-0.024876997707468367,0.017044836284056029,-0.029034282904135161,0.007561843277255148,-0.006472405027348152,0.0075941060208092829,0.049978410138385977,0.0027047790302500538,0.027207599003936888,0.0015408985054792762,0.045750834298098696,-0.024008899534434341,-0.050217505256823856,-0.023648335997699336,0.064274228025725369,0.016203460716213983,-0.042231067986035424,-0.015238093375202327,0.016893536237097741,0.004621470901022111,0.0039970660988377293,-0.042300669521409116,-0.0044585137751893059,0.019166785553999845,0.061934530329947217,0.021105746674869783,0.018047623013314154,-0.0049484668625740707,-0.012244453305962069,-0.055409767242692337,0.033171243206262982,-0.02995007560046016,-0.03549337900375471,-0.044807616138297583,-0.016676743547361979],\"y\":[-0.009503936259369912,0.0092458319237414665,0.027255269819590623,-0.01854861056890007,-0.0069710828373331212,-0.033084580282916387,0.0011628321433592007,0.041478279929049393,-0.0002308775145374865,0.024401693273591128,0.0023659905390422688,-0.036382648070018661,-0.011140076747438679,0.032278805115633614,-0.00030391395424007693,0.014160719737757422,-0.0031776087619378541,-0.025722151255229225,0.0032489866890593206,0.038389188767841996,0.024292135964750824,-0.015028953528016557,0.010889248587723855,-0.012962601882172067,-0.049430730711615606,-0.00089343947501640034,-0.02858631355023912,0.047163665604468989,0.014414492954028644,0.0011363192433837073,-0.016007476897827319,-0.0070290950786318258,-0.020930754276195212,-0.0010459242339077681,-0.01193925793564307,0.016465819950302316,0.033888963315960592,-0.0084223123963023082,-0.058546864768454859,-0.011923734469760569,-0.019354241113346136,-0.030501886769534237,-0.0036769991824234204,-0.056127071846414189,-0.010550416402621018,0.058872059282075923,0.030472908382158763,0.031522883606806419,0.018807696588655196,0.035649639054550798,-0.044665187913266124,-0.048199813116431602,0.01298153807953922,0.025321062333829844,-0.03659562595015535,-0.022104557982986883,-0.0060777404657592861,-0.052845558308948347,0.065393760619101751,-0.017504340690375576,0.033979277245541631,-0.039853437367895504,-0.01015201934048773,0.014009819510511225,0.0043701096785307494,-0.014466866782925856,-0.0068676874671379949,-0.0012559163111992083,-0.049118832968990972,0.0063947404224239703,-0.043547511949353843,-0.006315058368321769,0.033010678435488709,-0.0016018606842697718,0.022072536371472266,-0.018473470964772677,-0.025436078304796272,0.02855388700775199,-0.0043775576903279049,-0.0052791965604348174,0.0044072945854694325,0.016593084804867396,-0.0072684627048761564,0.0061090488187897606,-0.012409538116981311,-0.02030930539326525,0.017865761995122558,-0.037415629944349042,0.020165777051440528,0.016890133486508949,0.0066900343241174222,-0.020741392993743876,0.030580784740327157,-0.0087739037350892286,-0.012778450872889167,-0.050893690084816479,0.0016015212287722428,-0.042101251551553254,-0.0035655231335097524,-0.060756380078320224,0.017447474866795459,-0.01329479142135276,0.021753498392884436,-0.030774798273602064,0.00325459534254212,0.011406770990538818,0.0023979988478102475,0.023675054821662597,-0.019632777395836638,0.0022798325346528731,0.0053374222159511403,-0.020824965568413855,0.018174570347974376,0.034649818636492517,0.0058247578203817936,-0.0033851377816722489,0.0099423045806302894,0.026431699761823559,-0.00035239649629417599,-0.010897724597504127,-0.0080158630153638472,0.0054093482144650581,0.018196792811310571,-0.0057449775265785629,-0.0061204931365760754,0.033291128105767689,0.014156683982653861,-0.028702329212784587,0.0053959723537852803,0.038318290440846142,-0.021110907356200449,0.0067780675658795798,-0.0027602808659567863,-0.044102273647137126,-0.010585542529679148,-0.039234230780921156,-0.041911861378430948,0.039738658100435455,-0.0006751095353076242,-0.029570659064611867,-0.00092439084362845743,-0.018212145160447647,0.018799100376660115,0.019419076983037124,0.012796868122088545,-0.001992284106937988,0.04408143414469181,0.0011645609097163346,0.0075871031904031078,0.0092346730479928064,-0.0093125213314212228,0.033427837774463183,-0.0046172866173902916,0.0036889092308692089,0.060768866507945669,-0.039176190023599414,0.007952963083860615,-0.0057887502019741037,-0.019549767102601825,-0.0012660236048087706,0.013222472565969907,0.023122755512431935,-0.011734316276204847,0.045508380550510874,-0.013898290189855061,-0.0001175895723189569,-0.021915062707320784,0.0093097851334778669,0.046660981618635411,0.0035503759562966562,-0.027161645915471426,0.0049255606706935986,0.010247437191040728,0.037412036469258197,0.021950684393465366,-0.0060011006721458265,-0.027944538070483797,-0.02374840125213791,-0.027964734903919219,0.0047263236301133852,0.032447661268879893,-0.031069551518955286,0.004980837287300627,0.04181960450807385,0.006855462543358554,-0.020951567985399322,-0.0089382924769990345,0.025105345839404991,-0.019100465559177413,0.011065671649779198,0.016721988560584152,-0.0246446659883186,-0.04218444085413061,0.004121813265724486,-0.034760084862528712,0.029372250270732984,-0.0045284538037872876,-0.082253857016129139,-0.055789705790313837,0.015587957149356355,0.022793072714337476,0.028351312954906362,0.041973815449038367,0.014978176075432312,2.9288865219476019e-05,0.0013553016287802255,0.017284667117129508,-0.016167827051688299,0.0042680899435925254,-0.013674685090201918,-0.013744360429880998,-0.028591370893963294,-0.002367360588985303,-0.0045003432405476542,-0.00039352127346993526,-0.014709804010746173,0.020009030878609918,0.0084340917788060608,0.024408157106837226,-0.025088313428183434,-0.046001684775327442,0.0020841593926466282,-0.0013158287671658745,-0.018022254701615937,0.053335730917393097,0.050657282897959045,0.0052070521095463375,0.01111382679104146,0.0084891612783326072,-0.0010015743892787567,0.022800797459083626,0.014749581104609496,-0.021991859219939423,-0.028966139310676511,0.021300581483412823,0.039135001781417739,-0.0079119812857296658,0.024252531084406937,-0.058002034435635369,0.00033910960879185876,0.0061544322819979368,0.0061355906908945783,0.0095575454850621612,-0.055061122650959582,0.0068032653287254724,-0.027426034197248813,-0.049512276013835455,0.047950989737743845,-0.016744278089235946,0.0099235207425544276,-0.020404473413727198,0.062212692101261735,0.033226420246465521,0.037331448326335406,-0.025219640942906563,0.046761137666157679,-0.00601137623253673,0.044732183740160164,-0.014380416401762115,-0.00074192924664972192,0.012931202816386133,0.049792594009555262,0.040680733221274155,0.023011861395336109,-0.019287153854606165,-0.008016150070207239,-0.018843171625186957,-0.018008626383807437,0.012677849689481369,-0.008025326680338344,-0.022109333053532236,-0.017633332254939533,0.024041120890369052,0.023030676031444694,0.0192368478155545,-0.030764493173724854,0.018628447708987837,0.027435390511795069,0.053009947590435126,-0.024275363090741034,0.036006553421222678,0.033170463873796595,0.019438250118194139,0.018056688215262066,-0.029866577636385675,-0.034275845603505752,-0.025270405772168516,-0.0038134846300939725,0.012138732715381016,0.0067828358987279879,0.0084175190208012878,0.031500390852143054,-0.003815651974566449,-0.016017604143727705,0.024795425121315721,0.016571963370683097,-0.034891721985373172,0.015572253976642955,-0.0042752775887754451,0.00071252182886082354,0.010324426484181344,0.0041216769616479448,0.0077111312549405266,-0.055411837407141125,-0.025376733631501291,-0.015025692881042317,0.040282408259583811,0.01430868789652587,-0.04016179195090061,-0.048956715154428079,-0.016384464292124971,-0.027493037215272492,0.017963839925537819,0.016497120270664974,-0.018936811619796462,0.031607534371842931,0.0022958368661701745,-0.045424756035973825,0.0073173365319034239,0.012058169598573977,-0.021661838101031415,0.030555798952890446,-0.00048876478892940134,0.02724274988997916,0.0034488332382783273,0.039154455552983969,-0.010647401993271566,0.0051708081901576195,0.0033345875015963885,0.0030208122472715837,0.006144105852865513,-0.025662697044316226,-0.05241134582395212,-0.047679893624319583,-0.017745337726027221,-0.0060949356175406767,0.020038295730221367,-0.0090047407192126987,-0.029279348998515673,0.048255819714662203,-0.034182135344856326,-0.015119964162669969,0.0062861499321596476,-0.0017000910295362488,0.0066981502349106534,-0.018477763698531956,0.016013195735424538,0.035094134099356106,0.034918801626841772,0.033464827282111885,-0.0022693094165982556,0.022470105240212809,0.00079756906416273733,0.025041071195917586,-0.019553489389407638,0.0014897097500546539,-0.029745187919180613,-0.03457889125480415,0.0080837058116235306,0.026226142247159873,0.02510739532469038,-0.00062061636520085236,-0.038813946525019447,0.012902139636657879,-0.017304939608564867,0.034858006393817823,0.010487808728857373,-0.022843530220608116,0.005848811447103551,-0.002443035141487632,0.0145127094225682,-0.042941517493476668,0.016091920090376619,-0.0014627908715700675,-0.036629461020551875,0.028495334386289442,0.013660554030732215,-0.0080779716908934117,0.027272900398018531,-0.021873293526648591,0.030344924195434036,0.037298575348629938,0.0005632307109792109,0.031600651238622948,-0.0029228877174326804,0.033857619770924434,-0.0038393625285396624,-0.019346012578197947,-0.013161251108104181,0.029808485134749454,0.011725861877078232,-0.017241584494941072,0.015580638747191412,-0.059853324353498008,-0.015793259273935368,-0.0052421802249089699,-0.0041470066252360374,0.027284062170195592,0.0045278436224036496,-0.0012218365651380646,-0.015797530680626146,-0.0089217739055323462,-0.034281247017894964,-0.018524496779593263,-0.0071290057766208422,-0.037506944958241271,0.026429003245498888,0.018524000510462341,0.011102489254661656,0.031131113620090939,-0.016326537236684209,0.025441639343520592,-0.072386015198102727,0.01956043287326098,-0.010800205319328704,0.054261579936364553,0.022684316566057267,-6.7157180031250766e-05,0.030399579820140143,-0.023730646452674913,-0.066903355501812395,0.0297195190325087,1.4088003964518841e-05,0.0005063355490447127,0.024738036131231517,0.0010462902586848904,0.02411225039768717,0.027352062834842861,0.012811656188495633,-0.0086852397143978473,-0.0021292122474531276,0.031649383402289642,-0.026146546975303438,-0.018752302825251733,-0.03477257171634613,-0.0035994609262716155,0.022318851199296889,0.055625875288693803,0.0037642480860152852,0.023858331715668955,0.00020867914662296981,0.036023508575036479,-0.0010862030350880362,0.0016879066722667695,-0.010135310240354073,0.085981169221434589,0.004242977819577054,-0.010566119080694547,-0.0012736098762743005,0.0086257850310888923,-0.052475428603614781,-0.040071125996593397,-0.0022639004155399862,-0.046910744766651018,-0.081722004548269181,-0.010814805296556873,0.014908171187470315,-0.020014308660692374,0.0060537934821694971,-0.019552292131186998,-0.032932020096720277,-0.045456365988278249,0.0020623593241817437,0.04006792827635277,0.017386975120708355,-0.038474469454460904,0.0069312815382709262,-0.022492546927724053,0.022656100108383752,0.018502348034427331,0.0062488598051539694,-0.0097503986884040807,-0.021748159672702053,0.0087952710055315495,0.0018106347702877613,0.012528179630362853,-0.046555550052533666,0.029479063473342036,-0.032653789968268267,-0.049382704127690608,0.021480975804535792,0.021933188354427806,-0.0096568973417992098,-0.020973383461411324,0.0092666629557744129,0.017452878253884918,-0.013467848163406069,0.013938066922454166,-0.022988487631996922,-0.005975450026872893,0.038376705730928627,-0.019555570366728951,0.0080391983124758429,-0.040120516693388314,0.0060896119887392684,0.017244979433277866,0.035148941551670532,-0.017367220791631114,0.0082884914451902079,0.007722449615121401],\"z\":[-0.0006494255497178766,-0.026317862404486792,0.03796322880691972,-0.0025954945181431376,0.022333224478058668,-0.022049005989333736,0.050458390068394914,0.0082549090443060219,-0.028033799757169318,0.043736432451186295,-0.013469715200631369,0.050881070879866395,0.016093024872214895,0.012548566041769186,-0.00040362135542771217,0.034905833775545202,-0.0036642451360344394,-0.067407903524990972,0.037711714856067176,0.014561851614195435,-0.0069054544199701334,0.012289754282708598,-0.039037839618896508,0.02420659418335518,0.0079514270977178135,-1.5772849405340113e-07,0.0095180174715459153,-0.025003407200294828,-0.015395577309364588,0.0027705248084358685,0.032954915558753288,-0.050625073712134518,0.021531509912933917,0.010882578482261601,-0.0161562145498821,0.0038784200211666692,-0.020238607381259235,0.036423908050661147,0.012805257719254018,-0.033246701529051285,-0.02620539480307264,0.024973005238557933,-0.022236622616600688,-0.0028983709918280597,0.0094218497632747519,0.019666251972629143,-0.0062595384716458476,-0.00035605189821168951,0.022601137018771148,0.040284385287702527,0.007103821429948338,0.0078738311019918364,0.062610691183655184,-0.025635706196243033,-0.028980263131849208,-0.011598775168227247,-0.032218115830240007,0.016255018429499134,0.065246889521523715,0.0072329063338766701,-0.014942100257109259,-0.02397646951343841,-0.043889850203442902,0.025100636135993587,-0.0038259972704102344,0.02473527776205434,-0.013492629475805599,-0.015013895190219922,-0.031628834909736024,0.043721278210726272,0.017598752218232983,-0.052072411361353189,0.046820135904634352,0.020599833248149388,0.036383304032696809,0.018834269194831221,0.029686831075960107,-0.055364932606297892,-0.041539774041954781,0.035962429084947782,-0.010798921518949019,0.040072899820517455,-0.001399033158415853,-0.021651702398062318,0.0097990562855518239,0.0010774298109478564,0.0085357484734870735,-0.013587249031274048,0.032674400912834779,0.0088518789708875202,-0.023976274866431949,-0.04964122657141902,0.023088471285236774,0.043635353336460743,0.012852678017621097,0.036902845432798974,-0.041029843397594301,-0.018007129068413941,0.037811212415945095,0.028443764992821467,0.02115499715213957,-0.01172127613258471,0.041500187881153297,-0.0021721607693872117,0.020662518904576623,-0.00054653835788687883,0.014523007505720057,-0.013476042248804949,-0.067178665350767455,0.014936231702995368,0.031805298008045331,0.023157359232845613,0.015711592061290771,0.020571581459559909,0.023074476449708926,-0.013574709696092559,-0.0076182960767555187,-0.019420027344477384,-0.023859355940283749,0.018373307388261029,0.011264754113482423,0.040877934767251704,-0.019107281549279462,-0.020463584937832079,0.0058399361096725571,-0.039686236595310523,0.017324097288318536,-0.018191410123325959,-0.009576782684823603,0.0048196906322098016,0.040424518684396615,0.0048899512735354998,0.013998569440369224,-0.0319177086053428,0.001897740270828552,-0.042633040093794865,0.021800712784143229,-0.014898452640985419,0.0059445573494381091,-0.010447144680906071,0.012498960318235873,-0.013355552559570532,0.022637753760606956,0.033795580928659516,-0.028832811579049957,0.011983768069566005,0.0045706009497344137,0.017944653797986574,-0.0033410960073609465,-0.0059299012744004507,0.0075322051079926254,-0.016447336486814228,0.061817730068890075,0.010612381603014883,-0.014509659218151963,0.0015391472351855002,-0.035380567301726909,-0.010046108616893801,-0.0062211329273982969,0.0032458705017480048,-0.016708729432880903,-0.0085737243847813505,-0.02911448077483203,0.064609464122284951,-0.015383635493920442,-0.0079014049623886869,-0.033425038267654174,-0.030283236383410354,-0.01648353481632869,0.030253309936102035,0.033727991866189036,0.008347644144392494,0.0034874586689849305,-0.032268963486239408,-0.014903002269252943,-0.0012434084049109347,0.015798611010010084,0.026413039025923308,0.024994541719662887,-0.021081329124234983,-0.02496129570587196,0.035072557320056243,0.01541429045621222,-0.01022857725261498,-0.018228970556605134,0.012793548406072171,-0.0013086245921227152,0.013659957283085023,-0.033299008223495505,0.0020158271388439923,-0.00068958980436312038,0.050245702278923166,0.00097161028286464059,0.011023728059890289,0.0025310682025721197,0.028677653693650253,0.00088545629086016144,-0.010029804646558513,-0.0097351103782062753,0.0087358577482295249,-0.012870973373797124,-0.0068421367439849652,-0.018365883193915356,0.029125626996658951,-0.039628334634714553,0.023885398893494236,0.01804445620482421,0.0036225464891265235,0.015584255064828193,-0.0098557374396294629,-0.018353690542902309,-0.015662049932515291,-0.032432670735103517,0.037707908504532213,0.018265309549669401,-0.0046173676665281502,0.013204325052851924,0.023410733973469711,-0.077777845907794033,-0.018429806918040068,-0.019060103449499762,-0.011129853190647255,-0.01158651084243458,0.0072465701040888763,-0.03048872906989776,0.012091873871002868,0.0045009801894694669,-0.0050333383081803745,-0.011541844424332702,0.0052595235774619623,0.0078696753291825575,-0.014544557993016148,0.0012031422444211235,0.059364613587807945,-0.038942382369296716,0.0071773249667681852,-0.029949397481271765,0.0031708258346579143,0.0047071236517813317,0.032888674711162434,-0.021447681044923093,0.017560807545570243,-0.034508193919380169,0.0049320256537134233,-0.0051545209941794845,-0.014166764461906237,0.010903753876849873,-0.022392257604759342,-0.018980088684622642,-0.026977332428341251,-0.018319389099210312,-0.018617025421046849,0.00037580641593608198,0.0041554325021180422,0.030059147216640339,0.01174708083387078,-0.0081394488990834644,-0.012863350164880957,-0.00047606487658183896,-0.040014486825638296,0.005182533489598168,0.056532025160375615,0.022616666720633585,-0.021360247801919349,-0.033938041093164562,0.0018576261153179616,0.016414721786974028,-0.0088781408032033941,-0.0033649288433725303,0.015309594243197682,-0.019188160754386892,-0.030641537774533462,0.023951901408148225,-0.016622837543285758,0.019092462380424717,-0.036359257481007635,-0.013812518136620777,0.018685914939056015,0.019411622331209678,0.026935135965389469,0.015309866814304709,0.010696924359105804,-0.019563581395664085,0.0066915182969828797,0.026081791043484424,-0.0043404244368513362,-0.013476354718486076,-0.022179259795701865,0.021954832554810427,0.010626680131038532,-0.0076437345525173454,0.021431457742455286,-0.01989350617832154,0.017915885840328515,-0.0028970220894204857,0.015950360252983079,-0.010258882136115506,-0.0088446680687316939,0.00098616887171696288,0.019529843320196513,-0.01197538944235524,-0.072088560396376095,-0.0095015926928807767,0.026179643270832664,0.019112034999071048,-0.00068730344604506796,-0.021776830354564122,-0.01853791165497759,-0.019402707135485232,-0.011960243760299607,0.018522255829314369,0.012169543877103488,0.021010165858036691,0.017667535351264578,0.0062975382943902683,-0.0068769713055081274,-0.015976034048790898,-0.023105961126806265,-0.030348024975527157,0.066214983997468974,-0.020496144525835015,0.034068822194323688,0.038409252544393278,0.03391433872203449,-0.023547786089335478,-0.0025158167779293578,0.055327040084777276,-0.0079290687918119902,-0.0037857023164729929,0.014970115361381695,-0.031580351558866855,0.019512241948997498,0.0069849108044116809,0.012072961664970849,0.026841392441837392,-0.014772260573888548,-0.0059301334939132937,0.061883354771197177,0.020086662875250114,0.029090428949832877,-0.0066163557930783174,-0.028610388148088469,-0.025962292929939276,0.0076281152697995,-0.045615256972247414,0.011511985707372966,-0.0060389192435773608,-0.0020824736627939847,0.031989667097141988,-0.028185533021894561,0.015158345407539532,0.0073776784348029388,-0.012401825229058413,-0.042941609687799996,0.0092821589272725248,-0.0022839470102126694,0.016327162426240046,0.014015363871203083,0.028301683392226711,-0.011619289669834415,0.025689145852170348,0.025520075283736048,-4.9664705043272954e-05,0.019361961125096729,0.018190495208542302,0.0012150315663344727,0.020663889321166438,-0.024415393341380483,-0.015922246012119817,-0.0076254883310584868,-0.03158511956657583,-0.047631704352259607,0.036893221239047494,-0.022920294606828075,0.019230252743455398,-0.0072824778850092827,-0.0081549443367061533,-0.0037486986774425335,0.025562059726721809,-0.0064131831484199719,0.014399721092937006,0.033638059929137487,-0.013759380630235683,-0.0027617925484692447,-0.030137636208262777,-0.013624830332294835,0.015765644707980676,0.02272781633744449,1.6573394954605289e-06,-0.0058335929130504819,-0.021479972098907913,-0.039376550299730001,-0.015714965486473748,0.013804775965698986,-0.0074791961520928353,-0.0049698196874785024,0.02462571885125673,-0.012560769299370018,-0.040012118352831479,0.026690600392056809,0.004139707157819578,0.037347596776251005,0.017020034108689259,0.051426588356174863,-0.00070399734903695574,0.07264078047258915,-0.0068846391877275129,0.041039042390123563,0.015429338733477221,-0.0071887246507560407,-0.061322188904122735,-0.020313603088246993,0.022224482733748073,-0.034661414741005044,-0.021837621706474512,-0.0096359687336110434,-0.036946479039643661,0.017852132578057157,-0.054201496022666919,0.015150419625566732,0.017470436919284633,0.004886974937118955,-0.025599269258248129,-0.042869140083677454,-0.0269888780002649,0.0068700592394110539,-0.0065291426649463731,-0.006582711571759871,-0.030422745623054449,0.0243619514853472,-0.012845656937401372,0.0052972636618510358,0.0019200834639687197,0.0024749943883290845,-0.1021629959508096,-0.035092991745206102,-0.028043217059590248,-0.011305464602080794,0.0049318439847402086,0.00097862502376463187,-0.04281904889279315,-0.040978248586332609,-0.030550342031531712,-0.0051368308503065476,-0.021635206212291164,-0.063449279561602734,0.027053843519658716,0.024874246760921558,-0.070353623122256306,0.015605976576751304,-0.028924875200297417,-0.023296667596614341,-0.016283358107649436,-0.012503838516093982,0.040486458891709445,0.00081727801768658663,0.035411079131916684,-0.045307808484521518,0.018965743813115152,-0.00011087491713078532,-0.027199268630157317,-0.045544610688045016,0.004963797646563484,-0.019065437984160983,-0.0032008370266741861,-0.029482760818881838,0.026493608742366462,0.023531322189175953,0.0088093089043850461,0.028900112881835069,-0.019347568586252896,0.042490544689203893,0.025690570659239711,-0.0048746653334150415,0.020616825283788807,-0.030937992616919947,-0.025424641059396097,-0.030470199105080774,0.012052966498852622,0.0057932779904746601,-0.038467748426450739,-0.0051373769937760657,0.0041809392337735368,-0.01088043977499575,-0.022446269452087379,0.011543335437310159,-0.0048211603654191772,-0.00163146237175434,-0.035109325418720701,0.060811154329146903,0.017204939900489748,-0.0087843718942343177,-0.021294065448276014,-0.016535045632850229,0.010172973169314798,0.0007055980402259081,0.057467637537180982,0.022445651319793015,0.0015718469587842818,0.022109841346338029],\"mode\":\"markers\",\"text\":[\"gene_1\",\"gene_2\",\"gene_3\",\"gene_4\",\"gene_5\",\"gene_6\",\"gene_7\",\"gene_8\",\"gene_9\",\"gene_10\",\"gene_11\",\"gene_12\",\"gene_13\",\"gene_14\",\"gene_15\",\"gene_16\",\"gene_17\",\"gene_18\",\"gene_19\",\"gene_20\",\"gene_21\",\"gene_22\",\"gene_23\",\"gene_24\",\"gene_25\",\"gene_26\",\"gene_27\",\"gene_28\",\"gene_29\",\"gene_30\",\"gene_31\",\"gene_32\",\"gene_33\",\"gene_34\",\"gene_35\",\"gene_36\",\"gene_37\",\"gene_38\",\"gene_39\",\"gene_40\",\"gene_41\",\"gene_42\",\"gene_43\",\"gene_44\",\"gene_45\",\"gene_46\",\"gene_47\",\"gene_48\",\"gene_49\",\"gene_50\",\"gene_51\",\"gene_52\",\"gene_53\",\"gene_54\",\"gene_55\",\"gene_56\",\"gene_57\",\"gene_58\",\"gene_59\",\"gene_60\",\"gene_61\",\"gene_62\",\"gene_63\",\"gene_64\",\"gene_65\",\"gene_66\",\"gene_67\",\"gene_68\",\"gene_69\",\"gene_70\",\"gene_71\",\"gene_72\",\"gene_73\",\"gene_74\",\"gene_75\",\"gene_76\",\"gene_77\",\"gene_78\",\"gene_79\",\"gene_80\",\"gene_81\",\"gene_82\",\"gene_83\",\"gene_84\",\"gene_85\",\"gene_86\",\"gene_87\",\"gene_88\",\"gene_89\",\"gene_90\",\"gene_91\",\"gene_92\",\"gene_93\",\"gene_94\",\"gene_95\",\"gene_96\",\"gene_97\",\"gene_98\",\"gene_99\",\"gene_100\",\"gene_101\",\"gene_102\",\"gene_103\",\"gene_104\",\"gene_105\",\"gene_106\",\"gene_107\",\"gene_108\",\"gene_109\",\"gene_110\",\"gene_111\",\"gene_112\",\"gene_113\",\"gene_114\",\"gene_115\",\"gene_116\",\"gene_117\",\"gene_118\",\"gene_119\",\"gene_120\",\"gene_121\",\"gene_122\",\"gene_123\",\"gene_124\",\"gene_125\",\"gene_126\",\"gene_127\",\"gene_128\",\"gene_129\",\"gene_130\",\"gene_131\",\"gene_132\",\"gene_133\",\"gene_134\",\"gene_135\",\"gene_136\",\"gene_137\",\"gene_138\",\"gene_139\",\"gene_140\",\"gene_141\",\"gene_142\",\"gene_143\",\"gene_144\",\"gene_145\",\"gene_146\",\"gene_147\",\"gene_148\",\"gene_149\",\"gene_150\",\"gene_151\",\"gene_152\",\"gene_153\",\"gene_154\",\"gene_155\",\"gene_156\",\"gene_157\",\"gene_158\",\"gene_159\",\"gene_160\",\"gene_161\",\"gene_162\",\"gene_163\",\"gene_164\",\"gene_165\",\"gene_166\",\"gene_167\",\"gene_168\",\"gene_169\",\"gene_170\",\"gene_171\",\"gene_172\",\"gene_173\",\"gene_174\",\"gene_175\",\"gene_176\",\"gene_177\",\"gene_178\",\"gene_179\",\"gene_180\",\"gene_181\",\"gene_182\",\"gene_183\",\"gene_184\",\"gene_185\",\"gene_186\",\"gene_187\",\"gene_188\",\"gene_189\",\"gene_190\",\"gene_191\",\"gene_192\",\"gene_193\",\"gene_194\",\"gene_195\",\"gene_196\",\"gene_197\",\"gene_198\",\"gene_199\",\"gene_200\",\"gene_201\",\"gene_202\",\"gene_203\",\"gene_204\",\"gene_205\",\"gene_206\",\"gene_207\",\"gene_208\",\"gene_209\",\"gene_210\",\"gene_211\",\"gene_212\",\"gene_213\",\"gene_214\",\"gene_215\",\"gene_216\",\"gene_217\",\"gene_218\",\"gene_219\",\"gene_220\",\"gene_221\",\"gene_222\",\"gene_223\",\"gene_224\",\"gene_225\",\"gene_226\",\"gene_227\",\"gene_228\",\"gene_229\",\"gene_230\",\"gene_231\",\"gene_232\",\"gene_233\",\"gene_234\",\"gene_235\",\"gene_236\",\"gene_237\",\"gene_238\",\"gene_239\",\"gene_240\",\"gene_241\",\"gene_242\",\"gene_243\",\"gene_244\",\"gene_245\",\"gene_246\",\"gene_247\",\"gene_248\",\"gene_249\",\"gene_250\",\"gene_251\",\"gene_252\",\"gene_253\",\"gene_254\",\"gene_255\",\"gene_256\",\"gene_257\",\"gene_258\",\"gene_259\",\"gene_260\",\"gene_261\",\"gene_262\",\"gene_263\",\"gene_264\",\"gene_265\",\"gene_266\",\"gene_267\",\"gene_268\",\"gene_269\",\"gene_270\",\"gene_271\",\"gene_272\",\"gene_273\",\"gene_274\",\"gene_275\",\"gene_276\",\"gene_277\",\"gene_278\",\"gene_279\",\"gene_280\",\"gene_281\",\"gene_282\",\"gene_283\",\"gene_284\",\"gene_285\",\"gene_286\",\"gene_287\",\"gene_288\",\"gene_289\",\"gene_290\",\"gene_291\",\"gene_292\",\"gene_293\",\"gene_294\",\"gene_295\",\"gene_296\",\"gene_297\",\"gene_298\",\"gene_299\",\"gene_300\",\"gene_301\",\"gene_302\",\"gene_303\",\"gene_304\",\"gene_305\",\"gene_306\",\"gene_307\",\"gene_308\",\"gene_309\",\"gene_310\",\"gene_311\",\"gene_312\",\"gene_313\",\"gene_314\",\"gene_315\",\"gene_316\",\"gene_317\",\"gene_318\",\"gene_319\",\"gene_320\",\"gene_321\",\"gene_322\",\"gene_323\",\"gene_324\",\"gene_325\",\"gene_326\",\"gene_327\",\"gene_328\",\"gene_329\",\"gene_330\",\"gene_331\",\"gene_332\",\"gene_333\",\"gene_334\",\"gene_335\",\"gene_336\",\"gene_337\",\"gene_338\",\"gene_339\",\"gene_340\",\"gene_341\",\"gene_342\",\"gene_343\",\"gene_344\",\"gene_345\",\"gene_346\",\"gene_347\",\"gene_348\",\"gene_349\",\"gene_350\",\"gene_351\",\"gene_352\",\"gene_353\",\"gene_354\",\"gene_355\",\"gene_356\",\"gene_357\",\"gene_358\",\"gene_359\",\"gene_360\",\"gene_361\",\"gene_362\",\"gene_363\",\"gene_364\",\"gene_365\",\"gene_366\",\"gene_367\",\"gene_368\",\"gene_369\",\"gene_370\",\"gene_371\",\"gene_372\",\"gene_373\",\"gene_374\",\"gene_375\",\"gene_376\",\"gene_377\",\"gene_378\",\"gene_379\",\"gene_380\",\"gene_381\",\"gene_382\",\"gene_383\",\"gene_384\",\"gene_385\",\"gene_386\",\"gene_387\",\"gene_388\",\"gene_389\",\"gene_390\",\"gene_391\",\"gene_392\",\"gene_393\",\"gene_394\",\"gene_395\",\"gene_396\",\"gene_397\",\"gene_398\",\"gene_399\",\"gene_400\",\"gene_401\",\"gene_402\",\"gene_403\",\"gene_404\",\"gene_405\",\"gene_406\",\"gene_407\",\"gene_408\",\"gene_409\",\"gene_410\",\"gene_411\",\"gene_412\",\"gene_413\",\"gene_414\",\"gene_415\",\"gene_416\",\"gene_417\",\"gene_418\",\"gene_419\",\"gene_420\",\"gene_421\",\"gene_422\",\"gene_423\",\"gene_424\",\"gene_425\",\"gene_426\",\"gene_427\",\"gene_428\",\"gene_429\",\"gene_430\",\"gene_431\",\"gene_432\",\"gene_433\",\"gene_434\",\"gene_435\",\"gene_436\",\"gene_437\",\"gene_438\",\"gene_439\",\"gene_440\",\"gene_441\",\"gene_442\",\"gene_443\",\"gene_444\",\"gene_445\",\"gene_446\",\"gene_447\",\"gene_448\",\"gene_449\",\"gene_450\",\"gene_451\",\"gene_452\",\"gene_453\",\"gene_454\",\"gene_455\",\"gene_456\",\"gene_457\",\"gene_458\",\"gene_459\",\"gene_460\",\"gene_461\",\"gene_462\",\"gene_463\",\"gene_464\",\"gene_465\",\"gene_466\",\"gene_467\",\"gene_468\",\"gene_469\",\"gene_470\",\"gene_471\",\"gene_472\",\"gene_473\",\"gene_474\",\"gene_475\",\"gene_476\",\"gene_477\",\"gene_478\",\"gene_479\",\"gene_480\",\"gene_481\",\"gene_482\",\"gene_483\",\"gene_484\",\"gene_485\",\"gene_486\",\"gene_487\",\"gene_488\",\"gene_489\",\"gene_490\",\"gene_491\",\"gene_492\",\"gene_493\",\"gene_494\",\"gene_495\",\"gene_496\",\"gene_497\",\"gene_498\",\"gene_499\",\"gene_500\"],\"opacity\":1,\"marker\":{\"color\":\"#0066FF\",\"symbol\":\"circle-open\",\"size\":1,\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"name\":\"genes\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"type\":\"scatter3d\",\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://vingronlab.github.io/APL/reference/ca_biplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot of 2D CA projection of the data. — ca_biplot","title":"Plot of 2D CA projection of the data. — ca_biplot","text":"Plots first 2 dimensions rows columns plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_biplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot of 2D CA projection of the data. — ca_biplot","text":"","code":"ca_biplot(   obj,   xdim = 1,   ydim = 2,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   type = \"plotly\",   ... )  # S4 method for cacomp ca_biplot(   obj,   xdim = 1,   ydim = 2,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   type = \"plotly\",   ... )  # S4 method for Seurat ca_biplot(   obj,   xdim = 1,   ydim = 2,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   type = \"plotly\",   ...,   assay = Seurat::DefaultAssay(obj),   slot = \"counts\" )  # S4 method for SingleCellExperiment ca_biplot(   obj,   xdim = 1,   ydim = 2,   princ_coords = 1,   row_labels = NULL,   col_labels = NULL,   type = \"plotly\",   ...,   assay = \"counts\" )"},{"path":"https://vingronlab.github.io/APL/reference/ca_biplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot of 2D CA projection of the data. — ca_biplot","text":"obj object class \"cacomp\" relevant standardized  principal coordinates calculated,  alternatively object class \"Seurat\" \"SingleCellExperiment\"   dim. reduction named \"CA\" saved. xdim Integer. dimension x-axis. Default 1. ydim Integer. dimension y-axis. Default 2. princ_coords Integer. 1 principal coordinates used  rows, 2 columns. Default 1 (rows). row_labels Numeric vector. Indices rows label  added (label stored rownames). Default NULL. col_labels Numeric vector. Indices columns label  added (label stored colnames). Default NULL (columns). type String. Type plot draw. Either \"ggplot\" \"plotly\".  Default \"plotly\". ... arguments. assay SingleCellExperiment assay recomputation slot Seurat assay slot get matrix.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_biplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot of 2D CA projection of the data. — ca_biplot","text":"Plot class \"plotly\" \"ggplot\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_biplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot of 2D CA projection of the data. — ca_biplot","text":"Choosing type \"plotly\" generate interactive html plot  package plotly. Type \"ggplot\" generates static plot. Depending whether `princ_coords` set 1 2 either principal coordinates either rows (1) columns (2) chosen. standard coordinates plotted  (assymetric biplot). Labels rows columns stored row column names  respectively.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_biplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot of 2D CA projection of the data. — ca_biplot","text":"","code":"# Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis ca <- cacomp(obj = cnts, princ_coords = 3) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  ca_biplot(ca)  {\"x\":{\"visdat\":{\"1a7f3c6b5a1\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"1a7f3c6b5a1\",\"attrs\":{\"1a7f3c6b5a1\":{\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"1a7f3c6b5a1.1\":{\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"x\":[-1.2792584136760108,2.6276803915215514,-0.20901779725177669,-0.21111663911371553,0.33765091104141193,1.9241069233970767,-0.40525331649441249,-0.65669583342777194,0.84005350566379966,-0.4073254677789297,1.3184158888956876,0.88245357686051473,-0.9052624161899393,-0.076079405311713019,0.033048179232865453,-4.8180182442751969,0.79264066369197694,2.2337329025921395,-1.0827180781803825,-0.43028240890940966,0.54045583218380333,0.14343694491608727,-2.4517810956696269,-1.0233658511735821,-0.21344496441725838,-0.27784894388474601,1.9026545383134059,0.84961137727814562,0.55453399309712204,0.65043525107877287,-0.91991357197628765,0.35259544361224804,1.1859377780047875,0.12534518597856353,-0.82832696018326313,-0.28541460538344166,-2.2865893771539541,-0.32429288474829127,-2.7767088998230647,0.74624454537759799,1.288080427809267,0.69810002772112556,1.367095152972855,2.3913017096276383,0.15177620494319208,-1.735451120714693,0.060088520061309325,-1.4947332125271773,-0.033276154441541396,-0.071816252789440815],\"y\":[0.5980427726451637,2.2484419861273284,-1.2267409775171387,0.43350169324788645,-1.8147433802623241,0.3777112331295453,-1.3910963209819076,-0.2171136330989365,0.26473048768993912,-0.45224496850316004,-2.3168287292558505,-0.49595855258263877,0.30535901773481849,-0.4179850074547396,-0.10736394891089357,-18.241294563102475,0.13326300540832245,-0.88366240670163065,-0.46237592235076885,0.65386739197815136,-0.63040958649512424,0.61110742337496515,-2.4051490078409654,-0.25231301452171423,0.648688968164432,1.6672600445207664,-0.47211099775681531,-1.0072304522279512,-0.26619344814412199,0.32964306634706675,1.9451041915816851,0.24324080049356417,1.5100526784304271,0.10980132536101685,1.722300616891699,-0.75400765553677884,0.55624985733498289,0.9752888928254323,-0.26463950480284953,0.10760043646418442,-1.6906134463093352,-0.042224851230584573,-1.6180771315364078,-2.0715576353845555,0.6232373634500068,-0.89608861170051046,0.96292571297422647,-0.42164300722638265,1.1115367410242094,-1.1144757313089007],\"text\":[\"cell_1\",\"cell_2\",\"cell_3\",\"cell_4\",\"cell_5\",\"cell_6\",\"cell_7\",\"cell_8\",\"cell_9\",\"cell_10\",\"cell_11\",\"cell_12\",\"cell_13\",\"cell_14\",\"cell_15\",\"cell_16\",\"cell_17\",\"cell_18\",\"cell_19\",\"cell_20\",\"cell_21\",\"cell_22\",\"cell_23\",\"cell_24\",\"cell_25\",\"cell_26\",\"cell_27\",\"cell_28\",\"cell_29\",\"cell_30\",\"cell_31\",\"cell_32\",\"cell_33\",\"cell_34\",\"cell_35\",\"cell_36\",\"cell_37\",\"cell_38\",\"cell_39\",\"cell_40\",\"cell_41\",\"cell_42\",\"cell_43\",\"cell_44\",\"cell_45\",\"cell_46\",\"cell_47\",\"cell_48\",\"cell_49\",\"cell_50\"],\"textposition\":\"left\",\"opacity\":1,\"marker\":{\"color\":\"#990000\",\"symbol\":\"x\",\"size\":5},\"name\":\"Columns\",\"hoverinfo\":\"text\",\"inherit\":true},\"1a7f3c6b5a1.2\":{\"mode\":\"markers\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"x\":[0.0055901483643623993,-0.014626965662805422,0.0029970094459534501,-0.00017963483114249158,0.016698187873779021,-0.008428987024903219,0.017614943329542714,0.02111812314741706,0.013410940558200739,0.023201921763698362,0.016422481082122679,0.020880653676572172,0.0098447200417880257,-0.062259905800427971,0.0076414942425052194,0.0057642192786950897,-0.002668293876236497,0.017379745391549798,-0.0011711023077344955,0.044153779526458749,-0.010726724867114118,-0.012336288405497034,-0.036121230295243917,0.029790776026081843,0.015188183568755452,0.014496996598367251,-0.0070969908341989713,0.0067677922685726744,-0.021123061018391526,0.02377684345908674,-0.029270805052447377,0.010351360342782896,0.022074243961819368,-0.005200373593468195,-0.0063617769522003806,0.0075377359954291578,0.001649350658517394,0.0020621954138739032,-0.0045524440207536784,0.032217636565663885,-0.0062680664900630493,0.026815391806480387,0.0085293931288079258,0.012027555369011964,-0.02598580180418911,0.0076669461447493367,-0.0026852269196997376,0.0091349236851855486,-0.0025019988246670556,-0.05064498923461936,0.015772907149389215,-0.031243863370735876,-0.0068893788326126462,0.0074073731172974774,0.038217442838305554,-0.036605214721314505,0.014834389352483506,-0.01161528312287948,-0.044053385060820717,-0.0043872112098153138,-0.041012398004639058,-0.014566673480700945,0.024486073248431439,0.0061290466794870118,-0.00094010135376921004,0.014752938257311922,0.028471762449045951,0.0024072931840951059,0.0010980508624900897,0.0050570803626212813,0.00098781803314356527,-0.0028884561841071811,-0.0015984088501829797,0.0070216256498588387,-0.006513451784041998,-0.0027198120087851131,0.021882890315714408,-0.025886580909866935,0.036533470516995938,-0.0074374645197160796,0.013235501128622366,0.02743933079599584,-0.026871627855358945,0.041494671530391353,0.047073647370874973,-0.027850268053148913,0.020679135625845804,-0.06269550007252335,-0.039275662638671043,-0.017015801905788257,0.020796958457262611,0.0076347438902120085,-0.0040376890313388262,0.030074277841528628,-0.0051874874627049717,0.019611629064018355,-0.03114365053667149,-0.051786768186092361,-0.017543342227000557,-0.022169103689179886,0.00057050446575552984,-0.0095156542581564824,0.012888127842667489,-0.013481906652665018,0.044756944731926533,-0.025892405450837493,-0.001795870630223102,0.01093060228199969,-0.027073622716978624,-0.02991026735988573,0.017753890832226494,-0.075157287002160775,0.017509544030036336,-0.012484832300121484,0.065948201166002751,-0.014021767560690564,-0.0337153458998617,-0.01715639825411383,-0.011038479330901857,0.0026499183912617645,0.015604555530955135,0.011973879189306605,-0.013807018648480961,0.0083869793450586042,-0.041622308562390221,0.024714117721028703,0.022166086589974033,0.017480408252204011,0.0062076671581338845,0.028537707415887934,-0.014893881127719732,-0.0096700771200687076,-0.0032602038890483568,-0.012950070498287917,0.039959415375535726,0.0011113452609953567,-0.049652714229700773,-0.0051673207479776091,-0.0035415432666272635,-0.0070185825751358831,0.032149852216843827,-0.027127701255981771,0.01813464998920029,-0.047663758750125719,-0.0031973753344828374,0.035355342195191222,0.0035373449131270267,0.0050836726444116681,-0.031847782066193688,-0.043728612048791901,-0.017844279608792785,0.022686994492639143,0.033973012577942642,-0.0020244529704652459,0.0034807338786595169,0.01431103193694527,0.0071772853782966928,0.0075667244128608631,-0.052755338071988712,0.029668749196936114,0.0051215270550010079,-0.03726446769253363,0.00096555592255115417,0.0088233439506747689,-0.010620960503153446,-0.011666428367471064,0.01230712234378193,-0.024788957978702543,0.023470380627612208,0.013420598479621028,-0.024173354646336291,-0.031568533793271035,-0.018482057546029978,0.041802701488855516,-0.013110363707443826,-0.0076722233143491402,-0.00092774234483478308,-0.0047630999292423331,-0.0110325978387133,0.036899309423272082,-0.0096527293243837044,0.032578433159638528,0.0014617314730403981,-0.0065902385166687772,0.0032979650163685657,-0.05137534339768185,-0.044696142961250587,-0.014006455739320392,-0.011110145646722025,0.044260764744552629,-0.019984870063323962,-0.031029528374957527,-0.0029576793444124174,-0.018100887951282126,0.01246406765029635,0.01792299585273234,0.056725182273125979,0.0086331136227039106,-0.032845403695339878,-0.017641343463097349,0.026616127086881772,-0.013687451785670357,0.012916354769785513,-0.021139235610945176,-0.03143964201726869,0.013607901628293654,-0.022650066367151694,0.031896431795523206,-0.016964267482789369,-0.022925466470844924,-0.0014509417207841273,0.025197096007319827,0.0019332112348709337,0.014735972542552947,-0.013175183058177803,-0.0072267873562125544,0.011002165002201206,0.023301132279210469,-0.0033806235877047973,-0.045239684689690904,-0.010354125123015607,1.9615541604459538e-05,0.013964481805129714,-0.015142569831328291,-0.0019479348579399998,0.048316243332335147,-0.0034799032515618555,0.054453374234766587,-0.022112959481380711,0.029905804592393146,0.012500232728920379,0.0399151258082956,0.006331494655795967,0.03301289864546085,-0.029259340144046238,-0.01655742847051796,-0.045731410631079293,-0.0097877072968745454,0.03387769535653197,0.020974636545246034,0.017446502401167258,-0.024320808622997746,-0.0008947282436073085,-0.031496396768261055,-0.017803055589784771,0.00053477374294685833,-0.036442958170728734,0.013295953813701057,0.028554570389690257,0.0088215787093849415,0.0050530452673682195,-0.023159887157736897,0.013402751060170651,0.0058114262247438066,-0.015658423490168851,-0.033246703094792864,-0.01438705967384875,0.0089428699928235031,0.017254478324294879,0.00073031085810338725,-0.026043916505927082,-0.048706368056385584,-0.041898255671940332,0.0012990135440917351,-0.0078415022191395973,0.0053975738858699123,-0.0075192007602372752,-0.0094022735369676327,0.015040648569916543,0.010633453372619343,0.045830520289443691,-0.026501661177901679,-0.0063740548732362607,-0.024663338550325653,0.007434597797847998,-0.016022161840356004,0.023746074161437876,-0.0065780124140504713,0.012994978891528487,0.040748001474999129,0.025611854246708844,-0.023313517185713062,-0.029354573676111193,0.032657511713096908,-0.0048709856511781752,-0.021252675354701843,-0.028800002031829853,0.006195741426901491,-0.024553194217716814,-0.0039148724187348617,0.017446794346445502,-0.028942662016372394,-0.00072290510872453624,0.0026304865954883583,0.013279709588828537,0.00064912236639732526,-0.016412564012886668,0.030086156276869874,-0.014169829122222642,-0.01763158046946588,-0.038768835494472714,0.030545745658175125,0.01321709111225652,-0.040506193712320095,-0.0096168224596779352,0.03546721123167202,0.04848812702569056,0.0059314579868784429,-0.010360699947873895,-0.0012150291725390632,0.0038293240436902158,-0.04536230039293155,-0.057619156407136059,-0.0031822063847383557,0.020520389240387141,0.019680116306229893,0.001943292585014852,0.011269893615203154,-0.025068603774983426,-0.018758472422864873,-0.026544229702028362,0.018978298798623346,0.0077962569832030048,0.0013857862707468815,0.024630493502709006,0.054695806911806547,-0.0090615528084514434,-0.044386515082970555,0.025432442772267791,-0.025797199111537224,-0.0019465736053911494,-0.050485175907149266,0.0091964599726652562,0.0045993017111554575,-0.018487226482377522,-0.009691693881336106,0.010521400252164,0.017174798503789352,0.0049861260460239889,0.0036142909894222616,0.048072673020358482,-0.021357042973551781,-0.0056244026209028427,-0.014490349549545587,-0.0019679406921215893,0.031230357659979245,0.058876257357760503,-0.05834422396477762,-0.052534903416807527,0.020530521917409658,-0.038748246774113738,-0.022822036461680649,0.020326668742287689,-0.023631445831742769,0.013261837770317152,-0.014578407847081301,0.0048315586842855689,-0.0029636338381801527,0.016620285390539682,0.0070334616780017654,0.007831183544143961,-0.010825674896265921,-0.040674246640467593,-0.051734858280455431,-0.01377397979200478,-0.045874708749414135,0.020087608245388924,-0.0076675440145783725,-0.011768801403967993,0.022880276406937114,0.024217914512367586,0.051272878546798802,0.0030909196483863135,0.027253811129467034,0.0021293822102353161,0.028022820355054944,-0.0037705548416124579,-0.055812122158145523,0.027494268292644012,0.033450012622611949,0.024138855003815692,0.035603492519745858,0.014580421446235309,0.055128144112795631,-0.010525071118695183,-0.012712002952409237,-0.068437348523083669,-0.049917584338935353,-0.021723885206513409,0.0069974437767390697,0.031958890865675015,0.031719140914480776,0.041497824760258907,0.016699805649831277,0.073536069485946071,0.022375173644414954,9.6452053553171206e-05,-0.048693825279741879,0.01523450784679567,0.048400434313095916,0.019070426564387587,-0.021714928463079326,0.0050614242473914833,0.0028431217807593934,0.002805381385659919,0.0083937701214249517,0.025674266396676606,0.0033185609540106165,0.067239080501791865,-0.017069651994664481,-0.0081512223540340777,0.014407735687247679,-0.021871569756487488,-0.0043180719970915028,-0.017212118673262018,0.016593381354184082,-0.039694871769122793,-0.0071443848648724056,0.012741327818137744,0.0012980339813980554,-0.012493502137028765,0.073974317246799898,-0.024303510486257326,0.015463242704372653,-0.03021384863239358,-0.035070233800564503,-0.029755680179177842,0.0053588127124233366,0.00090816887380196069,-0.022942541600224148,-0.0094350379102127492,0.0041834908612761136,0.032187052093857881,-0.034815084549960199,-0.038215430301226878,-0.0112661518713007,0.02383173429879358,-0.0025192558668895022,0.0057191901679927281,0.031050907268747183,0.061170073110716032,-0.016914043665536581,0.010581994117929427,0.0015018317687273185,0.0079330215978816315,0.00014660005085193146,-0.014114575049798208,0.0078111998436979045,0.064618075664004709,-0.0087262623863118075,-0.038713750484651338,-0.0051263379786645573,-0.031779022173229941,0.04034708346620907,0.028762416310002335,-0.022376547510341353,-0.035111573057315791,-0.024550768670698622,0.029037797031810475,0.006955655403488417,0.030862734119479429,-0.010002243792235223,0.010099088648027861,-0.036215472270081796,-0.026264057827555778,0.01224896329616406,0.044316129607926122,-0.01740385871660963,-0.024034405202183428,0.052787005957983392,0.016226431223198268,0.013167853167725431,-0.0023308273235969471,0.0011749735425695676,-0.0042269684187642171,-0.0099952846144624428,0.00038538649632692193,-0.020711636672524101,0.037482037276575501,-0.01482988815088784,0.034556401356909426,-0.059514230959647668,0.038512244168900263,-0.0078284558066411825,-0.066146825929157854,0.026485075249028527,0.015655435122785593,-0.0080873878931591436,0.033989965738936152,0.033935796459864657,0.0064721309868611444,-0.046452030084580626,0.0065168788761381484,0.029535295591536691,0.02454908487210429,0.028644586902398982,0.0069206753886061033,0.020989584625880315,0.010784436885976524,-0.034019489037438309],\"y\":[0.0072361274770649303,-0.0061177996801350734,0.0029802095307269903,-0.010446116671889903,-0.031735680461944381,-0.00034620326966396884,-0.0091244642325126243,-0.015116972551595387,0.00058483001559110409,-0.017308188460382238,-0.020755199525183815,0.010649994531304214,-0.021889539819716718,0.0081108390452562379,-0.03048831577871957,0.062157021988413393,0.040422318978711333,-0.0022327974907882298,0.0012761905668096749,-0.022460001288954139,-0.013339462779387419,0.059803157934417525,0.0085262126250618322,-0.045184651269990106,0.015331065818140435,-0.038004297530028923,0.036013750605072045,0.0039350572603952319,0.014732402226714457,-0.0014789801262273868,-0.016265872269082625,-0.033912639171094328,0.029073696064538149,0.023894241771114398,0.011532159278293883,-0.0081935651850502424,-0.051933954902733344,-0.0052972990561757057,0.0060160434360618876,0.0077110175093997261,0.018283816908860311,0.034399262947865668,0.028836674638019335,-0.029280276215440788,-0.033904124772194254,-0.024343090465619572,-0.036652573134338666,-0.001453124983004027,-0.012576562775815618,-0.0033513072463145443,-0.015258392452640665,0.025088450582847165,0.0029258775388551219,-0.0051761564689396045,0.03536845030699013,0.012249062801868152,-0.0089174863923983314,-0.0027143974798605449,-0.011593175054860246,-0.035645733984055517,0.059641371850211948,0.01438389879717668,-0.022165618609690491,0.012695503929368589,0.0041054884608568943,-0.0020677338344909963,-0.012752307293995671,0.027986424565818412,0.00052719876019427774,-0.0054852990048294137,0.02597011406895822,-0.004367022447426541,-0.0016314074362501487,0.011299846428233756,-0.03135485397996262,-0.0019647585536130201,-0.0091010851254781089,-0.00035704123476897536,0.026588960682483613,-0.0036929599814536219,0.018441710241570569,-0.039805652830245099,-0.022550408491446756,-0.028153968304997563,-0.015479455775746611,-0.0055970652612445703,-0.004225434502647488,-0.0090178578962071716,0.0010092967124688519,0.025869365007510324,0.0090636869953406619,-0.089795451877419122,-0.00097226639239370103,0.0043991666206714122,-0.030180234677520637,-0.0017005168709445882,0.025664509431289249,0.00908617601845319,-0.019008009030361785,0.03933829809057536,-0.012451772296337735,0.016512322164554359,-0.00037238531601035404,0.014622517681643873,-0.0024041168435201652,0.013119355249222264,0.02895093389136294,-0.038794716080497761,0.018737730634482291,0.034538386970070015,0.031553171417990827,-0.078558421630350109,0.0030911592767123531,0.0037439810790541937,0.014299718759865953,-0.0108415205319577,0.018251119368615367,-0.07096578821975813,-0.0061044119867776575,0.0035391302283892118,0.011141892810358479,-0.070773815145236244,0.014782727203858965,0.04572088171414132,-0.0095915458690786354,0.024053084120735077,0.04767239135333446,-0.031207894013286736,0.021507199951457816,0.0090400306005216525,-0.043812244193980172,0.026637180174978591,0.0064677265303626106,0.03781327169979639,0.016480829788724231,-0.0078736707556251468,-0.05604374298741352,-0.013941501452920693,0.015715289037661853,-0.063043280249297354,0.010477369035236521,-0.055959616878442586,0.0049093862849206148,0.01247048937797521,0.038708508026138858,0.031611007095723676,-0.01948466890914153,-0.060541070827579105,-0.030086346659960163,0.0021257444855991479,0.019622687713249262,0.015915329863285154,0.027797421017524322,0.026691524104872417,0.044160163071084488,-0.010992111183584181,0.0083739178097890863,0.014182108196087265,0.01049385240032615,0.011803604334546143,-0.017041292810136506,0.035661971931338375,0.067446362282401723,-0.0014485461484549521,-0.028010579983368433,0.024667078482028627,-0.002969138966667804,-0.043379154757967379,0.0030443257728812135,0.0019331259695637422,-0.0046418043440903719,0.0026944782485577054,-0.018319084917011012,0.021341374614361201,-0.0070598365509499531,-0.0054503164233238944,-0.0016648513846480944,0.047762026128178786,0.049622336405233163,-0.0051725440418316209,0.04640223570953645,-0.023171644026949333,-0.0061492980335188024,0.038998200270912178,0.025378282889807379,-0.011007598987033979,-0.0062229267873045186,0.025663028307168937,-0.03310197453380434,0.015977297019524838,-0.052485110586686028,-0.0047177839672808818,0.046926288933051459,-0.0036622857612419843,0.01432929023730458,-0.030873791961464638,-0.004335898539271181,-0.026764526894025076,-0.011112595706333536,-0.0020735047665443903,0.02866802231012653,-0.019889431123197934,0.015195804582437362,0.0094938800034786181,-0.061281988730348257,-0.021892416335859324,0.028032503479075432,-0.026343732320992182,-0.011131082768593958,0.0089547585735982524,-0.0018403934025752028,0.020530776886845372,-0.022855058538817835,-0.0048216714976814451,-0.003524037806574897,0.018040113146874204,-0.027432035147420812,-0.028744243133354705,0.032529624021536002,-0.01188199440615244,0.007238242937308249,-0.024784616944591862,0.018118813268174425,0.015606813381026588,0.011017427349151988,-0.0024616105626274433,-0.011502192934484944,-0.0068222990257683904,-0.043970183496531118,0.0094541197721211417,0.027273143608682618,0.0064645632742901839,-0.0084855736621957476,-0.049227007132779894,-0.018444702735297937,0.0034400581265549321,0.054826115982419543,0.0081343504789673504,0.0069845240216391226,-0.00031557164016546638,0.010275575709498348,0.0063482492003188199,-0.021827877555264486,0.01487563400151946,-0.028640581250702537,0.013737827195652447,-0.010038159976494147,-0.020520244514220659,-0.029701226150166578,-0.050980996763231458,0.018026838474555582,0.0026421026206099587,-0.02225072172094943,0.0073845441260450779,0.014434459423107599,0.019199796422893347,0.015407805125179943,-0.0093884756815571617,-0.026652166749430866,0.027891412300242259,0.035128075763435497,-0.033209898900355715,0.0079367317111330177,-0.0016008458374816325,0.0084567476525149784,-0.0076997537545570732,0.0037296198407812957,-0.02166147021787616,-0.01749522400981663,-0.011461250306364232,-0.0074511379107765697,-0.00088440092603487891,0.014760813223940409,0.023681087320771555,-0.011376134039953627,-0.067517769456358206,0.048926642281666384,0.0069941974201608711,-0.01965378617198699,0.028493314778423311,-0.01725067959146374,-0.020420961565504634,-0.00085926958191497613,-0.022729611005534309,-0.0070700080794032713,0.010242313408854137,0.021919222603815722,0.041054381169068746,0.010141528800230606,0.010325133320823044,0.011789457899346248,0.0051514301664653817,-0.012701129059086056,0.0034918681025981921,0.054382683450518714,0.0083616714794770425,0.0014200249320950485,-0.043910823500973951,-0.030603070152347683,0.0064821179917730508,-0.025889420590628244,0.039801924625924433,-0.02429681390587041,-0.02226826565949868,-0.0049473511196914998,-0.030214507310946933,0.027064168661420789,-0.041607299949254543,0.042201660721610419,-0.029874766478179691,-0.023520193864308047,0.010768316225909498,0.014845455269558053,0.011950984840639219,-0.024609500972687583,0.011536439233415741,0.037625715826878958,-0.011691072509508783,-0.012603971710261008,0.0067450651791082904,0.035833015827264121,-0.035763936133322773,-0.0070790974123761648,-0.01973013638793264,-0.029431940890315152,0.0041862220446119312,0.038108318568010856,0.0030649047921151068,-0.027893166433340215,-0.0018910015350189718,-0.0087904260335574212,-0.038436692183431286,0.0029495568287787907,-0.027404847604847821,-0.038558566639232641,0.024047642695660086,-0.045517436385694013,0.018660823350144452,-0.0048991382019393575,0.013419209607686861,0.00078468807864356255,0.013658979551552399,-0.020395589366442018,0.019960761426178433,-0.0074973137845464706,0.0048603068666637477,0.0072792412619297944,0.024605170393332904,-0.0019619740276837203,0.0097827313066340058,0.025848794573910053,0.034042015067632415,0.017590242364723594,-0.017168968903943094,0.012338017867886523,0.010504596916874403,0.018765859212027926,-0.03695521939684912,-0.0012202254402786017,0.00046390193678010392,0.061507793604026924,-0.014142919671021261,0.0044516938549933344,-0.0061255239671216656,0.031516674443762591,0.028150001958869995,-0.016901653689296831,0.015658508895373017,0.045219843197397289,-0.01303474611627895,0.014494827427322346,-0.0010847198177883976,0.035950740859608248,-0.023458193388770383,-0.0082509283626010371,-0.012066659889308291,0.00099611215186028428,-0.036064702950830828,-0.011439959904802207,0.0033602980842725844,0.028490901795517967,0.017521425959077835,-0.0069364239417315709,0.027280009001740851,0.082003492235444772,0.029522124360870806,-0.048298269269030976,0.0098871131653544102,-0.0038077681483241949,-0.017106069553812581,-0.032753815714763185,0.014728972148393128,-0.029093345325492549,0.009717693858574546,0.0041114115051206013,-0.044406188370180427,-0.031312288272824548,0.0042929386647623767,0.012082189364148227,0.033525520427927814,0.031293521361791303,-0.020509067474871068,0.012615202991041201,0.027840180991026375,-0.0082109588931153533,0.0057805963216376287,-0.0031861508435562813,-0.013939007645591611,0.020110360318262036,-0.011201491210952343,0.0099186351687742431,0.0098002628344057933,0.039704147309606044,-0.031613229685105569,-0.02395172455892185,0.016324672857783173,0.0057366033890769328,0.012059224109631471,-0.0251464084957593,-0.012175816228110804,0.015979675767278104,0.0027312919667755171,-0.03624520411661885,-0.0035601656164428136,0.021525048093010996,-0.0077312940278580567,-0.0095819565204525829,0.0035310737738248358,0.02152817953228385,-0.014562572794832435,-0.037920691123897163,-0.011665881286748971,0.0074398413318541683,-0.015951337483184936,0.046534706145176213,0.022205158676060984,-0.0038775833806093695,-0.02178695020757598,0.0091869711932442387,-0.017605918068459431,-0.016855496280673638,-0.043586374189787731,-0.014668072919636324,-0.0067932107293698354,-0.030241954859352393,0.033474388278152377,0.0024660504753614455,0.018473441557174834,0.027770557046071859,0.029031208633688667,0.0040015039437864197,-0.019453227733829254,0.040090207372178242,-0.053887757617330195,-0.058936293763730115,0.0019243233909672828,-0.029337339301969755,0.035145642604699677,0.0060257839666763057,0.0056956376429721147,0.0030363796366798456,0.0035898918008037337,0.0228707525191751,0.053696070903321159,-0.025919449317037289,-0.0035512798798264552,0.06786881534079417,-0.0081744148290909431,-0.024408571520899657,-0.014865815419763066,-0.0017846605421883866,0.016449457318879906,-0.0064794675250027947,-0.0084627804734684255,0.070622155809782802,0.0081635531456639363,-0.014269890984330992,0.0066126718834914272,0.0119390648077184,-0.016906750342736133,-0.048985420938270567,-0.0084354005288908695,-0.00714005477985955,-0.0076830377928798089,-0.019415441967663895,0.025136185739646516,0.0071951538918570189,0.025813364326630343,0.015949215370118237,-0.0019585667786693717,-0.035903745782103071,0.020365553301071888,0.027405889914725191,-0.012060206325733014,0.026936280684675292,-0.034732058249783669,0.030960898992695853,-0.030185339386090311,-0.035155108670453926,0.0076731155391006681],\"text\":[\"gene_1\",\"gene_2\",\"gene_3\",\"gene_4\",\"gene_5\",\"gene_6\",\"gene_7\",\"gene_8\",\"gene_9\",\"gene_10\",\"gene_11\",\"gene_12\",\"gene_13\",\"gene_14\",\"gene_15\",\"gene_16\",\"gene_17\",\"gene_18\",\"gene_19\",\"gene_20\",\"gene_21\",\"gene_22\",\"gene_23\",\"gene_24\",\"gene_25\",\"gene_26\",\"gene_27\",\"gene_28\",\"gene_29\",\"gene_30\",\"gene_31\",\"gene_32\",\"gene_33\",\"gene_34\",\"gene_35\",\"gene_36\",\"gene_37\",\"gene_38\",\"gene_39\",\"gene_40\",\"gene_41\",\"gene_42\",\"gene_43\",\"gene_44\",\"gene_45\",\"gene_46\",\"gene_47\",\"gene_48\",\"gene_49\",\"gene_50\",\"gene_51\",\"gene_52\",\"gene_53\",\"gene_54\",\"gene_55\",\"gene_56\",\"gene_57\",\"gene_58\",\"gene_59\",\"gene_60\",\"gene_61\",\"gene_62\",\"gene_63\",\"gene_64\",\"gene_65\",\"gene_66\",\"gene_67\",\"gene_68\",\"gene_69\",\"gene_70\",\"gene_71\",\"gene_72\",\"gene_73\",\"gene_74\",\"gene_75\",\"gene_76\",\"gene_77\",\"gene_78\",\"gene_79\",\"gene_80\",\"gene_81\",\"gene_82\",\"gene_83\",\"gene_84\",\"gene_85\",\"gene_86\",\"gene_87\",\"gene_88\",\"gene_89\",\"gene_90\",\"gene_91\",\"gene_92\",\"gene_93\",\"gene_94\",\"gene_95\",\"gene_96\",\"gene_97\",\"gene_98\",\"gene_99\",\"gene_100\",\"gene_101\",\"gene_102\",\"gene_103\",\"gene_104\",\"gene_105\",\"gene_106\",\"gene_107\",\"gene_108\",\"gene_109\",\"gene_110\",\"gene_111\",\"gene_112\",\"gene_113\",\"gene_114\",\"gene_115\",\"gene_116\",\"gene_117\",\"gene_118\",\"gene_119\",\"gene_120\",\"gene_121\",\"gene_122\",\"gene_123\",\"gene_124\",\"gene_125\",\"gene_126\",\"gene_127\",\"gene_128\",\"gene_129\",\"gene_130\",\"gene_131\",\"gene_132\",\"gene_133\",\"gene_134\",\"gene_135\",\"gene_136\",\"gene_137\",\"gene_138\",\"gene_139\",\"gene_140\",\"gene_141\",\"gene_142\",\"gene_143\",\"gene_144\",\"gene_145\",\"gene_146\",\"gene_147\",\"gene_148\",\"gene_149\",\"gene_150\",\"gene_151\",\"gene_152\",\"gene_153\",\"gene_154\",\"gene_155\",\"gene_156\",\"gene_157\",\"gene_158\",\"gene_159\",\"gene_160\",\"gene_161\",\"gene_162\",\"gene_163\",\"gene_164\",\"gene_165\",\"gene_166\",\"gene_167\",\"gene_168\",\"gene_169\",\"gene_170\",\"gene_171\",\"gene_172\",\"gene_173\",\"gene_174\",\"gene_175\",\"gene_176\",\"gene_177\",\"gene_178\",\"gene_179\",\"gene_180\",\"gene_181\",\"gene_182\",\"gene_183\",\"gene_184\",\"gene_185\",\"gene_186\",\"gene_187\",\"gene_188\",\"gene_189\",\"gene_190\",\"gene_191\",\"gene_192\",\"gene_193\",\"gene_194\",\"gene_195\",\"gene_196\",\"gene_197\",\"gene_198\",\"gene_199\",\"gene_200\",\"gene_201\",\"gene_202\",\"gene_203\",\"gene_204\",\"gene_205\",\"gene_206\",\"gene_207\",\"gene_208\",\"gene_209\",\"gene_210\",\"gene_211\",\"gene_212\",\"gene_213\",\"gene_214\",\"gene_215\",\"gene_216\",\"gene_217\",\"gene_218\",\"gene_219\",\"gene_220\",\"gene_221\",\"gene_222\",\"gene_223\",\"gene_224\",\"gene_225\",\"gene_226\",\"gene_227\",\"gene_228\",\"gene_229\",\"gene_230\",\"gene_231\",\"gene_232\",\"gene_233\",\"gene_234\",\"gene_235\",\"gene_236\",\"gene_237\",\"gene_238\",\"gene_239\",\"gene_240\",\"gene_241\",\"gene_242\",\"gene_243\",\"gene_244\",\"gene_245\",\"gene_246\",\"gene_247\",\"gene_248\",\"gene_249\",\"gene_250\",\"gene_251\",\"gene_252\",\"gene_253\",\"gene_254\",\"gene_255\",\"gene_256\",\"gene_257\",\"gene_258\",\"gene_259\",\"gene_260\",\"gene_261\",\"gene_262\",\"gene_263\",\"gene_264\",\"gene_265\",\"gene_266\",\"gene_267\",\"gene_268\",\"gene_269\",\"gene_270\",\"gene_271\",\"gene_272\",\"gene_273\",\"gene_274\",\"gene_275\",\"gene_276\",\"gene_277\",\"gene_278\",\"gene_279\",\"gene_280\",\"gene_281\",\"gene_282\",\"gene_283\",\"gene_284\",\"gene_285\",\"gene_286\",\"gene_287\",\"gene_288\",\"gene_289\",\"gene_290\",\"gene_291\",\"gene_292\",\"gene_293\",\"gene_294\",\"gene_295\",\"gene_296\",\"gene_297\",\"gene_298\",\"gene_299\",\"gene_300\",\"gene_301\",\"gene_302\",\"gene_303\",\"gene_304\",\"gene_305\",\"gene_306\",\"gene_307\",\"gene_308\",\"gene_309\",\"gene_310\",\"gene_311\",\"gene_312\",\"gene_313\",\"gene_314\",\"gene_315\",\"gene_316\",\"gene_317\",\"gene_318\",\"gene_319\",\"gene_320\",\"gene_321\",\"gene_322\",\"gene_323\",\"gene_324\",\"gene_325\",\"gene_326\",\"gene_327\",\"gene_328\",\"gene_329\",\"gene_330\",\"gene_331\",\"gene_332\",\"gene_333\",\"gene_334\",\"gene_335\",\"gene_336\",\"gene_337\",\"gene_338\",\"gene_339\",\"gene_340\",\"gene_341\",\"gene_342\",\"gene_343\",\"gene_344\",\"gene_345\",\"gene_346\",\"gene_347\",\"gene_348\",\"gene_349\",\"gene_350\",\"gene_351\",\"gene_352\",\"gene_353\",\"gene_354\",\"gene_355\",\"gene_356\",\"gene_357\",\"gene_358\",\"gene_359\",\"gene_360\",\"gene_361\",\"gene_362\",\"gene_363\",\"gene_364\",\"gene_365\",\"gene_366\",\"gene_367\",\"gene_368\",\"gene_369\",\"gene_370\",\"gene_371\",\"gene_372\",\"gene_373\",\"gene_374\",\"gene_375\",\"gene_376\",\"gene_377\",\"gene_378\",\"gene_379\",\"gene_380\",\"gene_381\",\"gene_382\",\"gene_383\",\"gene_384\",\"gene_385\",\"gene_386\",\"gene_387\",\"gene_388\",\"gene_389\",\"gene_390\",\"gene_391\",\"gene_392\",\"gene_393\",\"gene_394\",\"gene_395\",\"gene_396\",\"gene_397\",\"gene_398\",\"gene_399\",\"gene_400\",\"gene_401\",\"gene_402\",\"gene_403\",\"gene_404\",\"gene_405\",\"gene_406\",\"gene_407\",\"gene_408\",\"gene_409\",\"gene_410\",\"gene_411\",\"gene_412\",\"gene_413\",\"gene_414\",\"gene_415\",\"gene_416\",\"gene_417\",\"gene_418\",\"gene_419\",\"gene_420\",\"gene_421\",\"gene_422\",\"gene_423\",\"gene_424\",\"gene_425\",\"gene_426\",\"gene_427\",\"gene_428\",\"gene_429\",\"gene_430\",\"gene_431\",\"gene_432\",\"gene_433\",\"gene_434\",\"gene_435\",\"gene_436\",\"gene_437\",\"gene_438\",\"gene_439\",\"gene_440\",\"gene_441\",\"gene_442\",\"gene_443\",\"gene_444\",\"gene_445\",\"gene_446\",\"gene_447\",\"gene_448\",\"gene_449\",\"gene_450\",\"gene_451\",\"gene_452\",\"gene_453\",\"gene_454\",\"gene_455\",\"gene_456\",\"gene_457\",\"gene_458\",\"gene_459\",\"gene_460\",\"gene_461\",\"gene_462\",\"gene_463\",\"gene_464\",\"gene_465\",\"gene_466\",\"gene_467\",\"gene_468\",\"gene_469\",\"gene_470\",\"gene_471\",\"gene_472\",\"gene_473\",\"gene_474\",\"gene_475\",\"gene_476\",\"gene_477\",\"gene_478\",\"gene_479\",\"gene_480\",\"gene_481\",\"gene_482\",\"gene_483\",\"gene_484\",\"gene_485\",\"gene_486\",\"gene_487\",\"gene_488\",\"gene_489\",\"gene_490\",\"gene_491\",\"gene_492\",\"gene_493\",\"gene_494\",\"gene_495\",\"gene_496\",\"gene_497\",\"gene_498\",\"gene_499\",\"gene_500\"],\"opacity\":0.69999999999999996,\"marker\":{\"color\":\"#0066FF\",\"symbol\":\"circle-open\",\"size\":2.5},\"name\":\"genes\",\"hoverinfo\":\"text\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"autosize\":true,\"title\":\"2D CA plot\",\"showlegend\":false,\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Dim1\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Dim2\"},\"hovermode\":\"closest\"},\"source\":\"plot2D\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"mode\":\"markers\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"mode\":\"markers\",\"type\":\"scatter\",\"x\":[-1.2792584136760108,2.6276803915215514,-0.20901779725177669,-0.21111663911371553,0.33765091104141193,1.9241069233970767,-0.40525331649441249,-0.65669583342777194,0.84005350566379966,-0.4073254677789297,1.3184158888956876,0.88245357686051473,-0.9052624161899393,-0.076079405311713019,0.033048179232865453,-4.8180182442751969,0.79264066369197694,2.2337329025921395,-1.0827180781803825,-0.43028240890940966,0.54045583218380333,0.14343694491608727,-2.4517810956696269,-1.0233658511735821,-0.21344496441725838,-0.27784894388474601,1.9026545383134059,0.84961137727814562,0.55453399309712204,0.65043525107877287,-0.91991357197628765,0.35259544361224804,1.1859377780047875,0.12534518597856353,-0.82832696018326313,-0.28541460538344166,-2.2865893771539541,-0.32429288474829127,-2.7767088998230647,0.74624454537759799,1.288080427809267,0.69810002772112556,1.367095152972855,2.3913017096276383,0.15177620494319208,-1.735451120714693,0.060088520061309325,-1.4947332125271773,-0.033276154441541396,-0.071816252789440815],\"y\":[0.5980427726451637,2.2484419861273284,-1.2267409775171387,0.43350169324788645,-1.8147433802623241,0.3777112331295453,-1.3910963209819076,-0.2171136330989365,0.26473048768993912,-0.45224496850316004,-2.3168287292558505,-0.49595855258263877,0.30535901773481849,-0.4179850074547396,-0.10736394891089357,-18.241294563102475,0.13326300540832245,-0.88366240670163065,-0.46237592235076885,0.65386739197815136,-0.63040958649512424,0.61110742337496515,-2.4051490078409654,-0.25231301452171423,0.648688968164432,1.6672600445207664,-0.47211099775681531,-1.0072304522279512,-0.26619344814412199,0.32964306634706675,1.9451041915816851,0.24324080049356417,1.5100526784304271,0.10980132536101685,1.722300616891699,-0.75400765553677884,0.55624985733498289,0.9752888928254323,-0.26463950480284953,0.10760043646418442,-1.6906134463093352,-0.042224851230584573,-1.6180771315364078,-2.0715576353845555,0.6232373634500068,-0.89608861170051046,0.96292571297422647,-0.42164300722638265,1.1115367410242094,-1.1144757313089007],\"text\":[\"cell_1\",\"cell_2\",\"cell_3\",\"cell_4\",\"cell_5\",\"cell_6\",\"cell_7\",\"cell_8\",\"cell_9\",\"cell_10\",\"cell_11\",\"cell_12\",\"cell_13\",\"cell_14\",\"cell_15\",\"cell_16\",\"cell_17\",\"cell_18\",\"cell_19\",\"cell_20\",\"cell_21\",\"cell_22\",\"cell_23\",\"cell_24\",\"cell_25\",\"cell_26\",\"cell_27\",\"cell_28\",\"cell_29\",\"cell_30\",\"cell_31\",\"cell_32\",\"cell_33\",\"cell_34\",\"cell_35\",\"cell_36\",\"cell_37\",\"cell_38\",\"cell_39\",\"cell_40\",\"cell_41\",\"cell_42\",\"cell_43\",\"cell_44\",\"cell_45\",\"cell_46\",\"cell_47\",\"cell_48\",\"cell_49\",\"cell_50\"],\"textposition\":[\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\",\"left\"],\"opacity\":1,\"marker\":{\"color\":\"#990000\",\"symbol\":\"x\",\"size\":5,\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"name\":\"Columns\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"error_y\":{\"color\":\"rgba(255,127,14,1)\"},\"error_x\":{\"color\":\"rgba(255,127,14,1)\"},\"line\":{\"color\":\"rgba(255,127,14,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"mode\":\"markers\",\"type\":\"scatter\",\"x\":[0.0055901483643623993,-0.014626965662805422,0.0029970094459534501,-0.00017963483114249158,0.016698187873779021,-0.008428987024903219,0.017614943329542714,0.02111812314741706,0.013410940558200739,0.023201921763698362,0.016422481082122679,0.020880653676572172,0.0098447200417880257,-0.062259905800427971,0.0076414942425052194,0.0057642192786950897,-0.002668293876236497,0.017379745391549798,-0.0011711023077344955,0.044153779526458749,-0.010726724867114118,-0.012336288405497034,-0.036121230295243917,0.029790776026081843,0.015188183568755452,0.014496996598367251,-0.0070969908341989713,0.0067677922685726744,-0.021123061018391526,0.02377684345908674,-0.029270805052447377,0.010351360342782896,0.022074243961819368,-0.005200373593468195,-0.0063617769522003806,0.0075377359954291578,0.001649350658517394,0.0020621954138739032,-0.0045524440207536784,0.032217636565663885,-0.0062680664900630493,0.026815391806480387,0.0085293931288079258,0.012027555369011964,-0.02598580180418911,0.0076669461447493367,-0.0026852269196997376,0.0091349236851855486,-0.0025019988246670556,-0.05064498923461936,0.015772907149389215,-0.031243863370735876,-0.0068893788326126462,0.0074073731172974774,0.038217442838305554,-0.036605214721314505,0.014834389352483506,-0.01161528312287948,-0.044053385060820717,-0.0043872112098153138,-0.041012398004639058,-0.014566673480700945,0.024486073248431439,0.0061290466794870118,-0.00094010135376921004,0.014752938257311922,0.028471762449045951,0.0024072931840951059,0.0010980508624900897,0.0050570803626212813,0.00098781803314356527,-0.0028884561841071811,-0.0015984088501829797,0.0070216256498588387,-0.006513451784041998,-0.0027198120087851131,0.021882890315714408,-0.025886580909866935,0.036533470516995938,-0.0074374645197160796,0.013235501128622366,0.02743933079599584,-0.026871627855358945,0.041494671530391353,0.047073647370874973,-0.027850268053148913,0.020679135625845804,-0.06269550007252335,-0.039275662638671043,-0.017015801905788257,0.020796958457262611,0.0076347438902120085,-0.0040376890313388262,0.030074277841528628,-0.0051874874627049717,0.019611629064018355,-0.03114365053667149,-0.051786768186092361,-0.017543342227000557,-0.022169103689179886,0.00057050446575552984,-0.0095156542581564824,0.012888127842667489,-0.013481906652665018,0.044756944731926533,-0.025892405450837493,-0.001795870630223102,0.01093060228199969,-0.027073622716978624,-0.02991026735988573,0.017753890832226494,-0.075157287002160775,0.017509544030036336,-0.012484832300121484,0.065948201166002751,-0.014021767560690564,-0.0337153458998617,-0.01715639825411383,-0.011038479330901857,0.0026499183912617645,0.015604555530955135,0.011973879189306605,-0.013807018648480961,0.0083869793450586042,-0.041622308562390221,0.024714117721028703,0.022166086589974033,0.017480408252204011,0.0062076671581338845,0.028537707415887934,-0.014893881127719732,-0.0096700771200687076,-0.0032602038890483568,-0.012950070498287917,0.039959415375535726,0.0011113452609953567,-0.049652714229700773,-0.0051673207479776091,-0.0035415432666272635,-0.0070185825751358831,0.032149852216843827,-0.027127701255981771,0.01813464998920029,-0.047663758750125719,-0.0031973753344828374,0.035355342195191222,0.0035373449131270267,0.0050836726444116681,-0.031847782066193688,-0.043728612048791901,-0.017844279608792785,0.022686994492639143,0.033973012577942642,-0.0020244529704652459,0.0034807338786595169,0.01431103193694527,0.0071772853782966928,0.0075667244128608631,-0.052755338071988712,0.029668749196936114,0.0051215270550010079,-0.03726446769253363,0.00096555592255115417,0.0088233439506747689,-0.010620960503153446,-0.011666428367471064,0.01230712234378193,-0.024788957978702543,0.023470380627612208,0.013420598479621028,-0.024173354646336291,-0.031568533793271035,-0.018482057546029978,0.041802701488855516,-0.013110363707443826,-0.0076722233143491402,-0.00092774234483478308,-0.0047630999292423331,-0.0110325978387133,0.036899309423272082,-0.0096527293243837044,0.032578433159638528,0.0014617314730403981,-0.0065902385166687772,0.0032979650163685657,-0.05137534339768185,-0.044696142961250587,-0.014006455739320392,-0.011110145646722025,0.044260764744552629,-0.019984870063323962,-0.031029528374957527,-0.0029576793444124174,-0.018100887951282126,0.01246406765029635,0.01792299585273234,0.056725182273125979,0.0086331136227039106,-0.032845403695339878,-0.017641343463097349,0.026616127086881772,-0.013687451785670357,0.012916354769785513,-0.021139235610945176,-0.03143964201726869,0.013607901628293654,-0.022650066367151694,0.031896431795523206,-0.016964267482789369,-0.022925466470844924,-0.0014509417207841273,0.025197096007319827,0.0019332112348709337,0.014735972542552947,-0.013175183058177803,-0.0072267873562125544,0.011002165002201206,0.023301132279210469,-0.0033806235877047973,-0.045239684689690904,-0.010354125123015607,1.9615541604459538e-05,0.013964481805129714,-0.015142569831328291,-0.0019479348579399998,0.048316243332335147,-0.0034799032515618555,0.054453374234766587,-0.022112959481380711,0.029905804592393146,0.012500232728920379,0.0399151258082956,0.006331494655795967,0.03301289864546085,-0.029259340144046238,-0.01655742847051796,-0.045731410631079293,-0.0097877072968745454,0.03387769535653197,0.020974636545246034,0.017446502401167258,-0.024320808622997746,-0.0008947282436073085,-0.031496396768261055,-0.017803055589784771,0.00053477374294685833,-0.036442958170728734,0.013295953813701057,0.028554570389690257,0.0088215787093849415,0.0050530452673682195,-0.023159887157736897,0.013402751060170651,0.0058114262247438066,-0.015658423490168851,-0.033246703094792864,-0.01438705967384875,0.0089428699928235031,0.017254478324294879,0.00073031085810338725,-0.026043916505927082,-0.048706368056385584,-0.041898255671940332,0.0012990135440917351,-0.0078415022191395973,0.0053975738858699123,-0.0075192007602372752,-0.0094022735369676327,0.015040648569916543,0.010633453372619343,0.045830520289443691,-0.026501661177901679,-0.0063740548732362607,-0.024663338550325653,0.007434597797847998,-0.016022161840356004,0.023746074161437876,-0.0065780124140504713,0.012994978891528487,0.040748001474999129,0.025611854246708844,-0.023313517185713062,-0.029354573676111193,0.032657511713096908,-0.0048709856511781752,-0.021252675354701843,-0.028800002031829853,0.006195741426901491,-0.024553194217716814,-0.0039148724187348617,0.017446794346445502,-0.028942662016372394,-0.00072290510872453624,0.0026304865954883583,0.013279709588828537,0.00064912236639732526,-0.016412564012886668,0.030086156276869874,-0.014169829122222642,-0.01763158046946588,-0.038768835494472714,0.030545745658175125,0.01321709111225652,-0.040506193712320095,-0.0096168224596779352,0.03546721123167202,0.04848812702569056,0.0059314579868784429,-0.010360699947873895,-0.0012150291725390632,0.0038293240436902158,-0.04536230039293155,-0.057619156407136059,-0.0031822063847383557,0.020520389240387141,0.019680116306229893,0.001943292585014852,0.011269893615203154,-0.025068603774983426,-0.018758472422864873,-0.026544229702028362,0.018978298798623346,0.0077962569832030048,0.0013857862707468815,0.024630493502709006,0.054695806911806547,-0.0090615528084514434,-0.044386515082970555,0.025432442772267791,-0.025797199111537224,-0.0019465736053911494,-0.050485175907149266,0.0091964599726652562,0.0045993017111554575,-0.018487226482377522,-0.009691693881336106,0.010521400252164,0.017174798503789352,0.0049861260460239889,0.0036142909894222616,0.048072673020358482,-0.021357042973551781,-0.0056244026209028427,-0.014490349549545587,-0.0019679406921215893,0.031230357659979245,0.058876257357760503,-0.05834422396477762,-0.052534903416807527,0.020530521917409658,-0.038748246774113738,-0.022822036461680649,0.020326668742287689,-0.023631445831742769,0.013261837770317152,-0.014578407847081301,0.0048315586842855689,-0.0029636338381801527,0.016620285390539682,0.0070334616780017654,0.007831183544143961,-0.010825674896265921,-0.040674246640467593,-0.051734858280455431,-0.01377397979200478,-0.045874708749414135,0.020087608245388924,-0.0076675440145783725,-0.011768801403967993,0.022880276406937114,0.024217914512367586,0.051272878546798802,0.0030909196483863135,0.027253811129467034,0.0021293822102353161,0.028022820355054944,-0.0037705548416124579,-0.055812122158145523,0.027494268292644012,0.033450012622611949,0.024138855003815692,0.035603492519745858,0.014580421446235309,0.055128144112795631,-0.010525071118695183,-0.012712002952409237,-0.068437348523083669,-0.049917584338935353,-0.021723885206513409,0.0069974437767390697,0.031958890865675015,0.031719140914480776,0.041497824760258907,0.016699805649831277,0.073536069485946071,0.022375173644414954,9.6452053553171206e-05,-0.048693825279741879,0.01523450784679567,0.048400434313095916,0.019070426564387587,-0.021714928463079326,0.0050614242473914833,0.0028431217807593934,0.002805381385659919,0.0083937701214249517,0.025674266396676606,0.0033185609540106165,0.067239080501791865,-0.017069651994664481,-0.0081512223540340777,0.014407735687247679,-0.021871569756487488,-0.0043180719970915028,-0.017212118673262018,0.016593381354184082,-0.039694871769122793,-0.0071443848648724056,0.012741327818137744,0.0012980339813980554,-0.012493502137028765,0.073974317246799898,-0.024303510486257326,0.015463242704372653,-0.03021384863239358,-0.035070233800564503,-0.029755680179177842,0.0053588127124233366,0.00090816887380196069,-0.022942541600224148,-0.0094350379102127492,0.0041834908612761136,0.032187052093857881,-0.034815084549960199,-0.038215430301226878,-0.0112661518713007,0.02383173429879358,-0.0025192558668895022,0.0057191901679927281,0.031050907268747183,0.061170073110716032,-0.016914043665536581,0.010581994117929427,0.0015018317687273185,0.0079330215978816315,0.00014660005085193146,-0.014114575049798208,0.0078111998436979045,0.064618075664004709,-0.0087262623863118075,-0.038713750484651338,-0.0051263379786645573,-0.031779022173229941,0.04034708346620907,0.028762416310002335,-0.022376547510341353,-0.035111573057315791,-0.024550768670698622,0.029037797031810475,0.006955655403488417,0.030862734119479429,-0.010002243792235223,0.010099088648027861,-0.036215472270081796,-0.026264057827555778,0.01224896329616406,0.044316129607926122,-0.01740385871660963,-0.024034405202183428,0.052787005957983392,0.016226431223198268,0.013167853167725431,-0.0023308273235969471,0.0011749735425695676,-0.0042269684187642171,-0.0099952846144624428,0.00038538649632692193,-0.020711636672524101,0.037482037276575501,-0.01482988815088784,0.034556401356909426,-0.059514230959647668,0.038512244168900263,-0.0078284558066411825,-0.066146825929157854,0.026485075249028527,0.015655435122785593,-0.0080873878931591436,0.033989965738936152,0.033935796459864657,0.0064721309868611444,-0.046452030084580626,0.0065168788761381484,0.029535295591536691,0.02454908487210429,0.028644586902398982,0.0069206753886061033,0.020989584625880315,0.010784436885976524,-0.034019489037438309],\"y\":[0.0072361274770649303,-0.0061177996801350734,0.0029802095307269903,-0.010446116671889903,-0.031735680461944381,-0.00034620326966396884,-0.0091244642325126243,-0.015116972551595387,0.00058483001559110409,-0.017308188460382238,-0.020755199525183815,0.010649994531304214,-0.021889539819716718,0.0081108390452562379,-0.03048831577871957,0.062157021988413393,0.040422318978711333,-0.0022327974907882298,0.0012761905668096749,-0.022460001288954139,-0.013339462779387419,0.059803157934417525,0.0085262126250618322,-0.045184651269990106,0.015331065818140435,-0.038004297530028923,0.036013750605072045,0.0039350572603952319,0.014732402226714457,-0.0014789801262273868,-0.016265872269082625,-0.033912639171094328,0.029073696064538149,0.023894241771114398,0.011532159278293883,-0.0081935651850502424,-0.051933954902733344,-0.0052972990561757057,0.0060160434360618876,0.0077110175093997261,0.018283816908860311,0.034399262947865668,0.028836674638019335,-0.029280276215440788,-0.033904124772194254,-0.024343090465619572,-0.036652573134338666,-0.001453124983004027,-0.012576562775815618,-0.0033513072463145443,-0.015258392452640665,0.025088450582847165,0.0029258775388551219,-0.0051761564689396045,0.03536845030699013,0.012249062801868152,-0.0089174863923983314,-0.0027143974798605449,-0.011593175054860246,-0.035645733984055517,0.059641371850211948,0.01438389879717668,-0.022165618609690491,0.012695503929368589,0.0041054884608568943,-0.0020677338344909963,-0.012752307293995671,0.027986424565818412,0.00052719876019427774,-0.0054852990048294137,0.02597011406895822,-0.004367022447426541,-0.0016314074362501487,0.011299846428233756,-0.03135485397996262,-0.0019647585536130201,-0.0091010851254781089,-0.00035704123476897536,0.026588960682483613,-0.0036929599814536219,0.018441710241570569,-0.039805652830245099,-0.022550408491446756,-0.028153968304997563,-0.015479455775746611,-0.0055970652612445703,-0.004225434502647488,-0.0090178578962071716,0.0010092967124688519,0.025869365007510324,0.0090636869953406619,-0.089795451877419122,-0.00097226639239370103,0.0043991666206714122,-0.030180234677520637,-0.0017005168709445882,0.025664509431289249,0.00908617601845319,-0.019008009030361785,0.03933829809057536,-0.012451772296337735,0.016512322164554359,-0.00037238531601035404,0.014622517681643873,-0.0024041168435201652,0.013119355249222264,0.02895093389136294,-0.038794716080497761,0.018737730634482291,0.034538386970070015,0.031553171417990827,-0.078558421630350109,0.0030911592767123531,0.0037439810790541937,0.014299718759865953,-0.0108415205319577,0.018251119368615367,-0.07096578821975813,-0.0061044119867776575,0.0035391302283892118,0.011141892810358479,-0.070773815145236244,0.014782727203858965,0.04572088171414132,-0.0095915458690786354,0.024053084120735077,0.04767239135333446,-0.031207894013286736,0.021507199951457816,0.0090400306005216525,-0.043812244193980172,0.026637180174978591,0.0064677265303626106,0.03781327169979639,0.016480829788724231,-0.0078736707556251468,-0.05604374298741352,-0.013941501452920693,0.015715289037661853,-0.063043280249297354,0.010477369035236521,-0.055959616878442586,0.0049093862849206148,0.01247048937797521,0.038708508026138858,0.031611007095723676,-0.01948466890914153,-0.060541070827579105,-0.030086346659960163,0.0021257444855991479,0.019622687713249262,0.015915329863285154,0.027797421017524322,0.026691524104872417,0.044160163071084488,-0.010992111183584181,0.0083739178097890863,0.014182108196087265,0.01049385240032615,0.011803604334546143,-0.017041292810136506,0.035661971931338375,0.067446362282401723,-0.0014485461484549521,-0.028010579983368433,0.024667078482028627,-0.002969138966667804,-0.043379154757967379,0.0030443257728812135,0.0019331259695637422,-0.0046418043440903719,0.0026944782485577054,-0.018319084917011012,0.021341374614361201,-0.0070598365509499531,-0.0054503164233238944,-0.0016648513846480944,0.047762026128178786,0.049622336405233163,-0.0051725440418316209,0.04640223570953645,-0.023171644026949333,-0.0061492980335188024,0.038998200270912178,0.025378282889807379,-0.011007598987033979,-0.0062229267873045186,0.025663028307168937,-0.03310197453380434,0.015977297019524838,-0.052485110586686028,-0.0047177839672808818,0.046926288933051459,-0.0036622857612419843,0.01432929023730458,-0.030873791961464638,-0.004335898539271181,-0.026764526894025076,-0.011112595706333536,-0.0020735047665443903,0.02866802231012653,-0.019889431123197934,0.015195804582437362,0.0094938800034786181,-0.061281988730348257,-0.021892416335859324,0.028032503479075432,-0.026343732320992182,-0.011131082768593958,0.0089547585735982524,-0.0018403934025752028,0.020530776886845372,-0.022855058538817835,-0.0048216714976814451,-0.003524037806574897,0.018040113146874204,-0.027432035147420812,-0.028744243133354705,0.032529624021536002,-0.01188199440615244,0.007238242937308249,-0.024784616944591862,0.018118813268174425,0.015606813381026588,0.011017427349151988,-0.0024616105626274433,-0.011502192934484944,-0.0068222990257683904,-0.043970183496531118,0.0094541197721211417,0.027273143608682618,0.0064645632742901839,-0.0084855736621957476,-0.049227007132779894,-0.018444702735297937,0.0034400581265549321,0.054826115982419543,0.0081343504789673504,0.0069845240216391226,-0.00031557164016546638,0.010275575709498348,0.0063482492003188199,-0.021827877555264486,0.01487563400151946,-0.028640581250702537,0.013737827195652447,-0.010038159976494147,-0.020520244514220659,-0.029701226150166578,-0.050980996763231458,0.018026838474555582,0.0026421026206099587,-0.02225072172094943,0.0073845441260450779,0.014434459423107599,0.019199796422893347,0.015407805125179943,-0.0093884756815571617,-0.026652166749430866,0.027891412300242259,0.035128075763435497,-0.033209898900355715,0.0079367317111330177,-0.0016008458374816325,0.0084567476525149784,-0.0076997537545570732,0.0037296198407812957,-0.02166147021787616,-0.01749522400981663,-0.011461250306364232,-0.0074511379107765697,-0.00088440092603487891,0.014760813223940409,0.023681087320771555,-0.011376134039953627,-0.067517769456358206,0.048926642281666384,0.0069941974201608711,-0.01965378617198699,0.028493314778423311,-0.01725067959146374,-0.020420961565504634,-0.00085926958191497613,-0.022729611005534309,-0.0070700080794032713,0.010242313408854137,0.021919222603815722,0.041054381169068746,0.010141528800230606,0.010325133320823044,0.011789457899346248,0.0051514301664653817,-0.012701129059086056,0.0034918681025981921,0.054382683450518714,0.0083616714794770425,0.0014200249320950485,-0.043910823500973951,-0.030603070152347683,0.0064821179917730508,-0.025889420590628244,0.039801924625924433,-0.02429681390587041,-0.02226826565949868,-0.0049473511196914998,-0.030214507310946933,0.027064168661420789,-0.041607299949254543,0.042201660721610419,-0.029874766478179691,-0.023520193864308047,0.010768316225909498,0.014845455269558053,0.011950984840639219,-0.024609500972687583,0.011536439233415741,0.037625715826878958,-0.011691072509508783,-0.012603971710261008,0.0067450651791082904,0.035833015827264121,-0.035763936133322773,-0.0070790974123761648,-0.01973013638793264,-0.029431940890315152,0.0041862220446119312,0.038108318568010856,0.0030649047921151068,-0.027893166433340215,-0.0018910015350189718,-0.0087904260335574212,-0.038436692183431286,0.0029495568287787907,-0.027404847604847821,-0.038558566639232641,0.024047642695660086,-0.045517436385694013,0.018660823350144452,-0.0048991382019393575,0.013419209607686861,0.00078468807864356255,0.013658979551552399,-0.020395589366442018,0.019960761426178433,-0.0074973137845464706,0.0048603068666637477,0.0072792412619297944,0.024605170393332904,-0.0019619740276837203,0.0097827313066340058,0.025848794573910053,0.034042015067632415,0.017590242364723594,-0.017168968903943094,0.012338017867886523,0.010504596916874403,0.018765859212027926,-0.03695521939684912,-0.0012202254402786017,0.00046390193678010392,0.061507793604026924,-0.014142919671021261,0.0044516938549933344,-0.0061255239671216656,0.031516674443762591,0.028150001958869995,-0.016901653689296831,0.015658508895373017,0.045219843197397289,-0.01303474611627895,0.014494827427322346,-0.0010847198177883976,0.035950740859608248,-0.023458193388770383,-0.0082509283626010371,-0.012066659889308291,0.00099611215186028428,-0.036064702950830828,-0.011439959904802207,0.0033602980842725844,0.028490901795517967,0.017521425959077835,-0.0069364239417315709,0.027280009001740851,0.082003492235444772,0.029522124360870806,-0.048298269269030976,0.0098871131653544102,-0.0038077681483241949,-0.017106069553812581,-0.032753815714763185,0.014728972148393128,-0.029093345325492549,0.009717693858574546,0.0041114115051206013,-0.044406188370180427,-0.031312288272824548,0.0042929386647623767,0.012082189364148227,0.033525520427927814,0.031293521361791303,-0.020509067474871068,0.012615202991041201,0.027840180991026375,-0.0082109588931153533,0.0057805963216376287,-0.0031861508435562813,-0.013939007645591611,0.020110360318262036,-0.011201491210952343,0.0099186351687742431,0.0098002628344057933,0.039704147309606044,-0.031613229685105569,-0.02395172455892185,0.016324672857783173,0.0057366033890769328,0.012059224109631471,-0.0251464084957593,-0.012175816228110804,0.015979675767278104,0.0027312919667755171,-0.03624520411661885,-0.0035601656164428136,0.021525048093010996,-0.0077312940278580567,-0.0095819565204525829,0.0035310737738248358,0.02152817953228385,-0.014562572794832435,-0.037920691123897163,-0.011665881286748971,0.0074398413318541683,-0.015951337483184936,0.046534706145176213,0.022205158676060984,-0.0038775833806093695,-0.02178695020757598,0.0091869711932442387,-0.017605918068459431,-0.016855496280673638,-0.043586374189787731,-0.014668072919636324,-0.0067932107293698354,-0.030241954859352393,0.033474388278152377,0.0024660504753614455,0.018473441557174834,0.027770557046071859,0.029031208633688667,0.0040015039437864197,-0.019453227733829254,0.040090207372178242,-0.053887757617330195,-0.058936293763730115,0.0019243233909672828,-0.029337339301969755,0.035145642604699677,0.0060257839666763057,0.0056956376429721147,0.0030363796366798456,0.0035898918008037337,0.0228707525191751,0.053696070903321159,-0.025919449317037289,-0.0035512798798264552,0.06786881534079417,-0.0081744148290909431,-0.024408571520899657,-0.014865815419763066,-0.0017846605421883866,0.016449457318879906,-0.0064794675250027947,-0.0084627804734684255,0.070622155809782802,0.0081635531456639363,-0.014269890984330992,0.0066126718834914272,0.0119390648077184,-0.016906750342736133,-0.048985420938270567,-0.0084354005288908695,-0.00714005477985955,-0.0076830377928798089,-0.019415441967663895,0.025136185739646516,0.0071951538918570189,0.025813364326630343,0.015949215370118237,-0.0019585667786693717,-0.035903745782103071,0.020365553301071888,0.027405889914725191,-0.012060206325733014,0.026936280684675292,-0.034732058249783669,0.030960898992695853,-0.030185339386090311,-0.035155108670453926,0.0076731155391006681],\"text\":[\"gene_1\",\"gene_2\",\"gene_3\",\"gene_4\",\"gene_5\",\"gene_6\",\"gene_7\",\"gene_8\",\"gene_9\",\"gene_10\",\"gene_11\",\"gene_12\",\"gene_13\",\"gene_14\",\"gene_15\",\"gene_16\",\"gene_17\",\"gene_18\",\"gene_19\",\"gene_20\",\"gene_21\",\"gene_22\",\"gene_23\",\"gene_24\",\"gene_25\",\"gene_26\",\"gene_27\",\"gene_28\",\"gene_29\",\"gene_30\",\"gene_31\",\"gene_32\",\"gene_33\",\"gene_34\",\"gene_35\",\"gene_36\",\"gene_37\",\"gene_38\",\"gene_39\",\"gene_40\",\"gene_41\",\"gene_42\",\"gene_43\",\"gene_44\",\"gene_45\",\"gene_46\",\"gene_47\",\"gene_48\",\"gene_49\",\"gene_50\",\"gene_51\",\"gene_52\",\"gene_53\",\"gene_54\",\"gene_55\",\"gene_56\",\"gene_57\",\"gene_58\",\"gene_59\",\"gene_60\",\"gene_61\",\"gene_62\",\"gene_63\",\"gene_64\",\"gene_65\",\"gene_66\",\"gene_67\",\"gene_68\",\"gene_69\",\"gene_70\",\"gene_71\",\"gene_72\",\"gene_73\",\"gene_74\",\"gene_75\",\"gene_76\",\"gene_77\",\"gene_78\",\"gene_79\",\"gene_80\",\"gene_81\",\"gene_82\",\"gene_83\",\"gene_84\",\"gene_85\",\"gene_86\",\"gene_87\",\"gene_88\",\"gene_89\",\"gene_90\",\"gene_91\",\"gene_92\",\"gene_93\",\"gene_94\",\"gene_95\",\"gene_96\",\"gene_97\",\"gene_98\",\"gene_99\",\"gene_100\",\"gene_101\",\"gene_102\",\"gene_103\",\"gene_104\",\"gene_105\",\"gene_106\",\"gene_107\",\"gene_108\",\"gene_109\",\"gene_110\",\"gene_111\",\"gene_112\",\"gene_113\",\"gene_114\",\"gene_115\",\"gene_116\",\"gene_117\",\"gene_118\",\"gene_119\",\"gene_120\",\"gene_121\",\"gene_122\",\"gene_123\",\"gene_124\",\"gene_125\",\"gene_126\",\"gene_127\",\"gene_128\",\"gene_129\",\"gene_130\",\"gene_131\",\"gene_132\",\"gene_133\",\"gene_134\",\"gene_135\",\"gene_136\",\"gene_137\",\"gene_138\",\"gene_139\",\"gene_140\",\"gene_141\",\"gene_142\",\"gene_143\",\"gene_144\",\"gene_145\",\"gene_146\",\"gene_147\",\"gene_148\",\"gene_149\",\"gene_150\",\"gene_151\",\"gene_152\",\"gene_153\",\"gene_154\",\"gene_155\",\"gene_156\",\"gene_157\",\"gene_158\",\"gene_159\",\"gene_160\",\"gene_161\",\"gene_162\",\"gene_163\",\"gene_164\",\"gene_165\",\"gene_166\",\"gene_167\",\"gene_168\",\"gene_169\",\"gene_170\",\"gene_171\",\"gene_172\",\"gene_173\",\"gene_174\",\"gene_175\",\"gene_176\",\"gene_177\",\"gene_178\",\"gene_179\",\"gene_180\",\"gene_181\",\"gene_182\",\"gene_183\",\"gene_184\",\"gene_185\",\"gene_186\",\"gene_187\",\"gene_188\",\"gene_189\",\"gene_190\",\"gene_191\",\"gene_192\",\"gene_193\",\"gene_194\",\"gene_195\",\"gene_196\",\"gene_197\",\"gene_198\",\"gene_199\",\"gene_200\",\"gene_201\",\"gene_202\",\"gene_203\",\"gene_204\",\"gene_205\",\"gene_206\",\"gene_207\",\"gene_208\",\"gene_209\",\"gene_210\",\"gene_211\",\"gene_212\",\"gene_213\",\"gene_214\",\"gene_215\",\"gene_216\",\"gene_217\",\"gene_218\",\"gene_219\",\"gene_220\",\"gene_221\",\"gene_222\",\"gene_223\",\"gene_224\",\"gene_225\",\"gene_226\",\"gene_227\",\"gene_228\",\"gene_229\",\"gene_230\",\"gene_231\",\"gene_232\",\"gene_233\",\"gene_234\",\"gene_235\",\"gene_236\",\"gene_237\",\"gene_238\",\"gene_239\",\"gene_240\",\"gene_241\",\"gene_242\",\"gene_243\",\"gene_244\",\"gene_245\",\"gene_246\",\"gene_247\",\"gene_248\",\"gene_249\",\"gene_250\",\"gene_251\",\"gene_252\",\"gene_253\",\"gene_254\",\"gene_255\",\"gene_256\",\"gene_257\",\"gene_258\",\"gene_259\",\"gene_260\",\"gene_261\",\"gene_262\",\"gene_263\",\"gene_264\",\"gene_265\",\"gene_266\",\"gene_267\",\"gene_268\",\"gene_269\",\"gene_270\",\"gene_271\",\"gene_272\",\"gene_273\",\"gene_274\",\"gene_275\",\"gene_276\",\"gene_277\",\"gene_278\",\"gene_279\",\"gene_280\",\"gene_281\",\"gene_282\",\"gene_283\",\"gene_284\",\"gene_285\",\"gene_286\",\"gene_287\",\"gene_288\",\"gene_289\",\"gene_290\",\"gene_291\",\"gene_292\",\"gene_293\",\"gene_294\",\"gene_295\",\"gene_296\",\"gene_297\",\"gene_298\",\"gene_299\",\"gene_300\",\"gene_301\",\"gene_302\",\"gene_303\",\"gene_304\",\"gene_305\",\"gene_306\",\"gene_307\",\"gene_308\",\"gene_309\",\"gene_310\",\"gene_311\",\"gene_312\",\"gene_313\",\"gene_314\",\"gene_315\",\"gene_316\",\"gene_317\",\"gene_318\",\"gene_319\",\"gene_320\",\"gene_321\",\"gene_322\",\"gene_323\",\"gene_324\",\"gene_325\",\"gene_326\",\"gene_327\",\"gene_328\",\"gene_329\",\"gene_330\",\"gene_331\",\"gene_332\",\"gene_333\",\"gene_334\",\"gene_335\",\"gene_336\",\"gene_337\",\"gene_338\",\"gene_339\",\"gene_340\",\"gene_341\",\"gene_342\",\"gene_343\",\"gene_344\",\"gene_345\",\"gene_346\",\"gene_347\",\"gene_348\",\"gene_349\",\"gene_350\",\"gene_351\",\"gene_352\",\"gene_353\",\"gene_354\",\"gene_355\",\"gene_356\",\"gene_357\",\"gene_358\",\"gene_359\",\"gene_360\",\"gene_361\",\"gene_362\",\"gene_363\",\"gene_364\",\"gene_365\",\"gene_366\",\"gene_367\",\"gene_368\",\"gene_369\",\"gene_370\",\"gene_371\",\"gene_372\",\"gene_373\",\"gene_374\",\"gene_375\",\"gene_376\",\"gene_377\",\"gene_378\",\"gene_379\",\"gene_380\",\"gene_381\",\"gene_382\",\"gene_383\",\"gene_384\",\"gene_385\",\"gene_386\",\"gene_387\",\"gene_388\",\"gene_389\",\"gene_390\",\"gene_391\",\"gene_392\",\"gene_393\",\"gene_394\",\"gene_395\",\"gene_396\",\"gene_397\",\"gene_398\",\"gene_399\",\"gene_400\",\"gene_401\",\"gene_402\",\"gene_403\",\"gene_404\",\"gene_405\",\"gene_406\",\"gene_407\",\"gene_408\",\"gene_409\",\"gene_410\",\"gene_411\",\"gene_412\",\"gene_413\",\"gene_414\",\"gene_415\",\"gene_416\",\"gene_417\",\"gene_418\",\"gene_419\",\"gene_420\",\"gene_421\",\"gene_422\",\"gene_423\",\"gene_424\",\"gene_425\",\"gene_426\",\"gene_427\",\"gene_428\",\"gene_429\",\"gene_430\",\"gene_431\",\"gene_432\",\"gene_433\",\"gene_434\",\"gene_435\",\"gene_436\",\"gene_437\",\"gene_438\",\"gene_439\",\"gene_440\",\"gene_441\",\"gene_442\",\"gene_443\",\"gene_444\",\"gene_445\",\"gene_446\",\"gene_447\",\"gene_448\",\"gene_449\",\"gene_450\",\"gene_451\",\"gene_452\",\"gene_453\",\"gene_454\",\"gene_455\",\"gene_456\",\"gene_457\",\"gene_458\",\"gene_459\",\"gene_460\",\"gene_461\",\"gene_462\",\"gene_463\",\"gene_464\",\"gene_465\",\"gene_466\",\"gene_467\",\"gene_468\",\"gene_469\",\"gene_470\",\"gene_471\",\"gene_472\",\"gene_473\",\"gene_474\",\"gene_475\",\"gene_476\",\"gene_477\",\"gene_478\",\"gene_479\",\"gene_480\",\"gene_481\",\"gene_482\",\"gene_483\",\"gene_484\",\"gene_485\",\"gene_486\",\"gene_487\",\"gene_488\",\"gene_489\",\"gene_490\",\"gene_491\",\"gene_492\",\"gene_493\",\"gene_494\",\"gene_495\",\"gene_496\",\"gene_497\",\"gene_498\",\"gene_499\",\"gene_500\"],\"opacity\":0.69999999999999996,\"marker\":{\"color\":\"#0066FF\",\"symbol\":\"circle-open\",\"size\":2.5,\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"name\":\"genes\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"error_y\":{\"color\":\"rgba(44,160,44,1)\"},\"error_x\":{\"color\":\"rgba(44,160,44,1)\"},\"line\":{\"color\":\"rgba(44,160,44,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://vingronlab.github.io/APL/reference/ca_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate correspondence analysis row and column coordinates. — ca_coords","title":"Calculate correspondence analysis row and column coordinates. — ca_coords","text":"`ca_coords` calculates standardized principal  coordinates rows columns CA space.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate correspondence analysis row and column coordinates. — ca_coords","text":"","code":"ca_coords(caobj, dims = NULL, princ_coords = 3, princ_only = FALSE)"},{"path":"https://vingronlab.github.io/APL/reference/ca_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate correspondence analysis row and column coordinates. — ca_coords","text":"caobj \"cacomp\" object outputted `cacomp()`. dims Integer indicating number dimensions use  calculation coordinates. elements caobj (applicable) reduced given  number dimensions. Default NULL (keeps dimensions). princ_coords Integer. Number indicating whether principal  coordinates calculated rows (=1), columns (=2), (=3)  none (=0). Default 3. princ_only Logical, whether principal coordinates  calculated. , words, whether standardized coordinates already  calculated stored `caobj`. Default `FALSE`.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate correspondence analysis row and column coordinates. — ca_coords","text":"Returns input object coordinates added. std_coords_rows/std_coords_cols: Standardized coordinates rows/columns. prin_coords_rows/prin_coords_cols: Principal coordinates rows/columns.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_coords.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate correspondence analysis row and column coordinates. — ca_coords","text":"Takes \"cacomp\" object calculates standardized principal  coordinates visualization CA results biplot subsequently calculate coordinates Association Plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/ca_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate correspondence analysis row and column coordinates. — ca_coords","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 1) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored. ca <- ca_coords(ca, princ_coords = 3)"},{"path":"https://vingronlab.github.io/APL/reference/cacomp-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class that contains all elements needed for CA. — cacomp-class","title":"An S4 class that contains all elements needed for CA. — cacomp-class","text":"class contains elements necessary computer CA coordinates  Association Plot coordinates, well informative data row/column inertia,  gene-wise APL-scores, etc. ... Creates new cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An S4 class that contains all elements needed for CA. — cacomp-class","text":"","code":"new_cacomp(...)"},{"path":"https://vingronlab.github.io/APL/reference/cacomp-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An S4 class that contains all elements needed for CA. — cacomp-class","text":"... slot names objects new cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An S4 class that contains all elements needed for CA. — cacomp-class","text":"cacomp object","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class that contains all elements needed for CA. — cacomp-class","text":"U class \"matrix\". Left singular vectors original input matrix. V class \"matrix\". Right singular vectors original input matrix. D class \"numeric\". Singular values original inpt matrix. std_coords_rows class \"matrix\". Standardized CA coordinates  rows. std_coords_cols class \"matrix\". Standardized CA coordinates  columns. prin_coords_rows class \"matrix\". Principal CA coordinates rows. prin_coords_cols class \"matrix\". Principal CA coordinates  columns. apl_rows class \"matrix\". Association Plot coordinates rows  direction defined slot \"group\" apl_cols class \"matrix\". Association Plot coordinates columns  direction defined slot \"group\" APL_score class \"data.frame\". Contains rows sorted APL score. Columns: Rowname (gene name case gene expression data), APL score calculated direction defined slot \"group\", original row number rank row determined score. dims class \"numeric\". Number dimensions CA space. group class \"numeric\". Indices chosen columns APL  calculations. row_masses class \"numeric\". Row masses frequency table. col_masses class \"numeric\". Column masses frequency table. top_rows class \"numeric\". Number variable rows chosen. tot_inertia class \"numeric\". Total inertia CA space. row_inertia class \"numeric\". Row-wise inertia CA space. col_inertia class \"numeric\". Column-wise inertia CA space. permuted_data class \"list\". Storage slot permuted data.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An S4 class that contains all elements needed for CA. — cacomp-class","text":"","code":"set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                 x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  res <-  APL:::comp_std_residuals(mat=cnts) SVD <- svd(res$S) names(SVD) <- c(\"D\", \"U\", \"V\") SVD <- SVD[c(2, 1, 3)]  ca <- new_cacomp(U = SVD$U,                  V = SVD$V,                  D = SVD$D,                  row_masses = res$rowm,                  col_masses = res$colm)"},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondance Analysis — cacomp","title":"Correspondance Analysis — cacomp","text":"`cacomp` performs correspondence analysis matrix Seurat/SingleCellExperiment object returns transformed data. `cacomp.seurat` performs correspondence analysis assay Seurat  container stores standardized coordinates columns (= cells)  principal coordinates rows (= genes) DimReduc Object  Seurat container. `cacomp.SingleCellExperiment` performs correspondence analysis assay  SingleCellExperiment stores standardized coordinates  columns (= cells) principal coordinates rows   (= genes) matrix SingleCellExperiment container.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondance Analysis — cacomp","text":"","code":"cacomp(   obj,   coords = TRUE,   princ_coords = 3,   python = FALSE,   dims = NULL,   top = 5000,   inertia = TRUE,   rm_zeros = TRUE,   ... )  # S4 method for matrix cacomp(   obj,   coords = TRUE,   princ_coords = 3,   python = FALSE,   dims = NULL,   top = 5000,   inertia = TRUE,   rm_zeros = TRUE,   ... )  # S4 method for Seurat cacomp(   obj,   coords = TRUE,   princ_coords = 3,   python = FALSE,   dims = NULL,   top = 5000,   inertia = TRUE,   rm_zeros = TRUE,   ...,   assay = Seurat::DefaultAssay(obj),   slot = \"counts\",   return_input = FALSE )  # S4 method for SingleCellExperiment cacomp(   obj,   coords = TRUE,   princ_coords = 3,   python = FALSE,   dims = NULL,   top = 5000,   inertia = TRUE,   rm_zeros = TRUE,   ...,   assay = \"counts\",   return_input = FALSE )"},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correspondance Analysis — cacomp","text":"obj numeric matrix Seurat/SingleCellExperiment object. sequencing count matrix, gene expression values genes rows  samples/cells columns. contain row column names. coords Logical. Indicates whether CA standard coordinates  calculated. Default TRUE princ_coords Integer. Number indicating whether principal  coordinates calculated rows (=1), columns (=2),  (=3) none (=0). Default 1. python logical value indicating whether use singular-value  decomposition python package torch. implementation dramatically speeds computation compared `svd()`  R. dims Integer. Number CA dimensions retain. Default NULL  (keeps dimensions). top Integer. Number variable rows retain.  Default 5000. (set NULL keep ). inertia Logical.. Whether total, row column inertias  calculated returned. Default TRUE. rm_zeros Logical. Whether rows & cols containing 0s  removed. Keeping zero rows/cols might lead unexpected results. Default TRUE. ... parameters assay Character. assay extract count matrix  SVD, e.g. \"RNA\" Seurat objects \"counts\"/\"logcounts\"  SingleCellExperiments. slot character. slot Seurat assay. Default \"counts\". return_input Logical. TRUE returns input  (SingleCellExperiment/Seurat object) CA results saved  reducedDim/DimReduc slot \"CA\".  Otherwise returns \"cacomp\". Default FALSE.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correspondance Analysis — cacomp","text":"Returns named list class \"cacomp\" components U, V D: results SVD. row_masses col_masses: Row columns masses. top_rows: many variable rows retained analysis. tot_inertia, row_inertia col_inertia: inertia = TRUE. Total, row column inertia respectively. return_imput = TRUE Seurat container: Returns input obj class  \"Seurat\" new Dimensional Reduction Object named \"CA\". Standard coordinates cells saved embeddings, principal coordinates genes loadings singular values (= square root principal intertias/eigenvalues) stored stdev. recompute regular \"cacomp\" object without rerunning cacomp use  `.cacomp()`. return_input =TRUE SingleCellExperiment input returns  SingleCellExperiment object matrix standardized coordinates  columns reducedDim(obj, \"CA\"). Additionally, matrix contains following  attributes: \"prin_coords_rows\": Principal coordinates rows. \"singval\": Singular values. explained inertia principal  axis calculate singval^2. \"percInertia\": Percent explained inertia principal axis. recompute regular \"cacomp\" object SingleCellExperiment without  rerunning cacomp use `.cacomp()`.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correspondance Analysis — cacomp","text":"calculation performed according work Michael Greenacre.  Singular value decomposition can performed either base R  function `svd` preferably faster pytorch implementation  (python = TRUE). working large matrices, CA coordinates principal coordinates computed needed save  computational time.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Correspondance Analysis — cacomp","text":"Greenacre, M. Correspondence Analysis Practice, Third Edition, 2017.","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correspondance Analysis — cacomp","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 3, top = 5)  ########### # Seurat  # ########### library(Seurat) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                      x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Create Seurat object seu <- CreateSeuratObject(counts = cnts) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') #> Warning: Data is of class matrix. Coercing to dgCMatrix.  # Run CA and save in dim. reduction slot seu <- cacomp(seu, return_input = TRUE, assay = \"RNA\", slot = \"counts\") #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  # Run CA and return cacomp object ca <- cacomp(seu, return_input = FALSE, assay = \"RNA\", slot = \"counts\") #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  ######################## # SingleCellExperiment # ######################## library(SingleCellExperiment) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts)) logcnts <- log2(cnts + 1)  # Create SingleCellExperiment object sce <- SingleCellExperiment(assays=list(counts=cnts, logcounts=logcnts))  # run CA and save in dim. reduction slot. sce <- cacomp(sce, return_input = TRUE, assay = \"counts\") # on counts sce <- cacomp(sce, return_input = TRUE, assay = \"logcounts\") # on logcounts  # run CA and return cacomp object. ca <- cacomp(sce, return_input = FALSE, assay = \"counts\")"},{"path":"https://vingronlab.github.io/APL/reference/cacomp_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints slot names of cacomp object — cacomp_names","title":"Prints slot names of cacomp object — cacomp_names","text":"Prints slot names cacomp object","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints slot names of cacomp object — cacomp_names","text":"","code":"cacomp_names(caobj)"},{"path":"https://vingronlab.github.io/APL/reference/cacomp_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints slot names of cacomp object — cacomp_names","text":"caobj cacomp object","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints slot names of cacomp object — cacomp_names","text":"Prints slot names cacomp object","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints slot names of cacomp object — cacomp_names","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 3, top = 5)  # show slot names: cacomp_names(ca) #>  [1] \"U\"                \"V\"                \"D\"                \"std_coords_rows\"  #>  [5] \"std_coords_cols\"  \"prin_coords_rows\" \"prin_coords_cols\" \"apl_rows\"         #>  [9] \"apl_cols\"         \"APL_score\"        \"dims\"             \"group\"            #> [13] \"row_masses\"       \"col_masses\"       \"top_rows\"         \"tot_inertia\"      #> [17] \"row_inertia\"      \"col_inertia\"      \"permuted_data\""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_slot.html","id":null,"dir":"Reference","previous_headings":"","what":"Access slots in a cacomp object — cacomp_slot","title":"Access slots in a cacomp object — cacomp_slot","text":"Access slots cacomp object","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_slot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access slots in a cacomp object — cacomp_slot","text":"","code":"cacomp_slot(caobj, slot)"},{"path":"https://vingronlab.github.io/APL/reference/cacomp_slot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access slots in a cacomp object — cacomp_slot","text":"caobj cacomp object slot slot return","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_slot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access slots in a cacomp object — cacomp_slot","text":"Chosen slot cacomp object","code":""},{"path":"https://vingronlab.github.io/APL/reference/cacomp_slot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access slots in a cacomp object — cacomp_slot","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 3, top = 5)  # access left singular vectors cacomp_slot(ca, \"U\") #>                 Dim1       Dim2 #> gene_10 -0.637567772  0.2580198 #> gene_4   0.765832223  0.1546521 #> gene_7  -0.080908929 -0.5350181 #> gene_5  -0.008859746  0.6562842 #> gene_6  -0.019585524 -0.4388112"},{"path":"https://vingronlab.github.io/APL/reference/check_cacomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if cacomp object was correctly created. — check_cacomp","title":"Check if cacomp object was correctly created. — check_cacomp","text":"Checks slots cacomp object correct size whether coherent.","code":""},{"path":"https://vingronlab.github.io/APL/reference/check_cacomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if cacomp object was correctly created. — check_cacomp","text":"","code":"check_cacomp(object)"},{"path":"https://vingronlab.github.io/APL/reference/check_cacomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if cacomp object was correctly created. — check_cacomp","text":"object cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/check_cacomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if cacomp object was correctly created. — check_cacomp","text":"TRUE valid cacomp object. FALSE otherwise.","code":""},{"path":"https://vingronlab.github.io/APL/reference/check_cacomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if cacomp object was correctly created. — check_cacomp","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 3, top = 5)  check_cacomp(ca) #> [1] TRUE"},{"path":"https://vingronlab.github.io/APL/reference/comp_std_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Standardized Residuals — comp_std_residuals","title":"Compute Standardized Residuals — comp_std_residuals","text":"`comp_std_residuals` computes standardized residual matrix S, basis correspondence analysis serves input singular value decomposition (SVD).","code":""},{"path":"https://vingronlab.github.io/APL/reference/comp_std_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Standardized Residuals — comp_std_residuals","text":"","code":"comp_std_residuals(mat)"},{"path":"https://vingronlab.github.io/APL/reference/comp_std_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Standardized Residuals — comp_std_residuals","text":"mat numerical matrix coercible one `.matrix()`. row column names.","code":""},{"path":"https://vingronlab.github.io/APL/reference/comp_std_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Standardized Residuals — comp_std_residuals","text":"named list standardized residual matrix \"S\", grand total original matrix \"tot\" well row column masses \"rowm\" \"colm\" respectively.","code":""},{"path":"https://vingronlab.github.io/APL/reference/comp_std_residuals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Standardized Residuals — comp_std_residuals","text":"Calculates standardized residual matrix S proportion matrix P expected values E according \\(S = \\frac{(P-E)}{sqrt(E)}\\).","code":""},{"path":"https://vingronlab.github.io/APL/reference/elbow_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs elbow method — elbow_method","title":"Runs elbow method — elbow_method","text":"Helper function pick_dims() run elbow method.","code":""},{"path":"https://vingronlab.github.io/APL/reference/elbow_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs elbow method — elbow_method","text":"","code":"elbow_method(obj, mat, reps, python = FALSE, return_plot = FALSE)"},{"path":"https://vingronlab.github.io/APL/reference/elbow_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs elbow method — elbow_method","text":"obj \"cacomp\" object outputted `cacomp()` mat numeric matrix. sequencing count matrix, gene expression  values genes rows samples/cells columns. contain row column names. reps Integer. Number permutations perform choosing  \"elbow_rule\". python logical value indicating whether use singular value  decomposition python package torch. implementation dramatically speeds computation compared `svd()`  R. return_plot TRUE/FALSE. Whether plot returned  choosing \"elbow_rule\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/elbow_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs elbow method — elbow_method","text":"`elbow_method` (`return_plot=TRUE`) returns list two elements:  \"dims\" contains number dimensions \"plot\" ggplot.  `return_plot=TRUE` just returns number picked dimensions.","code":""},{"path":"https://vingronlab.github.io/APL/reference/elbow_method.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Runs elbow method — elbow_method","text":"Ciampi, Antonio, González Marcos, Ana Castejón Limas, Manuel.  Correspondence analysis 2-way clustering. (2005), SORT 29(1).","code":""},{"path":"https://vingronlab.github.io/APL/reference/elbow_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs elbow method — elbow_method","text":"","code":"# Get example data from Seurat library(Seurat) set.seed(2358) cnts <- as.matrix(Seurat::GetAssayData(pbmc_small,                                        assay = \"RNA\",                                        slot = \"data\")) # Run correspondence analysis. ca <- cacomp(obj = cnts) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  # pick dimensions with the elbow rule. Returns list. pd <- pick_dims(obj = ca,                 mat = cnts,                 method = \"elbow_rule\",                 return_plot = TRUE,                 reps = 10) #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% pd$plot  ca_sub <- subset_dims(ca, dims = pd$dims)"},{"path":"https://vingronlab.github.io/APL/reference/is.empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check if object is empty. — is.empty","title":"Helper function to check if object is empty. — is.empty","text":"Helper function check object empty.","code":""},{"path":"https://vingronlab.github.io/APL/reference/is.empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check if object is empty. — is.empty","text":"","code":"is.empty(x)"},{"path":"https://vingronlab.github.io/APL/reference/is.empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check if object is empty. — is.empty","text":"x object","code":""},{"path":"https://vingronlab.github.io/APL/reference/is.empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check if object is empty. — is.empty","text":"TRUE x length 0 NULL. FALSE otherwise","code":""},{"path":"https://vingronlab.github.io/APL/reference/pick_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute statistics to help choose the number of dimensions — pick_dims","title":"Compute statistics to help choose the number of dimensions — pick_dims","text":"Allow user choose 4 different methods (\"avg_inertia\", \"maj_inertia\", \"scree_plot\" \"elbow_rule\") estimate number dimensions best represent data.","code":""},{"path":"https://vingronlab.github.io/APL/reference/pick_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute statistics to help choose the number of dimensions — pick_dims","text":"","code":"pick_dims(   obj,   mat = NULL,   method = \"scree_plot\",   reps = 3,   python = FALSE,   return_plot = FALSE,   ... )  # S4 method for cacomp pick_dims(   obj,   mat = NULL,   method = \"scree_plot\",   reps = 3,   python = FALSE,   return_plot = FALSE,   ... )  # S4 method for Seurat pick_dims(   obj,   mat = NULL,   method = \"scree_plot\",   reps = 3,   python = FALSE,   return_plot = FALSE,   ...,   assay = Seurat::DefaultAssay(obj),   slot = \"counts\" )  # S4 method for SingleCellExperiment pick_dims(   obj,   mat = NULL,   method = \"scree_plot\",   reps = 3,   python = FALSE,   return_plot = FALSE,   ...,   assay = \"counts\" )"},{"path":"https://vingronlab.github.io/APL/reference/pick_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute statistics to help choose the number of dimensions — pick_dims","text":"obj \"cacomp\" object outputted cacomp(), \"Seurat\" object \"CA\" DimReduc object stored, \"SingleCellExperiment\" object \"CA\" dim. reduction stored. mat numeric matrix. sequencing count matrix, gene expression values genes rows samples/cells columns. contain row column names. method String. Either \"scree_plot\", \"avg_inertia\", \"maj_inertia\" \"elbow_rule\" (see Details section). Default \"scree_plot\". reps Integer. Number permutations perform choosing \"elbow_rule\". Default 3. python logical value indicating whether use singular value decomposition python package torch. implementation dramatically speeds computation compared svd() R. return_plot TRUE/FALSE. Whether plot returned choosing \"elbow_rule\". Default FALSE. ... Arguments forwarded methods. assay Character. assay extract count matrix  SVD, e.g. \"RNA\" Seurat objects \"counts\"/\"logcounts\"  SingleCellExperiments. slot Character. Data slot Seurat assay.  E.g. \"data\" \"counts\". Default \"counts\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/pick_dims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute statistics to help choose the number of dimensions — pick_dims","text":"avg_inertia, maj_inertia elbow_rule (return_plot=FALSE) returns integer, indicating suggested number dimensions use. scree_plot returns ggplot object. elbow_rule (return_plot=TRUE) returns list two elements: \"dims\" contains number dimensions \"plot\" ggplot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/pick_dims.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute statistics to help choose the number of dimensions — pick_dims","text":"\"avg_inertia\" calculates number dimensions inertia average inertia. \"maj_inertia\" calculates number dimensions cumulatively explain 80% total inertia. \"scree_plot\" plots scree plot. \"elbow_rule\" formalization commonly used elbow rule. Permutes rows column reruns cacomp() total reps times. number relevant dimensions obtained point line explained inertia permuted data intersects actual data.","code":""},{"path":"https://vingronlab.github.io/APL/reference/pick_dims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute statistics to help choose the number of dimensions — pick_dims","text":"","code":"# Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Run correspondence analysis. ca <- cacomp(obj = cnts) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  # pick dimensions with the elbow rule. Returns list.  set.seed(2358) pd <- pick_dims(obj = ca,                 mat = cnts,                 method = \"elbow_rule\",                 return_plot = TRUE,                 reps = 10) #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100% pd$plot  ca_sub <- subset_dims(ca, dims = pd$dims)  # pick dimensions which explain cumulatively >80% of total inertia. # Returns vector. pd <- pick_dims(obj = ca,                 method = \"maj_inertia\") ca_sub <- subset_dims(ca, dims = pd)  ################################ # pick_dims for Seurat objects # ################################ library(Seurat) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Create Seurat object seu <- CreateSeuratObject(counts = cnts) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') #> Warning: Data is of class matrix. Coercing to dgCMatrix.  # run CA and save in dim. reduction slot. seu <- cacomp(seu, return_input = TRUE, assay = \"RNA\", slot = \"counts\") #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  # pick dimensions pd <- pick_dims(obj = seu,                 method = \"maj_inertia\",                 assay = \"RNA\",                 slot = \"counts\")  ############################################## # pick_dims for SingleCellExperiment objects # ############################################## library(SingleCellExperiment) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Create SingleCellExperiment object sce <- SingleCellExperiment(assays=list(counts=cnts))  # run CA and save in dim. reduction slot. sce <- cacomp(sce, return_input = TRUE, assay = \"counts\")  # pick dimensions pd <- pick_dims(obj = sce,                 method = \"maj_inertia\",                 assay = \"counts\")"},{"path":"https://vingronlab.github.io/APL/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://vingronlab.github.io/APL/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://vingronlab.github.io/APL/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://vingronlab.github.io/APL/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"magrittr::%>%","code":""},{"path":"https://vingronlab.github.io/APL/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe operator — %>%","text":"","code":"x <- 1:100 x %>% head() #> [1] 1 2 3 4 5 6"},{"path":"https://vingronlab.github.io/APL/reference/plot_enrichment.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates plot for results from apl_topGO — plot_enrichment","title":"Generates plot for results from apl_topGO — plot_enrichment","text":"Plots results data frame generated via apl_topGO.","code":""},{"path":"https://vingronlab.github.io/APL/reference/plot_enrichment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates plot for results from apl_topGO — plot_enrichment","text":"","code":"plot_enrichment(genenr, ntop = 10)"},{"path":"https://vingronlab.github.io/APL/reference/plot_enrichment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates plot for results from apl_topGO — plot_enrichment","text":"genenr data.frame. gene enrichment results table. ntop numeric. Number elements plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/plot_enrichment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates plot for results from apl_topGO — plot_enrichment","text":"Returns ggplot plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/plot_enrichment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates plot for results from apl_topGO — plot_enrichment","text":"","code":"library(Seurat) set.seed(1234) cnts <- GetAssayData(pbmc_small, assay = \"RNA\", slot = \"counts\") cnts <- as.matrix(cnts)  # Run CA on example from Seurat  ca <- cacomp(pbmc_small,              princ_coords = 3,              return_input = FALSE,              assay = \"RNA\",              slot = \"counts\") #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored.  grp <- which(Idents(pbmc_small) == 2) ca <- apl_coords(ca, group = grp) ca <- apl_score(ca,                 mat = cnts) #>    |                                                                               |                                                                      |   0%   |                                                                               |=======                                                               |  10%   |                                                                               |==============                                                        |  20%   |                                                                               |=====================                                                 |  30%   |                                                                               |============================                                          |  40%   |                                                                               |===================================                                   |  50%   |                                                                               |==========================================                            |  60%   |                                                                               |=================================================                     |  70%   |                                                                               |========================================================              |  80%   |                                                                               |===============================================================       |  90%   |                                                                               |======================================================================| 100%  enr <- apl_topGO(ca,                  ontology = \"BP\",                  organism = \"hs\") #>  #> groupGOTerms: \tGOBPTerm, GOMFTerm, GOCCTerm environments built. #>  #> Building most specific GOs ..... #> \t( 1326 GO terms found. ) #>  #> Build GO DAG topology .......... #> \t( 3590 GO terms and 7903 relations. ) #>  #> Annotating nodes ............... #> \t( 207 genes annotated to the GO terms. ) #>  #> \t\t\t -- Elim Algorithm --  #>  #> \t\t the algorithm is scoring 612 nontrivial nodes #> \t\t parameters:  #> \t\t\t test statistic: fisher #> \t\t\t cutOff: 0.01 #>  #> \t Level 12:\t5 nodes to be scored\t(0 eliminated genes) #>  #> \t Level 11:\t13 nodes to be scored\t(0 eliminated genes) #>  #> \t Level 10:\t22 nodes to be scored\t(8 eliminated genes) #>  #> \t Level 9:\t37 nodes to be scored\t(11 eliminated genes) #>  #> \t Level 8:\t64 nodes to be scored\t(17 eliminated genes) #>  #> \t Level 7:\t88 nodes to be scored\t(17 eliminated genes) #>  #> \t Level 6:\t119 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 5:\t119 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 4:\t83 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 3:\t47 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 2:\t14 nodes to be scored\t(24 eliminated genes) #>  #> \t Level 1:\t1 nodes to be scored\t(24 eliminated genes)  plot_enrichment(enr)"},{"path":"https://vingronlab.github.io/APL/reference/recompute.html","id":null,"dir":"Reference","previous_headings":"","what":"Recompute missing values of cacomp object. — recompute","title":"Recompute missing values of cacomp object. — recompute","text":"caobj needs std_coords_cols, prin_coords_rows D  calculated. remainder calculated. Future updates might extend functionality.","code":""},{"path":"https://vingronlab.github.io/APL/reference/recompute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recompute missing values of cacomp object. — recompute","text":"","code":"recompute(calist, mat, rm_zeros = TRUE, top = nrow(mat), ...)"},{"path":"https://vingronlab.github.io/APL/reference/recompute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recompute missing values of cacomp object. — recompute","text":"calist list std_coords_cols, prin_coords_rows D. mat matrix cacomp object derived . rm_zeros Removes rows & columns containing zeros. top number variable rows keep running cacomp.  Default nrow(mat). ... arguments forwarded cacomp.","code":""},{"path":"https://vingronlab.github.io/APL/reference/recompute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recompute missing values of cacomp object. — recompute","text":"cacomp object additional calculated row_masses, col_masses,  std_coords_rows, U V.","code":""},{"path":"https://vingronlab.github.io/APL/reference/rm_zeros.html","id":null,"dir":"Reference","previous_headings":"","what":"removes 0-only rows and columns in a matrix. — rm_zeros","title":"removes 0-only rows and columns in a matrix. — rm_zeros","text":"removes 0-rows columns matrix.","code":""},{"path":"https://vingronlab.github.io/APL/reference/rm_zeros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"removes 0-only rows and columns in a matrix. — rm_zeros","text":"","code":"rm_zeros(obj)"},{"path":"https://vingronlab.github.io/APL/reference/rm_zeros.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"removes 0-only rows and columns in a matrix. — rm_zeros","text":"obj matrix.","code":""},{"path":"https://vingronlab.github.io/APL/reference/rm_zeros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"removes 0-only rows and columns in a matrix. — rm_zeros","text":"Input matrix rows & columns consisting 0 removed.","code":""},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and plot Association Plot — runAPL","title":"Compute and plot Association Plot — runAPL","text":"Computes singular value decomposition coordinates  Association Plot. runAPL.SingleCellExperiment: Computes singular value decomposition  coordinates Association Plot SingleCellExperiment objects  reducedDim(obj, \"CA\") slot (optional). runAPL.Seurat: Computes singular value decomposition coordinates  Association Plot Seurat objects, optionally DimReduc Object  \"CA\" slot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and plot Association Plot — runAPL","text":"","code":"runAPL(   obj,   group,   caobj = NULL,   dims = NULL,   nrow = 10,   top = 5000,   score = TRUE,   mark_rows = NULL,   mark_cols = caobj@group,   reps = 3,   python = FALSE,   row_labs = TRUE,   col_labs = TRUE,   type = \"plotly\",   show_cols = FALSE,   show_rows = TRUE,   score_cutoff = 0,   score_color = \"rainbow\",   pd_method = \"elbow_rule\",   pd_reps = 1,   pd_use = TRUE,   ... )  # S4 method for matrix runAPL(   obj,   group,   caobj = NULL,   dims = NULL,   nrow = 10,   top = 5000,   score = TRUE,   mark_rows = NULL,   mark_cols = NULL,   reps = 3,   python = FALSE,   row_labs = TRUE,   col_labs = TRUE,   type = \"plotly\",   show_cols = FALSE,   show_rows = TRUE,   score_cutoff = 0,   score_color = \"rainbow\",   pd_method = \"elbow_rule\",   pd_reps = 1,   pd_use = TRUE,   ... )  # S4 method for SingleCellExperiment runAPL(   obj,   group,   caobj = NULL,   dims = NULL,   nrow = 10,   top = 5000,   score = TRUE,   mark_rows = NULL,   mark_cols = NULL,   reps = 3,   python = FALSE,   row_labs = TRUE,   col_labs = TRUE,   type = \"plotly\",   show_cols = FALSE,   show_rows = TRUE,   score_cutoff = 0,   score_color = \"rainbow\",   pd_method = \"elbow_rule\",   pd_reps = 1,   pd_use = TRUE,   ...,   assay = \"counts\" )  # S4 method for Seurat runAPL(   obj,   group,   caobj = NULL,   dims = NULL,   nrow = 10,   top = 5000,   score = TRUE,   mark_rows = NULL,   mark_cols = NULL,   reps = 3,   python = FALSE,   row_labs = TRUE,   col_labs = TRUE,   type = \"plotly\",   show_cols = FALSE,   show_rows = TRUE,   score_cutoff = 0,   score_color = \"rainbow\",   pd_method = \"elbow_rule\",   pd_reps = 1,   pd_use = TRUE,   ...,   assay = Seurat::DefaultAssay(obj),   slot = \"counts\" )"},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and plot Association Plot — runAPL","text":"obj numeric matrix, Seurat SingleCellExperiment object.  sequencing count matrix, gene expression values genes rows  samples/cells columns. contain row column names. group Numeric/Character. Vector indices column names  columns calculate centroid/x-axis direction. caobj \"cacomp\" object outputted `cacomp()`. supplied  calculated. Default NULL. dims Integer. Number dimensions keep. Default NULL (keeps  dimensions). nrow Integer. top nrow scored row labels added  plot score = TRUE. Default 10. top Integer. Number variable rows retain. Default 5000  rows (set NULL keep ). score Logical. Whether rows scored ranked. Ignored  vector supplied mark_rows. Default TRUE. mark_rows Character vector. Names rows highlighted  plot. NULL, score ignored. Default NULL. mark_cols Character vector. Names cols highlighted  plot. reps Integer. Number permutations scoring. Default 3. python logical value indicating whether use singular value  decomposition python package torch. implementation dramatically speeds computation compared `svd()`  R. row_labs Logical. Whether labels rows indicated rows_idx  labeled text. Default TRUE. col_labs Logical. Whether labels columns indicated cols_idx  labeled text. Default TRUE. type \"ggplot\"/\"plotly\". static plot string \"ggplot\",  interactive plot \"plotly\". Default \"plotly\". show_cols Logical. Whether column points plotted. show_rows Logical. Whether row points plotted. score_cutoff Numeric. Rows (genes) score >= score_cutoff colored according score show_score = TRUE. score_color Either \"rainbow\" \"viridis\". pd_method method use pick_dims (pick_dims). pd_reps Number repetitions performed using \"elbow_rule\"  `pick_dims`. (pick_dims) pd_use Whether use `pick_dims` (pick_dims) determine number dimensions. Ignored `dims` set user. ... Arguments forwarded methods. assay Character. assay extract count matrix  SVD, e.g. \"RNA\" Seurat objects \"counts\"/\"logcounts\"  SingleCellExperiments. slot character. Seurat assay slot extract  count matrix.","code":""},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and plot Association Plot — runAPL","text":"Association Plot (plotly object).","code":""},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute and plot Association Plot — runAPL","text":"function wrapper calls `cacomp()`, `apl_coords()`,  `apl_score()` finally `apl()` ease use. chosen defaults useful genomics experiments,  fine grained control functions can also run individually results. score = FALSE, nrow reps ignored. mark_rows NULL score  treated FALSE.","code":""},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute and plot Association Plot — runAPL","text":"Association Plots: Visualizing associations high-dimensional  correspondence analysis biplots  Elzbieta Gralinska, Martin Vingron  bioRxiv 2020.10.23.352096; doi: https://doi.org/10.1101/2020.10.23.352096","code":""},{"path":"https://vingronlab.github.io/APL/reference/runAPL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and plot Association Plot — runAPL","text":"","code":"set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # (nonsensical) APL runAPL(obj = cnts,        group = 1:10,        dims = 10,        top = 500,        score = TRUE,        show_cols = TRUE,        type = \"ggplot\") #>  #> Both dims and pd_use set. Using dimensions specified by dims. #>  #> Using 10 dimensions. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======================                                               |  33%   |                                                                               |===============================================                       |  67%   |                                                                               |======================================================================| 100%   ######################## # SingleCellExperiment # ######################## library(SingleCellExperiment) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  sce <- SingleCellExperiment(assays=list(counts=cnts))  # (nonsensical) APL runAPL(obj = sce,        group = 1:10,        dims = 10,        top = 500,        score = TRUE,        show_cols = TRUE,        type = \"ggplot\",        assay = \"counts\") #>  #> Both dims and pd_use set. Using dimensions specified by dims. #>  #> Using 10 dimensions. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======================                                               |  33%   |                                                                               |===============================================                       |  67%   |                                                                               |======================================================================| 100%   ########### # Seurat  # ########### library(Seurat) set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},                x = sample(1:100, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  seu <- CreateSeuratObject(counts = cnts) #> Warning: Feature names cannot have underscores ('_'), replacing with dashes ('-') #> Warning: Data is of class matrix. Coercing to dgCMatrix.  # (nonsensical) APL runAPL(obj = seu,        group = 1:10,        dims = 10,        top = 500,        score = TRUE,        show_cols = TRUE,        type = \"ggplot\",        assay = \"RNA\",        slot = \"counts\") #>  #> Both dims and pd_use set. Using dimensions specified by dims. #>  #> Using 10 dimensions. #>    |                                                                               |                                                                      |   0%   |                                                                               |=======================                                               |  33%   |                                                                               |===============================================                       |  67%   |                                                                               |======================================================================| 100%"},{"path":"https://vingronlab.github.io/APL/reference/run_cacomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for `cacomp` — run_cacomp","title":"Internal function for `cacomp` — run_cacomp","text":"`run_cacomp` performs correspondence analysis matrix returns  transformed data.","code":""},{"path":"https://vingronlab.github.io/APL/reference/run_cacomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for `cacomp` — run_cacomp","text":"","code":"run_cacomp(   obj,   coords = TRUE,   princ_coords = 3,   python = FALSE,   dims = NULL,   top = 5000,   inertia = TRUE,   rm_zeros = TRUE,   ... )"},{"path":"https://vingronlab.github.io/APL/reference/run_cacomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for `cacomp` — run_cacomp","text":"obj numeric matrix Seurat/SingleCellExperiment object.  sequencing count matrix, gene expression values genes rows  samples/cells columns. contain row column names. coords Logical. Indicates whether CA standard coordinates  calculated. Default TRUE princ_coords Integer. Number indicating whether principal  coordinates calculated rows (=1), columns (=2),  (=3) none (=0). Default 1. python logical value indicating whether use singular-value  decomposition python package torch. implementation dramatically speeds computation compared `svd()`  R. dims Integer. Number CA dimensions retain. Default NULL  (keeps dimensions). top Integer. Number variable rows retain. Default 5000. inertia Logical.. Whether total, row column inertias  calculated returned. Default TRUE. rm_zeros Logical. Whether rows & cols containing 0s  removed. Keeping zero rows/cols might lead unexpected results.  Default TRUE. ... Arguments forwarded methods.","code":""},{"path":"https://vingronlab.github.io/APL/reference/run_cacomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function for `cacomp` — run_cacomp","text":"Returns named list class \"cacomp\" components U, V D: results SVD. row_masses col_masses: Row columns masses. top_rows: many variable rows/genes retained  analysis. tot_inertia, row_inertia col_inertia: inertia = TRUE. Total,  row column inertia respectively.","code":""},{"path":"https://vingronlab.github.io/APL/reference/run_cacomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function for `cacomp` — run_cacomp","text":"calculation performed according work Michael Greenacre.  Singular value decomposition can performed either base R function `svd` preferably  faster pytorch implementation (python = TRUE). working large matrices,  CA coordinates principal coordinates computed needed save  computational time.","code":""},{"path":"https://vingronlab.github.io/APL/reference/run_cacomp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Internal function for `cacomp` — run_cacomp","text":"Greenacre, M. Correspondence Analysis Practice, Third Edition, 2017.","code":""},{"path":"https://vingronlab.github.io/APL/reference/scree_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Scree Plot — scree_plot","title":"Scree Plot — scree_plot","text":"Plots scree plot.","code":""},{"path":"https://vingronlab.github.io/APL/reference/scree_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scree Plot — scree_plot","text":"","code":"scree_plot(df)"},{"path":"https://vingronlab.github.io/APL/reference/scree_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scree Plot — scree_plot","text":"df data frame columns \"dims\" \"inertia\".","code":""},{"path":"https://vingronlab.github.io/APL/reference/scree_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scree Plot — scree_plot","text":"Returns ggplot object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/show.cacomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints cacomp object — show.cacomp","title":"Prints cacomp object — show.cacomp","text":"Provides user friendly printing cacomp objects.","code":""},{"path":"https://vingronlab.github.io/APL/reference/show.cacomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints cacomp object — show.cacomp","text":"","code":"show.cacomp(object)  # S4 method for cacomp show(object)"},{"path":"https://vingronlab.github.io/APL/reference/show.cacomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints cacomp object — show.cacomp","text":"object cacomp object print","code":""},{"path":"https://vingronlab.github.io/APL/reference/show.cacomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prints cacomp object — show.cacomp","text":"prints summary information cacomp object.","code":""},{"path":"https://vingronlab.github.io/APL/reference/show.cacomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints cacomp object — show.cacomp","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(obj = cnts, princ_coords = 3, top = 5)  ca #> cacomp object with 3 columns, 5 rows and 2 dimensions. #> Calc. standard coord.:  std_coords_rows, std_coords_cols #> Calc. principal coord.: prin_coords_rows, prin_coords_cols #> Calc. APL coord.:        #> Explained inertia:      96% Dim1, 4% Dim2"},{"path":"https://vingronlab.github.io/APL/reference/subset_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset dimensions of a caobj — subset_dims","title":"Subset dimensions of a caobj — subset_dims","text":"Subsets dimensions according user input.","code":""},{"path":"https://vingronlab.github.io/APL/reference/subset_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset dimensions of a caobj — subset_dims","text":"","code":"subset_dims(caobj, dims)"},{"path":"https://vingronlab.github.io/APL/reference/subset_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset dimensions of a caobj — subset_dims","text":"caobj caobj. dims Integer. Number dimensions.","code":""},{"path":"https://vingronlab.github.io/APL/reference/subset_dims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset dimensions of a caobj — subset_dims","text":"Returns caobj.","code":""},{"path":"https://vingronlab.github.io/APL/reference/subset_dims.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset dimensions of a caobj — subset_dims","text":"","code":"# Simulate scRNAseq data. cnts <- data.frame(cell_1 = rpois(10, 5),                    cell_2 = rpois(10, 10),                    cell_3 = rpois(10, 20)) rownames(cnts) <- paste0(\"gene_\", 1:10) cnts <- as.matrix(cnts)  # Run correspondence analysis. ca <- cacomp(cnts) #> Warning:  #> Parameter top is >nrow(obj) and therefore ignored. ca <- subset_dims(ca, 2)"},{"path":"https://vingronlab.github.io/APL/reference/var_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Find most variable rows — var_rows","title":"Find most variable rows — var_rows","text":"Calculates variance chi-square component matrix selects  rows highest variance, e.g. 5,000.","code":""},{"path":"https://vingronlab.github.io/APL/reference/var_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find most variable rows — var_rows","text":"","code":"var_rows(mat, top = 5000)"},{"path":"https://vingronlab.github.io/APL/reference/var_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find most variable rows — var_rows","text":"mat numeric matrix. sequencing count matrix, gene expression values genes rows samples/cells columns. contain row column names. top Integer. Number variable rows retain. Default 5000.","code":""},{"path":"https://vingronlab.github.io/APL/reference/var_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find most variable rows — var_rows","text":"Returns matrix, consists top variable rows mat.","code":""},{"path":"https://vingronlab.github.io/APL/reference/var_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find most variable rows — var_rows","text":"","code":"set.seed(1234)  # Simulate counts cnts <- mapply(function(x){rpois(n = 500, lambda = x)},               x = sample(1:20, 50, replace = TRUE)) rownames(cnts) <- paste0(\"gene_\", 1:nrow(cnts)) colnames(cnts) <- paste0(\"cell_\", 1:ncol(cnts))  # Choose top 5000 most variable genes cnts <- var_rows(mat = cnts, top = 5000) #> Warning: Top is larger than the number of rows in matrix. Top was set to nrow(mat)."},{"path":"https://vingronlab.github.io/APL/news/index.html","id":"changes-in-version-0990-2021-12-06","dir":"Changelog","previous_headings":"","what":"Changes in version 0.99.0 (2021-12-06)","title":"Changes in version 0.99.0 (2021-12-06)","text":"Submitted Bioconductor","code":""}]
