% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apl.R
\name{apl_topGO}
\alias{apl_topGO}
\title{Find rows most highly associated with a condition through random APs.}
\usage{
apl_topGO(
  caobj,
  ontology,
  organism = "hs",
  ngenes = 1000,
  score_cutoff = 0,
  use_coords = FALSE,
  return_plot = FALSE,
  top_res = 15
)
}
\arguments{
\item{caobj}{A "cacomp" object with principal row coordinates and 
standardized column coordinates calculated.}

\item{ontology}{Character string. Chooses GO sets for 'BP' 
(biological processes), 'CC' (cell compartment) or 'MF' (molecular function).}

\item{organism}{Character string. Either 'hs' (homo sapiens), 'mm' 
(mus musculus) or the name of the organism package such as 'org.*.eg.db'.}

\item{ngenes}{Numeric. Number of top ranked genes to test for 
overrepresentation.}

\item{score_cutoff}{numeric. S-alpha score cutoff. Only genes with a score 
larger will be tested.}

\item{use_coords}{Logical. Whether the x-coordinates of the row APL 
coordinates should be used for ranking.
Only recommended when no S-alpha score (see apl_score()) can be calculated.}

\item{return_plot}{Logical. Whether a plot of significant gene sets should 
be additionally returned.}

\item{top_res}{Numeric. Number of top scoring genes to plot.}
}
\value{
Returns the input "cacomp" object with "APL_score" component added.
APL_score contains a data frame with ranked rows, their score and their original row number.

A data.frame containing the gene sets with the highest overrepresentation.
}
\description{
Ranks rows by a calculated score which balances the association of the row with the condition and how associated it is with other conditions.

This function uses the Kolmogorov-Smirnov test as implemented by the package 
topGO to test for overrepresentation in Gene Ontology gene sets.
}
\details{
The score is calculated by choosing random directions in space to calculate APLs for the rows. 
\deqn{S_{alpha}(x,y)=x-\frac{y}{\tan\alpha}}
By default the permutation is repeated 300 times, and is independent of group size, so the same cutoff is applicable to all groups.
If store_perm is TRUE the calculated cutoff is stored as an attribute to ca$permuted_data to prevent recalculation when running with identical parameters.

For a chosen group of cells/samples,
the top 'ngenes' group specific genes are used for gene overrepresentation 
analysis.
The genes are ranked either by the precomputed APL score, or, if
not available by their APL x-coordinates.
}
\examples{
library(Seurat)
set.seed(1234)
cnts <- GetAssayData(pbmc_small, slot = "counts")
cnts <- as.matrix(cnts)

# Run CA on example from Seurat

ca <- cacomp(pbmc_small,
             princ_coords = 3,
             return_input = FALSE,
             assay = "RNA",
             slot = "counts")

grp <- which(Idents(pbmc_small) == 2)
ca <- apl_coords(ca, group = grp)
ca <- apl_score(ca,
                mat = cnts)

enr <- apl_topGO(ca,
                 ontology = "BP",
                 organism = "hs")

plot_enrichment(enr)
}
\references{
Adrian Alexa and Jorg Rahnenfuhrer \cr
topGO: Enrichment Analysis for Gene Ontology. \cr
R package version 2.42.0.
}
