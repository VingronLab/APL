% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apl.R
\name{apl_score}
\alias{apl_score}
\title{Find rows most highly associated with a condition}
\usage{
apl_score(
  caobj,
  mat,
  dims,
  group,
  reps = 10,
  quant = 0.99,
  python = TRUE,
  row_centroid = FALSE
)
}
\arguments{
\item{caobj}{A "cacomp" object with principal row coordinates and standard column coordinates calculated.}

\item{mat}{A numeric matrix. For sequencing a count matrix, gene expression values with genes in rows and samples/cells in columns.
Should contain row and column names.}

\item{dims}{Integer. Number of CA dimensions to retain. Needs to be the same as in caobj!}

\item{group}{Vector of indices of the columns to calculate centroid/x-axis direction.}

\item{reps}{Integer. Number of permutations to perform. Default = 10.}

\item{quant}{Numeric. Single number between 0 and 1 indicating the quantile used to calculate the cutoff. Default 0.99.}

\item{python}{A logical value indicating whether to use singular-value decomposition from the python package torch.
This implementation dramatically speeds up computation compared to `svd()` in R.}

\item{row_centroid}{TRUE/FALSE. Whether the the columns should be scored instead of the rows. Default FALSE.}
}
\value{
Returns the input "cacomp" object with "APL_score" component added.
APL_score contains a data frame with ranked rows, their score and their original row number.
}
\description{
Ranks rows by a calculated score which balances the association of the row with the condition and how associated it is with other conditions.
}
\details{
The score is calculated by permuting the values of each row to determine the cutoff angle of the 99% quantile.
\deqn{S_{alpha}(x,y)=x-\frac{y}{\tan\alpha}}
By default the permutation is repeated 10 times, but for very large matrices this can be reduced.
}
